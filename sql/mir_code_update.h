// CODE GENERATED BY CODEGEN SCRIPT, DO NOT EDIT!
constexpr std::string_view mir_code_update_template = R"(
M0:	module
export	update_row_jit
proto0:	proto	i32, u64:U0_table
proto1:	proto	i32, u64:U0_thd, u64:U0_table, u64:U0_fields, u64:U0_values
proto2:	proto	u64:U0_table
proto3:	proto	i32, u64:U0_table, u64:U0_found, u64:U0_ignore
proto4:	proto	i32, u64:U0_table, u64:U0_limit, u64:U0_updated, u64:U0_dup_key_found
proto5:	proto	i32, u64:U0_table, u64:U0_thd, u64:U0_rows_inserted
proto6:	proto	i32, u64:U0_table, u64:U0_rows_inserted
proto7:	proto	i32, u64:U0_table, u64:U0_thd, u64:U0_fields
proto8:	proto	i32, u64:U0_table, u64:U0_limit, u64:U0_dup_key_found, u64:U0_updated, i32:i0_will_batch
	import	process_triggers_after
	import	process_triggers_before
	import	process_batch_update
	import	process_update_row
	import	process_cut_fields_for_portion_of_time
	import	process_vers_update_end
	import	process_vers_insert_history
	import	process_check_view_conds
	import	period_make_inserts
	import	process_fill_record
	import	compare_record
	import	process_dec_limit_update
update_row_jit:	func	i32, u64:U0_table, u64:U0_thd, u64:U0_fields, u64:U0_values, u64:U0_limit, u64:U0_updated, u64:U0_dup_key_found, u64:U0_rows_inserted, u64:U0_found, u64:U0_updated_or_same, u64:U0_ignore, i32:i0_can_compare_record, i32:i0_code_err_record_is_same, i32:i0_will_batch
	local	i64:i0_error, i64:i_0, i64:I_1, i64:i_2, i64:I_3, i64:U_4, i64:i0_need_update, i64:I_5
	local	i64:i_6, i64:I_7, i64:i_8, i64:i_9, i64:I_10, i64:I_11, i64:i_12, i64:I_13
	local	i64:i_14, i64:i_15, i64:i6_record_was_same, i64:i_16, i64:I_17, i64:I_18, i64:U_19, i64:U_20
	local	i64:I_21, i64:i_22, i64:I_23, i64:U_24, i64:i_25, i64:I_26, i64:i_27, i64:I_28
	local	i64:i_29, i64:I_30

# 14 args, 34 locals, 0 globals
	mov	i0_error, 0
	bf	L2, $1
L1:
	call	proto0, process_cut_fields_for_portion_of_time, i_0, U0_table
	mov	i0_error, i_0
	ext32	I_1, i0_error
	bf	L5, I_1
L4:
	ret	i0_error
	jmp	L6
L5:
L6:
	jmp	L3
L2:
L3:
	call	proto1, process_fill_record, i_2, U0_thd, U0_table, U0_fields, U0_values
	ext32	I_3, i_2
	bf	L8, I_3
L7:
	ret	1
	jmp	L9
L8:
L9:
	mov	U_4, u64:(U0_found):L
	add	U_4, U_4, 1
	mov	u64:(U0_found):L, U_4
	ext32	I_5, i0_can_compare_record
	bf	L11, I_5
L10:
	call	proto0, compare_record, i_6, U0_table
	ext32	I_7, i_6
	bf	L12, I_7
L11:
	mov	i_8, 1
	jmp	L13
L12:
	mov	i_8, 0
L13:
	mov	i0_need_update, i_8
	bf	L15, $2
L14:
	call	proto1, process_triggers_before, i_9, U0_thd, U0_table, U0_fields, U0_values
	mov	i0_error, i_9
	ext32	I_10, i0_error
	bf	L18, I_10
L17:
	ret	i0_error
	jmp	L19
L18:
L19:
	jmp	L16
L15:
L16:
	ext32	I_11, i0_need_update
	bf	L21, I_11
L20:
	bf	L24, $3
L23:
	call	proto2, process_vers_update_end, U0_table
	jmp	L25
L24:
L25:
	bf	L27, $4
L26:
	call	proto3, process_check_view_conds, i_12, U0_table, U0_found, U0_ignore
	mov	i0_error, i_12
	ext32	I_13, i0_error
	bf	L30, I_13
L29:
	ret	i0_error
	jmp	L31
L30:
L31:
	jmp	L28
L27:
L28:
	bf	L33, $5
L32:
	call	proto4, process_batch_update, i_14, U0_table, U0_limit, U0_updated, U0_dup_key_found
	mov	i0_error, i_14
	jmp	L34
L33:
	call	proto0, process_update_row, i_15, U0_table
	mov	i0_error, i_15
L34:
	eqs	i_16, i0_error, $9
	mov	i6_record_was_same, i_16
	ext32	I_17, i6_record_was_same
	bf	L36, I_17
L35:
	mov	i0_error, 0
	jmp	L37
L36:
	ext32	I_18, i0_error
	bf	L39, I_18
L38:
	ret	i0_error
	jmp	L40
L39:
	mov	U_19, u64:(U0_updated):L
	add	U_19, U_19, 1
	mov	u64:(U0_updated):L, U_19
L40:
L37:
	mov	U_20, u64:(U0_updated_or_same):L
	add	U_20, U_20, 1
	mov	u64:(U0_updated_or_same):L, U_20
	bf	L42, $1
L44:
	ext32	I_21, i6_record_was_same
	bt	L42, I_21
L41:
	call	proto5, period_make_inserts, i_22, U0_table, U0_thd, U0_rows_inserted
	mov	i0_error, i_22
	ext32	I_23, i0_error
	bf	L46, I_23
L45:
	ret	i0_error
	jmp	L47
L46:
L47:
	jmp	L43
L42:
L43:
	jmp	L22
L21:
	mov	U_24, u64:(U0_updated_or_same):L
	add	U_24, U_24, 1
	mov	u64:(U0_updated_or_same):L, U_24
L22:
	bf	L49, $6
L48:
	call	proto6, process_vers_insert_history, i_25, U0_table, U0_rows_inserted
	mov	i0_error, i_25
	ext32	I_26, i0_error
	bf	L52, I_26
L51:
	ret	i0_error
	jmp	L53
L52:
L53:
	jmp	L50
L49:
L50:
	bf	L55, $7
L54:
	call	proto7, process_triggers_after, i_27, U0_table, U0_thd, U0_fields
	mov	i0_error, i_27
	ext32	I_28, i0_error
	bf	L58, I_28
L57:
	ret	i0_error
	jmp	L59
L58:
L59:
	jmp	L56
L55:
L56:
	bf	L61, $8
L60:
	call	proto8, process_dec_limit_update, i_29, U0_table, U0_limit, U0_dup_key_found, U0_updated, $5
	mov	i0_error, i_29
	ext32	I_30, i0_error
	bf	L64, I_30
L63:
	ret	i0_error
	jmp	L65
L64:
L65:
	jmp	L62
L61:
L62:
	ret	0
	endfunc
	endmodule
)";
