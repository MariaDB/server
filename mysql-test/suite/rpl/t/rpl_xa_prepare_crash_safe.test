# ==== Purpose ====
#
# Test verifies that XA PREPARE transactions are crash safe.
#
# ==== Implementation ====
#
# Steps:
#    0 - Generate 3 explicit XA transactions. 'xa1', 'xa2' and 'xa3'.
#        Using debug simulation hold the execution of second XA PREPARE
#        statement after the XA PREPARE is written to the binary log.
#        With this the prepare will not be done in engine.
#    1 - For 'xa3' allow the PREPARE statement to be written to binary log and
#        simulate server crash.
#    2 - Restart the server. The recovery code should successfully recover
#        'xa2' and 'xa3'.
#    3 - When server is up, execute XA RECOVER and verify that 'xa2' and 'xa3'
#        are present along with 'xa1'.
#    4 - Commit all the XA transactions and verify their correctness.
#
# ==== References ====
#
# MDEV-21469: Implement crash-safe logging of the user XA


--source include/have_innodb.inc
--source include/master-slave.inc
--source include/have_debug.inc

connect (master2,localhost,root,,);
--connection master
CALL mtr.add_suppression("Found 1 prepared XA transactions");
CALL mtr.add_suppression("Found 2 prepared XA transactions");
CALL mtr.add_suppression("Found 3 prepared XA transactions");

CREATE TABLE t ( f INT ) ENGINE=INNODB;
XA START 'xa1';
INSERT INTO t VALUES (20);
XA END 'xa1';
XA PREPARE 'xa1';
--sync_slave_with_master
--source include/stop_slave.inc

--connection master1
use test;
xa start 'xa2';
insert into t values (30);
xa end 'xa2';
SET DEBUG_SYNC="simulate_hang_after_binlog_prepare SIGNAL reached WAIT_FOR go";
send xa prepare 'xa2';

--connection master2
let $wait_condition=
  SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.PROCESSLIST
    WHERE STATE like "debug sync point: simulate_hang_after_binlog_prepare%";
--source include/wait_condition.inc

XA START 'xa3';
INSERT INTO t VALUES (40);
XA END 'xa3';

--write_file $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
wait
EOF

SET GLOBAL DEBUG_DBUG="d,simulate_crash_after_binlog_prepare";
--error 2013 # CR_SERVER_LOST
XA PREPARE 'xa3';
--source include/wait_until_disconnected.inc

--connection master1
--error 2013
--reap
--source include/wait_until_disconnected.inc

--connection master
--source include/wait_until_disconnected.inc

#
# Server restart
#
--append_file $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
restart
EOF

connection default;
--enable_reconnect
--source include/wait_until_connected_again.inc

# rpl_end.inc needs to use the connection server_1
connection server_1;
--enable_reconnect
--source include/wait_until_connected_again.inc

--connection master
--enable_reconnect
--source include/wait_until_connected_again.inc


--connection slave
--source include/start_slave.inc
--sync_with_master

--connection master
SELECT * FROM t;
XA RECOVER;
XA COMMIT 'xa1';
XA COMMIT 'xa2';
XA COMMIT 'xa3';
SELECT * FROM t;
--sync_slave_with_master

SELECT * FROM t;

--connection master
DROP TABLE t;
--sync_slave_with_master
--source include/rpl_end.inc
