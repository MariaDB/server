# ==== Purpose ====
#
# Test verifies that XA ROLLBACK statements are crash safe.
#
# ==== Implementation ====
#
# Steps:
#    0 - Generate 2 explicit XA transactions. 'xa1' and 'xa2'.
#        'xa1' will be prepared and committed.
#    1 - For 'xa2' let the XA ROLLBACK be done in binary log and crash the
#        server so that it is not committed in engine.
#    2 - Restart the server. The recovery code should successfully recover
#        'xa2'. The ROLLBACK should be executed during recovery.
#    3 - Check the data in table. Only one row should be present in table.
#    4 - Trying to rollback 'xa2' should report unknown 'XA' error as rollback
#        is already complete during recovery.
#
# ==== References ====
#
# MDEV-21469: Implement crash-safe logging of the user XA

--source include/have_innodb.inc
--source include/master-slave.inc
--source include/have_debug.inc

connect (master2,localhost,root,,);
--connection master
CALL mtr.add_suppression("Found 1 prepared XA transactions");

CREATE TABLE t ( f INT ) ENGINE=INNODB;
XA START 'xa1';
INSERT INTO t VALUES (20);
XA END 'xa1';
XA PREPARE 'xa1';
XA COMMIT 'xa1';
--sync_slave_with_master
--source include/stop_slave.inc

--connection master1
XA START 'xa2';
INSERT INTO t VALUES (40);
XA END 'xa2';
XA PREPARE 'xa2';

--write_file $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
wait
EOF

SET GLOBAL DEBUG_DBUG="d,simulate_crash_after_binlog_commit_or_rollback";
--error 2013 # CR_SERVER_LOST
XA ROLLBACK 'xa2';
--source include/wait_until_disconnected.inc

--connection master1
--source include/wait_until_disconnected.inc

--connection master
--source include/wait_until_disconnected.inc

#
# Server restart
#
--append_file $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
restart
EOF

connection default;
--enable_reconnect
--source include/wait_until_connected_again.inc

# rpl_end.inc needs to use the connection server_1
connection server_1;
--enable_reconnect
--source include/wait_until_connected_again.inc

--connection master
--enable_reconnect
--source include/wait_until_connected_again.inc

let $log_error_= `SELECT @@GLOBAL.log_error`;
if(!$log_error_)
{
    # MySQL Server on windows is started with --console and thus
    # does not know the location of its .err log, use default location
    let $log_error_ = $MYSQLTEST_VARDIR/log/mysqld.1.err;
}
--let $assert_file= $log_error_
--let $assert_only_after = CURRENT_TEST: rpl.rpl_xa_rollback_commit_crash_safe

--let $assert_text= Binlog XA ROLLBACK event should be successfully recovered
--let $assert_select=Recovered binlog event XA ROLLBACK.*successfully applied\$
--let $assert_count= 1
--source include/assert_grep.inc

--let $assert_text= Binlog XA crash recovery should successfully finish
--let $assert_select=Binlog XA crash recovery finished
--let $assert_count= 1
--source include/assert_grep.inc

--connection slave
--source include/start_slave.inc
--sync_with_master

--connection master
SELECT * FROM t;
XA RECOVER;
--error 1397 # ER_XAER_NOTA
XA ROLLBACK 'xa2';
SELECT * FROM t;
--sync_slave_with_master

SELECT * FROM t;

--connection master
DROP TABLE t;
--sync_slave_with_master
--source include/rpl_end.inc
