# ==== Purpose ====
#
# Test verifies that no ASAN issues are reported at the time of writing DROP
# TEMPORARY TABLE statements to binary log as part of session cleanup.
#
# ==== Implementation ====
#
# Steps:
#    1 - Create a new connection named 'con1'.
#    2 - Create a temporary table named 'tmp' as part of connection 'con1'.
#    3 - Try to disconnect the current session when a CREATE .. SELECT
#        statement is in the middle of execution.
#    4 - Observe that no ASAN issue is reported.
#
# ==== References ====
#
# MDEV-19716: ASAN use-after-poison in Query_log_event::Query_log_event /
# THD::log_events_and_free_tmp_shares

--source include/have_binlog_format_mixed_or_statement.inc
--source include/master-slave.inc

--connect (con1,localhost,root,,)
CREATE TEMPORARY TABLE tmp (a INT);

--send CREATE TABLE non_existing_db.t SELECT 1 AS b
--disconnect con1
--source include/wait_until_disconnected.inc

--connection master
--let $wait_binlog_event= DROP
--source include/wait_for_binlog_event.inc
sync_slave_with_master;

--connection slave
--let $open_temp_tbl_count=query_get_value(show status like 'Slave_open_temp_tables', Value, 1)
--let $assert_cond= "open_temp_tbl_count" = 0
--let $assert_text= "Slave_open_temp_tables count should be 0"
--source include/assert.inc

--source include/rpl_end.inc
