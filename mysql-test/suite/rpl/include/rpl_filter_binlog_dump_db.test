#
# Purpose:
#
# This test verifies the correct behavior of replication database filters,
# specifically: binlog_dump_do/ignore_db.
#
# The test compares the master's binary log (binlog) and the slave's relay log
# to confirm how these filters affect data replication.
#
# Key points:
#
# binlog_dump_do/ignore_db filters what the master sends to the slave via the binlog dump thread.
#    - Changes are written to the master's binlog, but only filtered events
#      are sent to the slave.
#    - As a result the Master's binlog will have all the events written but the Slave's relaylog file 
#      will contain only the filtered events
#
# This test ensures that these filters behave as expected, by examining
# which events appear in the master's binlog and the slave's relay log.

--source include/master-slave.inc


eval SET @@default_storage_engine=$engine_type;

connection master;

--echo # On master: create two databases and insert data
CREATE TABLE t1 (id INT PRIMARY KEY, data VARCHAR(50));
BEGIN;
INSERT INTO t1 VALUES (1, 'first row in t1');
UPDATE t1 SET data = 'row in t1' WHERE id = 1;
COMMIT;

--echo # Create and use a filtered DB

CREATE DATABASE ignored_db;
USE ignored_db;
CREATE TABLE t2 (id INT PRIMARY KEY, data VARCHAR(50));
INSERT INTO t2 VALUES (1, 'row in t2');

--echo # Capture current binlog file name
--let $binlog_file= query_get_value(SHOW MASTER STATUS, File, 1)


--echo # Find relay log file on slave
connection slave;

--echo # Get slave's current relay log file
--let $relaylog_file= query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)

--echo # Dump master binlog to file
--exec $MYSQL_BINLOG $MYSQLTEST_VARDIR/mysqld.1/data/$binlog_file > $MYSQLTEST_VARDIR/tmp/master_binlog.txt

--echo # Dump slave relay log to file
--exec $MYSQL_BINLOG $MYSQLTEST_VARDIR/mysqld.2/data/$relaylog_file > $MYSQLTEST_VARDIR/tmp/slave_relaylog.txt

--echo # Validate that 'INSERT INTO t1' is in the master binlog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/master_binlog.txt
--let $assert_text= INSERT INTO t1 must be present in master binlog
--let $assert_select= INSERT INTO t1
--let $assert_count= 1
--source include/assert_grep.inc

--echo # Validate that 'INSERT INTO t2' is not in the slave relaylog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/slave_relaylog.txt
--let $assert_text= INSERT INTO t2 must not be present in the Slave's relaylog
--let $assert_select= INSERT INTO t2
--let $assert_count= 0
--source include/assert_grep.inc

--echo # Cleanup
connection master;


use ignored_db;
DROP TABLE t2;
USE test;
DROP TABLE t1;
DROP DATABASE ignored_db;

