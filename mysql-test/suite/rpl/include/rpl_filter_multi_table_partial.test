#
# Purpose:
#   Verify that partial filtering behaves correctly when a single query
#   targets multiple tables at once.
#
#   The test issues multi-table UPDATE statements (e.g. UPDATE t1, t2 …),
#   where each table has different filter settings applied. This ensures:
#     - Events for filtered tables are excluded from the relay log.
#     - Events for allowed tables remain visible on the slave.
#
#   Mapping:
#     t1 → allowed
#     t2 → filtered
#     t3 → filtered
#     t4 → allowed
#
#   This validates that binlog_dump_do/ignore_table filters operate at the
#   per-table level, even within a single query affecting multiple tables.
#

--source include/master-slave.inc

connection master;

eval SET @@default_storage_engine=$engine_type;

--echo # On master: create two tables and insert data
CREATE TABLE t1 (id INT PRIMARY KEY, data VARCHAR(50));
CREATE TABLE t2 (id INT PRIMARY KEY, data VARCHAR(50));
CREATE TABLE t3 (id INT PRIMARY KEY, data VARCHAR(50));
CREATE TABLE t4 (id INT PRIMARY KEY, data VARCHAR(50));
INSERT INTO t1 VALUES (1, 'row in t1');
INSERT INTO t2 VALUES (1, 'row in t2');
INSERT INTO t3 VALUES (1, 'row in t3');
INSERT INTO t4 VALUES (1, 'row in t4');

--echo # This query should affect multiple tables at the same time
UPDATE t1, t2
SET t1.data = 'updated t1', t2.data = 'updated t2';
UPDATE t3, t4
SET t3.data = 'updated t3', t4.data = 'updated t4';

--echo # Capture current binlog file name
--let $binlog_file= SELECT @@global.log_bin_basename
--let $binlog_index= query_get_value(SHOW MASTER STATUS, File, 1)

--echo # Find relay log file on slave
connection slave;
--let $relaylog_file= query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)

--echo # Dump master binlog to file
--exec $MYSQL_BINLOG $MYSQLTEST_VARDIR/mysqld.1/data/$binlog_index > $MYSQLTEST_VARDIR/tmp/master_binlog.txt

--echo # Dump slave relay log to file
--exec $MYSQL_BINLOG $MYSQLTEST_VARDIR/mysqld.2/data/$relaylog_file > $MYSQLTEST_VARDIR/tmp/slave_relaylog.txt

--echo # Validate that 'update t1' is in the master binlog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/master_binlog.txt
--let $assert_text= updated t1 must be present in master binlog
--let $assert_select= updated t1
--let $assert_count= 1
--source include/assert_grep.inc

--echo # Validate that 'update t2' is in the master binlog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/master_binlog.txt
--let $assert_text= updated t2 must be present in master binlog
--let $assert_select= updated t2
--let $assert_count= 1
--source include/assert_grep.inc

--echo # Validate that 'update t3' is in the master binlog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/master_binlog.txt
--let $assert_text= updated t3 must be present in master binlog
--let $assert_select= updated t3
--let $assert_count= 1
--source include/assert_grep.inc

--echo # Validate that 'update t4' is in the master binlog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/master_binlog.txt
--let $assert_text= updated t4 must be present in master binlog
--let $assert_select= updated t4
--let $assert_count= 1
--source include/assert_grep.inc


--echo # Validate that 'update t1' is not in the slave relaylog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/slave_relaylog.txt
--let $assert_text= updated t1 must not be present in the Slave's relaylog
--let $assert_select= updated t1
--let $assert_count= 1
--source include/assert_grep.inc

--echo # Validate that 'update t2' is not in the slave relaylog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/slave_relaylog.txt
--let $assert_text= updated t2 must not be present in the Slave's relaylog
--let $assert_select= updated t2
--let $assert_count= 0
--source include/assert_grep.inc

--echo # Validate that 'update t3' is not in the slave relaylog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/slave_relaylog.txt
--let $assert_text= updated t3 must not be present in the Slave's relaylog
--let $assert_select= updated t3
--let $assert_count= 0
--source include/assert_grep.inc

--echo # Validate that 'update t4' is not in the slave relaylog
--let $assert_file= $MYSQLTEST_VARDIR/tmp/slave_relaylog.txt
--let $assert_text= updated t4 must not be present in the Slave's relaylog
--let $assert_select= updated t4
--let $assert_count= 1
--source include/assert_grep.inc

--echo # Cleanup

connection master;
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE t3;
DROP TABLE t4;

