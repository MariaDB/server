include/rpl_init.inc [topology=1->2->1]
connection server_2;
create table t1 (n int);
connection server_1;
include/stop_slave.inc
create table t2 (n int);
connection server_2;
show tables;
Tables_in_test
t1
t2
create table t3 (n int) engine=innodb;
set @a=1;
insert into t3 values(@a);
begin;
insert into t3 values(2);
insert into t3 values(3);
commit;
insert into t3 values(4);
connection server_1;
start slave until master_log_file="MASTER_LOG_FILE",master_log_pos=MASTER_LOG_POS;
Warnings:
Note	1278	It is recommended to use --skip-slave-start when doing step-by-step replication with START SLAVE UNTIL; otherwise, you will get problems if you get an unexpected slave's mysqld restart
include/wait_for_slave_sql_to_stop.inc
show tables;
Tables_in_test
t1
t2
start slave until master_log_file="MASTER_LOG_FILE",master_log_pos=MASTER_LOG_POS;
Warnings:
Note	1278	It is recommended to use --skip-slave-start when doing step-by-step replication with START SLAVE UNTIL; otherwise, you will get problems if you get an unexpected slave's mysqld restart
include/wait_for_slave_sql_to_stop.inc
select * from t3;
n
1
start slave until master_log_file="MASTER_LOG_FILE",master_log_pos=MASTER_LOG_POS;
Warnings:
Note	1278	It is recommended to use --skip-slave-start when doing step-by-step replication with START SLAVE UNTIL; otherwise, you will get problems if you get an unexpected slave's mysqld restart
include/wait_for_slave_sql_to_stop.inc
select * from t3;
n
1
2
3
include/start_slave.inc
connection server_1;
create table t4 (n int);
create table t5 (n int);
create table t6 (n int);
connection server_2;
connection server_1;
show tables;
Tables_in_test
t1
t2
t3
t4
t5
t6
drop table t1, t2, t3, t4, t5, t6;
include/rpl_end.inc
