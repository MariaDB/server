connection node_2;
connection node_1;
connect node_3, 127.0.0.1, root, , test, $NODE_MYPORT_3;
connection node_1;
connection node_2;
connection node_3;
connection node_1;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY) ENGINE=InnoDB;
SET SESSION wsrep_trx_fragment_size = 1;
SET AUTOCOMMIT=OFF;
START TRANSACTION;
INSERT INTO t1 VALUES (10);
INSERT INTO t1 VALUES (11);
INSERT INTO t1 VALUES (12);
INSERT INTO t1 VALUES (13);
INSERT INTO t1 VALUES (14);
SELECT COUNT(*) > 0 FROM mysql.wsrep_streaming_log;
COUNT(*) > 0
1
connection node_2;
SET SESSION wsrep_trx_fragment_size = 1;
SET AUTOCOMMIT=OFF;
START TRANSACTION;
INSERT INTO t1 VALUES (200);
INSERT INTO t1 VALUES (201);
INSERT INTO t1 VALUES (202);
INSERT INTO t1 VALUES (203);
INSERT INTO t1 VALUES (204);
connection node_3;
SET SESSION wsrep_trx_fragment_size = 1;
SET AUTOCOMMIT=OFF;
START TRANSACTION;
INSERT INTO t1 VALUES (300);
INSERT INTO t1 VALUES (301);
INSERT INTO t1 VALUES (302);
INSERT INTO t1 VALUES (303);
INSERT INTO t1 VALUES (304);
connect node_1a, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connect node_2a, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connect node_3a, 127.0.0.1, root, , test, $NODE_MYPORT_3;
connection node_1a;
connection node_2a;
SET GLOBAL wsrep_provider_options='gmcast.isolate=1';
connection node_3a;
SET GLOBAL wsrep_provider_options='gmcast.isolate=1';
connection node_1a;
INSERT INTO t1 VALUES (20);
INSERT INTO t1 VALUES (21);
INSERT INTO t1 VALUES (22);
INSERT INTO t1 VALUES (23);
INSERT INTO t1 VALUES (24);
connection node_2a;
SET SESSION wsrep_on = ON;
SET SESSION wsrep_sync_wait = 15;
SET GLOBAL wsrep_provider_options='gmcast.isolate=0';
connection node_3a;
SET SESSION wsrep_on = ON;
SET SESSION wsrep_sync_wait = 15;
SET GLOBAL wsrep_provider_options='gmcast.isolate=0';
connection node_1a;
connection node_2a;
connection node_3a;
connection node_2;
COMMIT;
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
SELECT COUNT(DISTINCT node_uuid) = 1 FROM mysql.wsrep_streaming_log;
COUNT(DISTINCT node_uuid) = 1
1
wsrep_gcomm_uuid_match
1
connection node_3;
COMMIT;
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
SELECT COUNT(DISTINCT node_uuid) = 1 FROM mysql.wsrep_streaming_log;
COUNT(DISTINCT node_uuid) = 1
1
wsrep_gcomm_uuid_match
1
connection node_1;
INSERT INTO t1 VALUES (30);
INSERT INTO t1 VALUES (31);
INSERT INTO t1 VALUES (32);
INSERT INTO t1 VALUES (33);
INSERT INTO t1 VALUES (34);
COMMIT;
SELECT COUNT(*) = 15, MIN(f1) = 10, MAX(f1) = 34 FROM t1;
COUNT(*) = 15	MIN(f1) = 10	MAX(f1) = 34
1	1	1
SELECT COUNT(*) = 0 FROM mysql.wsrep_streaming_log;
COUNT(*) = 0
1
SET AUTOCOMMIT=ON;
connection node_2;
COMMIT;
SELECT COUNT(*) = 15, MIN(f1) = 10, MAX(f1) = 34 FROM t1;
COUNT(*) = 15	MIN(f1) = 10	MAX(f1) = 34
1	1	1
SELECT COUNT(*) = 0 FROM mysql.wsrep_streaming_log;
COUNT(*) = 0
1
SET AUTOCOMMIT=ON;
connection node_3;
COMMIT;
SELECT COUNT(*) = 15, MIN(f1) = 10, MAX(f1) = 34 FROM t1;
COUNT(*) = 15	MIN(f1) = 10	MAX(f1) = 34
1	1	1
SELECT COUNT(*) = 0 FROM mysql.wsrep_streaming_log;
COUNT(*) = 0
1
SET AUTOCOMMIT=ON;
DROP TABLE t1;
connection node_1;
CALL mtr.add_suppression("WSREP: failed to send SR rollback for ");
connection node_2;
CALL mtr.add_suppression("WSREP: failed to send SR rollback for ");
connection node_3;
CALL mtr.add_suppression("WSREP: failed to send SR rollback for ");
