#
# GCF-360 Inconsistency voting: node goes non-prim on DDL that fails everywhere
#
# We issue 400 DDLs in total to make this test more stressful#
#

--source include/galera_cluster.inc

--let $count = 100

--connect node_3, 127.0.0.1, root, , test, $NODE_MYPORT_3
--connect node_4, 127.0.0.1, root, , test, $NODE_MYPORT_4

--disable_query_log
--disable_result_log
while ($count)
{
        --connection node_1
        --send DROP TABLE nonexisting_table;

        --connection node_2
        --send DROP TABLE nonexisting_table;

        --connection node_3
        --send DROP TABLE nonexisting_table;

        --connection node_4
        --send DROP TABLE nonexisting_table;

        --connection node_1
        --error ER_BAD_TABLE_ERROR
        --reap

        --connection node_2
        --error ER_BAD_TABLE_ERROR
        --reap

        --connection node_3
        --error ER_BAD_TABLE_ERROR
        --reap

        --connection node_4
        --error ER_BAD_TABLE_ERROR
        --reap

        --dec $count
}
--enable_result_log
--enable_query_log

--connection node_1
SELECT VARIABLE_VALUE AS expect_4 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size';
CALL mtr.add_suppression("Slave SQL: Error 'Unknown table");

--connection node_2
SELECT VARIABLE_VALUE AS expect_4 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size';
CALL mtr.add_suppression("Slave SQL: Error 'Unknown table");

--connection node_3
SELECT VARIABLE_VALUE AS expect_4 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size';
CALL mtr.add_suppression("Slave SQL: Error 'Unknown table");

--connection node_4
SELECT VARIABLE_VALUE AS expect_4 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size';
CALL mtr.add_suppression("Slave SQL: Error 'Unknown table");
