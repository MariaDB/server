--source include/galera_cluster.inc
--source include/have_innodb.inc
--source include/have_debug.inc
--source include/have_debug_sync.inc

#
# Test that DDL indeed causes all nodes to block so even unrelated updates
# are not allowed to proceed. We block the DDL using DBUG_SYNC
#

CREATE TABLE t1 (f1 INTEGER) ENGINE=InnoDB;
CREATE TABLE t2 (f1 INTEGER) ENGINE=InnoDB;

--let $galera_connection_name = node_1a
--let $galera_server_number = 1
--source include/galera_connect.inc
SET SESSION wsrep_sync_wait = 0;

--let $galera_connection_name = node_1b
--let $galera_server_number = 1
--source include/galera_connect.inc

# node_1c tests write to unrelated table trough a transaction
--let $galera_connection_name = node_1c
--let $galera_server_number = 1
--source include/galera_connect.inc

--connection node_1
SET DEBUG_SYNC= 'RESET';
SET DEBUG_SYNC = 'alter_table_before_open_tables SIGNAL before_open_tables WAIT_FOR continue';
--send ALTER TABLE t1 ADD COLUMN f2 INTEGER;

--connection node_1a
SET DEBUG_SYNC= 'now WAIT_FOR before_open_tables';

# if we would retry the insert, it would fail for wrong column count
# on second try
SET wsrep_retry_autocommit=0;

# Allowed
SELECT COUNT(*) = 0 FROM t1;

# Allowed
SELECT COUNT(*) = 0 FROM t2;

# Not allowed, this will hang because of ALTER
--send INSERT INTO t1 VALUES (1);

--connection node_1c
SET SESSION wsrep_sync_wait = 0;

SET AUTOCOMMIT=OFF;
START TRANSACTION;

# Allowed
SELECT COUNT(*) = 0 FROM t1;

# Allowed
SELECT COUNT(*) = 0 FROM t2;

# Allowed (until commit)
INSERT INTO t2 VALUES (1);

# Hangs
--send COMMIT;

--connection node_1b
SET SESSION wsrep_sync_wait = 0;

# The Commit issued above is still not done
--sleep 1
SELECT COUNT(*) = 0 FROM t2;

SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE INFO = 'Commit';

SET DEBUG_SYNC= 'now SIGNAL continue';

--connection node_1a
--error ER_LOCK_DEADLOCK
--reap

--connection node_1c
# this will succeeed, becaus the query will be replayed
--reap

--connection node_1
--reap

SELECT COUNT(*) = 0 FROM t1;
SELECT COUNT(*) = 1 FROM t2;
SET debug_sync='RESET';

--connection node_2
SELECT COUNT(*) = 0 FROM t1;
SELECT COUNT(*) = 1 FROM t2;

DROP TABLE t1;
DROP TABLE t2;
