#
# Test WAN replication and the gmcast.segment functionality.
# The galera_wan.cnf file partitions 4 Galera nodes into 3 WAN segments
#
# We can not test any of the actual WAN optimizations from inside MTR and no 
# status variables are provided. So we only check that simple replication works.
#

--source include/galera_cluster.inc
--source include/have_innodb.inc

CALL mtr.add_suppression("WSREP: Stray state UUID msg:.*");
CALL mtr.add_suppression("WSREP: Sending JOIN failed:.*");
CALL mtr.add_suppression("There are no nodes in the same segment that will ever be able to become donors, yet there is a suitable donor outside");
call mtr.add_suppression("WSREP: Sending JOIN failed:.*");


SELECT VARIABLE_VALUE = 4 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size';

--connection node_1
CREATE TABLE t1 (f1 INTEGER);

--connect node_3, 127.0.0.1, root, , test, $NODE_MYPORT_3
--connection node_3
--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLES WHERE NAME LIKE 'test/t1';
--source include/wait_condition.inc
INSERT INTO t1 VALUES (1);

--connect node_4, 127.0.0.1, root, , test, $NODE_MYPORT_4
--connection node_4
--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLES WHERE NAME LIKE 'test/t1';
--source include/wait_condition.inc
--let $wait_condition = SELECT COUNT(*) = 1 FROM t1;
--source include/wait_condition.inc
SELECT VARIABLE_VALUE LIKE '%gmcast.segment = 3%' FROM INFORMATION_SCHEMA.GLOBAL_VARIABLES WHERE VARIABLE_NAME = 'wsrep_provider_options';

SELECT COUNT(*) = 1 FROM t1;

DROP TABLE t1;

