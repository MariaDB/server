connection node_2;
connection node_1;
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since.*");
SET GLOBAL wsrep_forced_binlog_format=ROW;
connection node_1;
CREATE TABLE t1(a int not null primary key auto_increment, b int) ENGINE=InnoDB;
CREATE TABLE t2(a int not null primary key, b int) ENGINE=InnoDB;
INSERT INTO t1 VALUES (NULL,1),(NULL,2);
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
CREATE TABLE t3 AS SELECT * FROM t1;
CREATE TABLE t4 AS SELECT * FROM t2;
CREATE TABLE t5 (a INT UNIQUE) AS SELECT 1 AS a;
CREATE TABLE t6 (a INT UNIQUE) REPLACE SELECT 1 AS a;
CREATE TABLE t7 (a INT UNIQUE) REPLACE SELECT 1 AS a,2 AS b UNION SELECT 1 AS a,
3 AS c;
SELECT COUNT(*) AS EXPECT_32 FROM t1;
EXPECT_32
32
SELECT COUNT(*) AS EXPECT_0 FROM t2;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_32 FROM t3;
EXPECT_32
32
SELECT * FROM t4;
a	b
SELECT * FROM t5;
a
1
SELECT * FROM t6;
a
1
SELECT * FROM t7;
a	b
1	3
connection node_2;
# Veryfy CTAS replication
SELECT COUNT(*) AS EXPECT_32 FROM t1;
EXPECT_32
32
SELECT COUNT(*) AS EXPECT_0 FROM t2;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_32 FROM t3;
EXPECT_32
32
SELECT * FROM t4;
a	b
SELECT * FROM t5;
a
1
SELECT * FROM t6;
a
1
SELECT * FROM t7;
a	b
1	3
connection node_1;
DROP TABLE t1,t2,t3,t4,t5,t6,t7;
SET GLOBAL wsrep_forced_binlog_format=STATEMENT;
connection node_1;
CREATE TABLE t1(a int not null primary key auto_increment, b int) ENGINE=InnoDB;
CREATE TABLE t2(a int not null primary key, b int) ENGINE=InnoDB;
INSERT INTO t1 VALUES (NULL,1),(NULL,2);
Warnings:
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it uses a system variable that may have a different value on the slave
INSERT INTO t1(b) SELECT b+1 from t1;
Warnings:
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statements writing to a table with an auto-increment column after selecting from another table are unsafe because the order in which rows are retrieved determines what (if any) rows will be written. This order cannot be predicted and may differ on master and the slave
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it uses a system variable that may have a different value on the slave
INSERT INTO t1(b) SELECT b+1 from t1;
Warnings:
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statements writing to a table with an auto-increment column after selecting from another table are unsafe because the order in which rows are retrieved determines what (if any) rows will be written. This order cannot be predicted and may differ on master and the slave
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it uses a system variable that may have a different value on the slave
INSERT INTO t1(b) SELECT b+1 from t1;
Warnings:
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statements writing to a table with an auto-increment column after selecting from another table are unsafe because the order in which rows are retrieved determines what (if any) rows will be written. This order cannot be predicted and may differ on master and the slave
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it uses a system variable that may have a different value on the slave
INSERT INTO t1(b) SELECT b+1 from t1;
Warnings:
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statements writing to a table with an auto-increment column after selecting from another table are unsafe because the order in which rows are retrieved determines what (if any) rows will be written. This order cannot be predicted and may differ on master and the slave
Note	1592	Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it uses a system variable that may have a different value on the slave
CREATE TABLE t3 AS SELECT * FROM t1;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = STMT in CREATE TABLE AS SELECT
CREATE TABLE t4 AS SELECT * FROM t2;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = STMT in CREATE TABLE AS SELECT
CREATE TABLE t5 (a INT UNIQUE) AS SELECT 1 AS a;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = STMT in CREATE TABLE AS SELECT
CREATE TABLE t6 (a INT UNIQUE) REPLACE SELECT 1 AS a;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = STMT in CREATE TABLE AS SELECT
CREATE TABLE t7 (a INT UNIQUE) REPLACE SELECT 1 AS a,2 AS b UNION SELECT 1 AS a,
3 AS c;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = STMT in CREATE TABLE AS SELECT
SELECT COUNT(*) AS EXPECT_32 FROM t1;
EXPECT_32
32
SELECT COUNT(*) AS EXPECT_0 FROM t2;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_32 FROM t3;
EXPECT_32
32
SELECT * FROM t4;
a	b
SELECT * FROM t5;
a
1
SELECT * FROM t6;
a
1
SELECT * FROM t7;
a	b
1	3
connection node_2;
# Veryfy CTAS replication
SELECT COUNT(*) AS EXPECT_32 FROM t1;
EXPECT_32
32
SELECT COUNT(*) AS EXPECT_0 FROM t2;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_32 FROM t3;
EXPECT_32
32
SELECT * FROM t4;
a	b
SELECT * FROM t5;
a
1
SELECT * FROM t6;
a
1
SELECT * FROM t7;
a	b
1	3
connection node_1;
DROP TABLE t1,t2,t3,t4,t5,t6,t7;
SET GLOBAL wsrep_forced_binlog_format=MIXED;
connection node_1;
CREATE TABLE t1(a int not null primary key auto_increment, b int) ENGINE=InnoDB;
CREATE TABLE t2(a int not null primary key, b int) ENGINE=InnoDB;
INSERT INTO t1 VALUES (NULL,1),(NULL,2);
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
CREATE TABLE t3 AS SELECT * FROM t1;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = MIXED in CREATE TABLE AS SELECT
CREATE TABLE t4 AS SELECT * FROM t2;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = MIXED in CREATE TABLE AS SELECT
CREATE TABLE t5 (a INT UNIQUE) AS SELECT 1 AS a;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = MIXED in CREATE TABLE AS SELECT
CREATE TABLE t6 (a INT UNIQUE) REPLACE SELECT 1 AS a;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = MIXED in CREATE TABLE AS SELECT
CREATE TABLE t7 (a INT UNIQUE) REPLACE SELECT 1 AS a,2 AS b UNION SELECT 1 AS a,
3 AS c;
Warnings:
Warning	1105	Galera does not support wsrep_forced_binlog_format = MIXED in CREATE TABLE AS SELECT
SELECT COUNT(*) AS EXPECT_32 FROM t1;
EXPECT_32
32
SELECT COUNT(*) AS EXPECT_0 FROM t2;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_32 FROM t3;
EXPECT_32
32
SELECT * FROM t4;
a	b
SELECT * FROM t5;
a
1
SELECT * FROM t6;
a
1
SELECT * FROM t7;
a	b
1	3
connection node_2;
# Veryfy CTAS replication
SELECT COUNT(*) AS EXPECT_32 FROM t1;
EXPECT_32
32
SELECT COUNT(*) AS EXPECT_0 FROM t2;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_32 FROM t3;
EXPECT_32
32
SELECT * FROM t4;
a	b
SELECT * FROM t5;
a
1
SELECT * FROM t6;
a
1
SELECT * FROM t7;
a	b
1	3
connection node_1;
DROP TABLE t1,t2,t3,t4,t5,t6,t7;
SET GLOBAL wsrep_forced_binlog_format=NONE;
connection node_1;
CREATE TABLE t1(a int not null primary key auto_increment, b int) ENGINE=InnoDB;
CREATE TABLE t2(a int not null primary key, b int) ENGINE=InnoDB;
INSERT INTO t1 VALUES (NULL,1),(NULL,2);
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
INSERT INTO t1(b) SELECT b+1 from t1;
CREATE TABLE t3 AS SELECT * FROM t1;
CREATE TABLE t4 AS SELECT * FROM t2;
CREATE TABLE t5 (a INT UNIQUE) AS SELECT 1 AS a;
CREATE TABLE t6 (a INT UNIQUE) REPLACE SELECT 1 AS a;
CREATE TABLE t7 (a INT UNIQUE) REPLACE SELECT 1 AS a,2 AS b UNION SELECT 1 AS a,
3 AS c;
SELECT COUNT(*) AS EXPECT_32 FROM t1;
EXPECT_32
32
SELECT COUNT(*) AS EXPECT_0 FROM t2;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_32 FROM t3;
EXPECT_32
32
SELECT * FROM t4;
a	b
SELECT * FROM t5;
a
1
SELECT * FROM t6;
a
1
SELECT * FROM t7;
a	b
1	3
connection node_2;
# Veryfy CTAS replication
SELECT COUNT(*) AS EXPECT_32 FROM t1;
EXPECT_32
32
SELECT COUNT(*) AS EXPECT_0 FROM t2;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_32 FROM t3;
EXPECT_32
32
SELECT * FROM t4;
a	b
SELECT * FROM t5;
a
1
SELECT * FROM t6;
a
1
SELECT * FROM t7;
a	b
1	3
connection node_1;
DROP TABLE t1,t2,t3,t4,t5,t6,t7;
