#
# Test the case where a slave node goes non-primary while a DDL is running
#

--source include/galera_cluster.inc
--source include/have_debug_sync.inc
--source include/have_debug.inc

CREATE TABLE t1 (f1 INTEGER NOT NULL) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);

--connection node_2
SET GLOBAL debug = 'd,sync.alter_locked_tables_inplace';

--connection node_1
SET SESSION wsrep_osu_method=NBO;
--send ALTER TABLE t1 ALGORITHM=INPLACE, LOCK=SHARED, ADD PRIMARY KEY (f1);

--connection node_2
SET SESSION wsrep_sync_wait=0;

# Wait for the ALTER to block in sync point
--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE STATE = 'debug sync point: now';
--source include/wait_condition.inc

SET GLOBAL wsrep_provider_options = 'gmcast.isolate=1';

--connect node_1a, 127.0.0.1, root, , test, $NODE_MYPORT_1
--connection node_1a
--source include/wait_until_connected_again.inc
SET SESSION wsrep_sync_wait = 0;
--let $wait_condition = SELECT COUNT(*) = 2 FROM mysql.wsrep_cluster_members;
--source include/wait_condition.inc

--connection node_1
--reap

--connection node_2
SET DEBUG_SYNC= 'now SIGNAL signal.alter_locked_tables_inplace';
SET GLOBAL debug = '';

SET GLOBAL wsrep_provider_options = 'gmcast.isolate=0';

--connection node_1
--source include/wait_until_connected_again.inc
--source include/galera_wait_ready.inc
--let $wait_condition = SELECT COUNT(*) = 3 FROM mysql.wsrep_cluster_members;
--source include/wait_condition.inc

SHOW CREATE TABLE t1;
SELECT COUNT(*) = 1 FROM t1;

--connection node_2
--source include/wait_until_connected_again.inc
--source include/galera_wait_ready.inc
SELECT COUNT(*) = 3 FROM mysql.wsrep_cluster_members;
SHOW CREATE TABLE t1;
SELECT COUNT(*) = 1 FROM t1;

--connection node_1
SET SESSION wsrep_OSU_method=TOI;
DROP TABLE t1;
CALL mtr.add_suppression("gcs_caused\\(\\) returned -1");

--let $galera_connection_name = node_3
--let $galera_server_number = 3
--source include/galera_connect.inc
--connection node_3
--source include/galera_wait_ready.inc
