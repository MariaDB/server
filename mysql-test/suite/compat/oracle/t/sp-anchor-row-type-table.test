SET sql_mode=ORACLE;

--echo #
--echo # MDEV-13581 ROW TYPE OF t1 and t1%ROWTYPE for routine parameters
--echo #

CREATE TABLE t1 (a INT, b TEXT, c ENUM('a','b','c'));
DELIMITER $$;
CREATE PROCEDURE p1 (a t1%ROWTYPE) AS
BEGIN
  CREATE TABLE t2 AS SELECT a.a AS a, a.b AS b, a.c AS c;
  SHOW CREATE TABLE t2;
  DROP TABLE t2;
END;
$$
CREATE PROCEDURE p2 AS
  a t1%ROWTYPE;
BEGIN
  CALL p1(a);
END;
$$
DELIMITER ;$$
CALL p2();
DROP PROCEDURE p2;
DROP PROCEDURE p1;
DROP TABLE t1;


CREATE TABLE t1 (a INT, b TEXT);
DELIMITER $$;
CREATE PROCEDURE p1 (a OUT t1%ROWTYPE) AS
BEGIN
  SET a.a=10;
  SET a.b='text';
END;
$$
CREATE PROCEDURE p2 AS
  a t1%ROWTYPE;
BEGIN
  CALL p1(a);
  SELECT a.a, a.b;
END;
$$
CREATE FUNCTION f1(a t1%ROWTYPE) RETURN TEXT AS
BEGIN
  RETURN CONCAT(a.a, ' ', a.b);
END;
$$
CREATE FUNCTION f2 RETURN TEXT AS
  a t1%ROWTYPE;
BEGIN
  CALL p1(a);
  RETURN f1(a);
END;
$$
DELIMITER ;$$
CALL p2();
SELECT f2();
DROP PROCEDURE p2;
DROP PROCEDURE p1;
DROP FUNCTION f2;
DROP FUNCTION f1;
DROP TABLE t1;


CREATE DATABASE db1;
CREATE TABLE db1.t1 (a INT, b TEXT);
DELIMITER $$;
CREATE PROCEDURE p1 (a OUT db1.t1%ROWTYPE) AS
BEGIN
  SET a.a=10;
  SET a.b='text';
END;
$$
CREATE PROCEDURE p2 AS
  a db1.t1%ROWTYPE;
BEGIN
  CALL p1(a);
  SELECT a.a, a.b;
END;
$$
CREATE FUNCTION f1(a db1.t1%ROWTYPE) RETURN TEXT AS
BEGIN
  RETURN CONCAT(a.a, ' ', a.b);
END;
$$
CREATE FUNCTION f2() RETURN TEXT AS
  a db1.t1%ROWTYPE;
BEGIN
  CALL p1(a);
  RETURN f1(a);
END;
$$
DELIMITER ;$$
CALL p2();
SELECT f2();
DROP PROCEDURE p2;
DROP PROCEDURE p1;
DROP FUNCTION f2;
DROP FUNCTION f1;
DROP DATABASE db1;


--echo #
--echo # MDEV-14139 Anchored data types for variables
--echo #

CREATE TABLE t1 (int11 INT, text0 TEXT);
DELIMITER $$;
DECLARE
  row1 t1%ROWTYPE;
  a_row1 row1%TYPE;
  aa_row1 a_row1%TYPE;
BEGIN
  CREATE TABLE t2 AS SELECT a_row1.int11 AS int11, a_row1.text0 AS text0;
  SHOW CREATE TABLE t2;
  DROP TABLE t2;
  CREATE TABLE t2 AS SELECT aa_row1.int11 AS int11, aa_row1.text0 AS text0;
  SHOW CREATE TABLE t2;
  DROP TABLE t2;
END;
$$
DELIMITER ;$$
DROP TABLE t1;


--echo #
--echo # Start of 11.7 tests
--echo #

--echo #
--echo # MDEV-12252 ROW data type for stored function return values
--echo #

DELIMITER $$;
--error ER_PARSE_ERROR
CREATE FUNCTION f1 RETURN step1.step2.step3%ROWTYPE AS
BEGIN
  RETURN ROW(1,2);
END;
$$
DELIMITER ;$$

DELIMITER $$;
CREATE FUNCTION f1 RETURN t1%ROWTYPE AS
BEGIN
  RETURN ROW(1,2);
END;
$$
DELIMITER ;$$
SHOW CREATE FUNCTION f1;
--error ER_NO_SUCH_TABLE
SELECT f1();
DROP FUNCTION f1;

# "ROW TYPE OF t1" is not supported in sql_mode=ORACLE
# Use test.t1%ROWTYPE instead
DELIMITER $$;
--error ER_PARSE_ERROR
CREATE FUNCTION f1 RETURN ROW TYPE OF t1 AS
BEGIN
  RETURN ROW(1,2);
END;
$$
DELIMITER ;$$

DELIMITER $$;
CREATE FUNCTION f1 RETURN test.t1%ROWTYPE AS
BEGIN
  RETURN ROW(1,2);
END;
$$
DELIMITER ;$$
SHOW CREATE FUNCTION f1;
--error ER_NO_SUCH_TABLE
SELECT f1();
DROP FUNCTION f1;


CREATE TABLE t1 (a INT, b VARCHAR(32));
DELIMITER $$;
CREATE FUNCTION f1 RETURN test.t1%ROWTYPE AS
BEGIN
  RETURN (SELECT * FROM t1);
END;
$$
DELIMITER ;$$
SHOW CREATE FUNCTION f1;

DELIMITER $$;
CREATE PROCEDURE p1 AS
  r t1%ROWTYPE := f1();
BEGIN
  SELECT r.a, r.b;
END;
$$
DELIMITER ;$$
SHOW CREATE PROCEDURE p1;

# Testing with no rows
CALL p1;
--error ER_OPERAND_COLUMNS
SELECT f1();
SELECT f1()=ROW(1,'b1') AS c;
SELECT f1()=ROW(NULL,NULL) AS c;

# Testing with one row
INSERT INTO t1 VALUES (1,'b1');
CALL p1;
--error ER_OPERAND_COLUMNS
SELECT f1();
SELECT f1()=ROW(1,'b1') AS c;
SELECT f1()=ROW(1,'') AS c;
SELECT f1()=ROW(2,'b1') AS c;
SELECT f1()=ROW(1,NULL) AS c;
SELECT f1()=ROW(NULL,'b1') AS c;

# Testing with two rows
INSERT INTO t1 VALUES (2,'b2');
--error ER_SUBQUERY_NO_1_ROW
CALL p1();
--error ER_OPERAND_COLUMNS
SELECT f1();
--error ER_SUBQUERY_NO_1_ROW
SELECT f1()=ROW(1,'b1') AS c;

DROP PROCEDURE p1;
DROP FUNCTION f1;
DROP TABLE t1;

--echo #
--echo # End of 11.7 tests
--echo #
