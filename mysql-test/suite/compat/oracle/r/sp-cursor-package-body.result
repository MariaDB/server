SET sql_mode=ORACLE;
#
# MDEV-36053 CURSOR declarations in PACKAGE BODY
#
#
# FUNCTION:
#   FETCH package_body_cursor INTO package_body_variable
#
CREATE PACKAGE pkg AS
FUNCTION f1 RETURN INT;
END;
/
CREATE PACKAGE BODY pkg AS
vc INT := 0;
CURSOR cur IS SELECT 1 AS c FROM DUAL;
FUNCTION f1 RETURN INT AS
BEGIN
OPEN cur;
FETCH cur INTO vc;
CLOSE cur;
RETURN vc;
END;
END;
/
SELECT pkg.f1() FROM DUAL;
pkg.f1()
1
DROP PACKAGE pkg;
#
# FUNCTION:
#   FETCH package_body_cursor INTO local_variable
#
CREATE PACKAGE pkg AS
FUNCTION f1 RETURN INT;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR cur IS SELECT 1 AS c FROM DUAL;
FUNCTION f1 RETURN INT AS
vc INT := 0;
BEGIN
OPEN cur;
FETCH cur INTO vc;
CLOSE cur;
RETURN vc;
END;
END;
/
SELECT pkg.f1() FROM DUAL;
pkg.f1()
1
DROP PACKAGE pkg;
#
# PACKAGE BODY initialization section:
#   FETCH package_body_cursor INTO package_body_variable
#
CREATE PACKAGE pkg AS
FUNCTION f1 RETURN INT;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR cur IS SELECT 1 AS c FROM DUAL;
vc INT;
FUNCTION f1 RETURN INT AS
BEGIN
RETURN vc;
END;
BEGIN
OPEN cur;
FETCH cur INTO vc;
CLOSE cur;
END;
/
SELECT pkg.f1() FROM DUAL;
pkg.f1()
1
DROP PACKAGE pkg;
#
# PACKAGE BODY initialization:
#   FETCH package_body_cursor INTO package_body_variable
# FUNCTION:
#   FETCH package_body_cursor INTO package_body_variable
#
CREATE PACKAGE pkg AS
FUNCTION f1 RETURN INT;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR cur IS SELECT 1 AS c FROM DUAL;
vc0 INT;
vc1 INT;
FUNCTION f1 RETURN INT AS
BEGIN
OPEN cur;
FETCH cur INTO vc1;
RETURN vc0 + vc1;
END;
BEGIN
OPEN cur;
FETCH cur INTO vc0;
CLOSE cur;
END;
/
SELECT pkg.f1() FROM DUAL;
pkg.f1()
2
SELECT pkg.f1() FROM DUAL;
ERROR 24000: Cursor is already open
DROP PACKAGE pkg;
#
# PACKAGE BODY initialization nested BEGIN..END block:
#   FETCH package_body_cursor INTO local_variable
# FUNCTION:
#   FETCH package_body_cursor INTO package_body_variable
#
CREATE PACKAGE pkg AS
FUNCTION f1 RETURN INT;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR cur IS SELECT 1 AS c FROM DUAL;
vc0 INT;
vc1 INT;
FUNCTION f1 RETURN INT AS
BEGIN
OPEN cur;
FETCH cur INTO vc1;
RETURN vc0 + vc1;
END;
BEGIN
DECLARE
vc2 INT;
BEGIN
OPEN cur;
FETCH cur INTO vc2;
CLOSE cur;
vc0:= vc2;
END;
END;
/
SELECT pkg.f1() FROM DUAL;
pkg.f1()
2
SELECT pkg.f1() FROM DUAL;
ERROR 24000: Cursor is already open
DROP PACKAGE pkg;
#
# PACKAGE BODY initialization:
#   OPEN package_body_cursor
# FUNCTION:
#   FETCH package_body_cursor INTO package_body_variable
# PROCEDURE:
#   CLOSE package_body_cursor
#
CREATE PACKAGE pkg AS
FUNCTION f1 RETURN INT;
PROCEDURE p1close;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR cur IS SELECT 1 AS c FROM DUAL;
vc0 INT;
FUNCTION f1 RETURN INT AS
BEGIN
FETCH cur INTO vc0;
RETURN vc0;
END;
PROCEDURE p1close AS
BEGIN
CLOSE cur;
END;
BEGIN
OPEN cur;
END;
/
SELECT pkg.f1() FROM DUAL;
pkg.f1()
1
CALL pkg.p1close();
SELECT pkg.f1() FROM DUAL;
ERROR 24000: Cursor is not open
DROP PACKAGE pkg;
#
# PACKAGE BODY executable section:
#   ROW TYPE OF package_body_cursor
# PROCEDURE:
#   ROW TYPE OF package_body_cursor
#
CREATE PACKAGE pkg IS
PROCEDURE p1;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR mc0 IS SELECT 0 AS c0, 'mc0' AS c1 FROM DUAL;
CURSOR mc1 IS SELECT 1 AS c0, TIME'10:20:30' AS c1 FROM DUAL;
mr00 mc0%ROWTYPE;
mr01 mc1%ROWTYPE;
mr11 mc1%ROWTYPE;
mr10 mc0%ROWTYPE;
PROCEDURE p1 AS
r00 mc0%ROWTYPE;
r01 mc1%ROWTYPE;
r10 mc1%ROWTYPE;
r11 mc0%ROWTYPE;
r20 r00%TYPE;
BEGIN
CREATE TABLE t00 AS SELECT r10.c0, r10.c1;
SHOW CREATE TABLE t00;
DROP TABLE t00;
CREATE TABLE t11 AS SELECT r11.c0, r11.c1;
SHOW CREATE TABLE t11;
DROP TABLE t11;
CREATE TABLE t20 AS SELECT r20.c0, r20.c1;
SHOW CREATE TABLE t20;
DROP TABLE t20;
END;
BEGIN
DECLARE
e00 mc0%ROWTYPE;
e01 mc1%ROWTYPE;
e10 mc1%ROWTYPE;
e11 mc0%ROWTYPE;
BEGIN
NULL;
END;
END;
/
CALL pkg.p1();
Table	Create Table
t00	CREATE TABLE "t00" (
  "r10.c0" int(11) DEFAULT NULL,
  "r10.c1" time DEFAULT NULL
)
Table	Create Table
t11	CREATE TABLE "t11" (
  "r11.c0" int(11) DEFAULT NULL,
  "r11.c1" varchar(3) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL
)
Table	Create Table
t20	CREATE TABLE "t20" (
  "r20.c0" int(11) DEFAULT NULL,
  "r20.c1" varchar(3) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL
)
DROP PACKAGE pkg;
#
# PROCEDURE:
#   FOR rec IN package_body_cursor
#
CREATE PACKAGE pkg IS
PROCEDURE p1;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR c0 IS SELECT 10 AS c0, 'c10' AS c1 FROM DUAL UNION
SELECT 11 AS c0, 'c11' AS c1 FROM DUAL;
PROCEDURE p1 AS
BEGIN
FOR r0 IN c0
LOOP
SELECT r0.c0, r0.c1;
END LOOP;
END;
END;
/
CALL pkg.p1();
r0.c0	r0.c1
10	c10
r0.c0	r0.c1
11	c11
DROP PACKAGE pkg;
#
# PROCEDURE:
#   FOR rec IN package_body_cursor_with_parameters
#
CREATE PACKAGE pkg IS
PROCEDURE p1;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR c0(c0 INT, c1 VARCHAR(10)) IS SELECT c0, c1 FROM DUAL;
PROCEDURE p1 AS
BEGIN
FOR i IN 1..2
LOOP
FOR r0 IN c0(1,'c1')
LOOP
SELECT r0.c0, r0.c1;
END LOOP;
END LOOP;
END;
END;
/
CALL pkg.p1();
r0.c0	r0.c1
1	c1
r0.c0	r0.c1
1	c1
DROP PACKAGE pkg;
#
# PROCEDURE
#   FOR rec IN package_body_cursor_with_package_body_variables_in_select_list
#
CREATE PACKAGE pkg AS
PROCEDURE p1;
END;
/
CREATE PACKAGE BODY pkg AS
v0 INT := 1;
v1 VARCHAR(10) := 'v1';
CURSOR c0 IS SELECT v0, v1 FROM DUAL;
PROCEDURE p1 AS
BEGIN
FOR i IN 1..2
LOOP
FOR r0 IN c0
LOOP
SELECT r0.v0, r0.v1;
END LOOP;
END LOOP;
END;
END;
/
CALL pkg.p1();
r0.v0	r0.v1
1	v1
r0.v0	r0.v1
1	v1
DROP PACKAGE pkg;
#
# PACKAGE BODY initialization section:
#   OPEN,FETCH,CLOSE local_cursor0, INTO local_variable0
#   OPEN,FETCH,CLOSE local_cursor0, INTO local_variable1
# FUNCTION:
#   OPEN,FETCH,CLOSE package_body_cursor0, INTO package_body_variable0
#   OPEN,FETCH,CLOSE package_body_cursor0, INTO package_body_variable1
#
CREATE PACKAGE pkg AS
FUNCTION f1 RETURN INT;
END;
/
CREATE PACKAGE BODY pkg AS
mv0 TEXT;
mv1 TEXT;
mv2 TEXT;
CURSOR mc0 IS SELECT 'mc0' AS c FROM DUAL;
CURSOR mc1 IS SELECT 'mc1' AS c FROM DUAL;
FUNCTION f1 RETURN TEXT AS
BEGIN
OPEN mc0;
FETCH mc0 INTO mv0;
CLOSE mc0;
OPEN mc1;
FETCH mc1 INTO mv1;
CLOSE mc1;
RETURN CONCAT(mv0,' ',mv1,' ',mv2);
END;
BEGIN
DECLARE
lv0 TEXT;
lv1 TEXT;
CURSOR lc0 IS SELECT 'lc0' AS c FROM DUAL;
CURSOR lc1 IS SELECT 'lc1' AS c FROM DUAL;
BEGIN
OPEN lc0;
FETCH lc0 INTO lv0;
CLOSE lc0;
OPEN lc1;
FETCH lc1 INTO lv1;
CLOSE lc1;
mv2:= CONCAT(lv0,' ',lv1);
END;
END;
/
SELECT pkg.f1();
pkg.f1()
mc0 mc1 lc0 lc1
DROP PACKAGE pkg;
#
# Duplicate cursor in PACKAGE BODY
#
CREATE PACKAGE pkg AS
FUNCTION f1 RETURN INT;
END;
/
CREATE PACKAGE BODY pkg AS
CURSOR c IS SELECT 'c' AS c FROM DUAL;
CURSOR c IS SELECT 'c' AS c FROM DUAL;
FUNCTION f1 RETURN TEXT AS
BEGIN
RETURN NULL;
END;
END;
/
ERROR 42000: Duplicate cursor: c
DROP PACKAGE pkg;
