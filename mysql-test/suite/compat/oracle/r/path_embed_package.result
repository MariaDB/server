#
# MDEV-34391 Path resolution
# Embed PATH to PACKAGE and PACKAGE's routines
#
SET sql_mode=ORACLE;
#
# Embed PATH to PACKAGE and PACKAGE's routines in Oracle mode
#
CREATE DATABASE test2;
CREATE DATABASE test3;
CREATE FUNCTION test2.func2() RETURN TEXT AS
BEGIN
RETURN 'test2.func2';
END;
$$
CREATE FUNCTION test3.func2() RETURN TEXT AS
BEGIN
RETURN 'test3.func2';
END;
$$
CREATE PROCEDURE test2.proc2(a OUT TEXT) AS
BEGIN
a:='test2.proc2';
END;
$$
CREATE PROCEDURE test3.proc2(a OUT TEXT) AS
BEGIN
a:='test3.proc2';
END;
$$
# Path embedded in PACKAGE's routines
CREATE PACKAGE pkg_r_emb
AS
FUNCTION ff() RETURN TEXT;
FUNCTION fp() RETURN TEXT;
PROCEDURE pf();
PROCEDURE pp();
END;
$$
CREATE PACKAGE BODY pkg_r_emb
AS
FUNCTION ff() RETURN TEXT
PATH 'test2'
  AS
BEGIN
RETURN func2();
END;
FUNCTION fp() RETURN TEXT
PATH 'test2'
  AS
a TEXT;
BEGIN
CALL proc2(a);
RETURN a;
END;
PROCEDURE pf()
PATH 'test2'
  AS
BEGIN
SELECT func2();
END;
PROCEDURE pp()
PATH 'test2'
  AS
a TEXT;
BEGIN
CALL proc2(a);
SELECT a;
END;
END;
$$
# Path embedded in a PACKAGE
CREATE PACKAGE pkg_emb
PATH 'test2'
AS
FUNCTION ff() RETURN TEXT;
FUNCTION fp() RETURN TEXT;
PROCEDURE pf();
PROCEDURE pp();
END;
$$
CREATE PACKAGE BODY pkg_emb
PATH 'test2'
AS
a TEXT;
FUNCTION ff() RETURN TEXT
AS
BEGIN
RETURN func2();
END;
FUNCTION fp() RETURN TEXT
AS
a TEXT;
BEGIN
CALL proc2(a);
RETURN a;
END;
PROCEDURE pf()
AS
BEGIN
SELECT func2();
END;
PROCEDURE pp()
AS
a TEXT;
BEGIN
CALL proc2(a);
SELECT a;
END;
BEGIN
CALL proc2(a);
END;
$$
# Path embedded in PACKAGE and PACKAGE's routines
CREATE PACKAGE pkg_emb_r_emb
PATH 'test3'
AS
FUNCTION ff() RETURN TEXT;
FUNCTION fp() RETURN TEXT;
PROCEDURE pf();
PROCEDURE pp();
END;
$$
CREATE PACKAGE BODY pkg_emb_r_emb
PATH 'test3'
AS
a TEXT;
FUNCTION ff() RETURN TEXT
PATH 'test2'
  AS
BEGIN
RETURN func2();
END;
FUNCTION fp() RETURN TEXT
PATH 'test2'
  AS
a TEXT;
BEGIN
CALL proc2(a);
RETURN a;
END;
PROCEDURE pf()
PATH 'test2'
  AS
BEGIN
SELECT func2();
END;
PROCEDURE pp()
PATH 'test2'
  AS
a TEXT;
BEGIN
CALL proc2(a);
SELECT a;
END;
BEGIN
CALL proc2(a);
END;
$$
CREATE PACKAGE pkg_emb_inner_block
PATH 'test2'
AS
FUNCTION ff() RETURN TEXT;
FUNCTION fp() RETURN TEXT;
PROCEDURE pf();
PROCEDURE pp();
END;
$$
CREATE PACKAGE BODY pkg_emb_inner_block
PATH 'test2'
AS
a TEXT;
FUNCTION ff() RETURN TEXT
AS
a TEXT;
BEGIN
BEGIN
a:= func2();
END;
RETURN a;
END;
FUNCTION fp() RETURN TEXT
AS
a TEXT;
BEGIN
BEGIN
CALL proc2(a);
END;
RETURN a;
END;
PROCEDURE pf()
AS
BEGIN
BEGIN
SELECT func2();
END;
END;
PROCEDURE pp()
AS
a TEXT;
BEGIN
BEGIN
CALL proc2(a);
END;
SELECT a;
END;
BEGIN
CALL proc2(a);
END;
$$
SELECT pkg_r_emb.ff();
pkg_r_emb.ff()
test2.func2
SELECT pkg_r_emb.fp();
pkg_r_emb.fp()
test2.proc2
CALL pkg_r_emb.pf();
func2()
test2.func2
CALL pkg_r_emb.pp();
a
test2.proc2
SELECT pkg_r_emb.ff();
pkg_r_emb.ff()
test2.func2
SELECT pkg_r_emb.fp();
pkg_r_emb.fp()
test2.proc2
CALL pkg_r_emb.pf();
func2()
test2.func2
CALL pkg_r_emb.pp();
a
test2.proc2
SELECT pkg_emb.ff();
pkg_emb.ff()
test2.func2
SELECT pkg_emb.fp();
pkg_emb.fp()
test2.proc2
CALL pkg_emb.pf();
func2()
test2.func2
CALL pkg_emb.pp();
a
test2.proc2
SELECT pkg_emb.ff();
pkg_emb.ff()
test2.func2
SELECT pkg_emb.fp();
pkg_emb.fp()
test2.proc2
CALL pkg_emb.pf();
func2()
test2.func2
CALL pkg_emb.pp();
a
test2.proc2

# PACKAGE's ROUTINE PATH overrides PACKAGE PATHs

SELECT pkg_emb_r_emb.ff();
pkg_emb_r_emb.ff()
test2.func2
SELECT pkg_emb_r_emb.fp();
pkg_emb_r_emb.fp()
test2.proc2
CALL pkg_emb_r_emb.pf();
func2()
test2.func2
CALL pkg_emb_r_emb.pp();
a
test2.proc2

# Inner sp-block within PACKAGE routine uses the PACKAGE's PATH

SELECT pkg_emb_inner_block.ff();
pkg_emb_inner_block.ff()
test2.func2
SELECT pkg_emb_inner_block.fp();
pkg_emb_inner_block.fp()
test2.proc2
CALL pkg_emb_inner_block.pf();
func2()
test2.func2
CALL pkg_emb_inner_block.pp();
a
test2.proc2
#
# Parse error when PATH is embedded in a PACKAGE's routine
#
CREATE PACKAGE pkg_emb_parse_error
AS
FUNCTION f1() RETURN TEXT;
END;
$$
CREATE PACKAGE BODY pkg_emb_parse_error
AS
FUNCTION f1() RETURN TEXT
PATH 'test2'
  AS
BEGIN
1;
END;
END;
$$
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1;
END;
END' at line 7
SELECT @@session.path$$
@@session.path
`CURRENT_SCHEMA`
DROP PACKAGE pkg_emb_parse_error$$
CREATE PACKAGE pkg_emb_parse_error
AS
PROCEDURE p1();
END;
$$
CREATE PACKAGE BODY pkg_emb_parse_error
AS
PROCEDURE p1()
PATH 'test2'
  AS
BEGIN
1;
END;
END;
$$
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1;
END;
END' at line 7
SELECT @@session.path$$
@@session.path
`CURRENT_SCHEMA`
DROP PACKAGE pkg_emb_parse_error$$
DROP DATABASE test2;
DROP DATABASE test3;
DROP PACKAGE pkg_r_emb;
DROP PACKAGE pkg_emb;
DROP PACKAGE pkg_emb_r_emb;
DROP PACKAGE pkg_emb_inner_block;
