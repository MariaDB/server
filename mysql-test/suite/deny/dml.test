--source include/not_embedded.inc

create user foo;

create database deny_db;
create table deny_db.t1 (a int, b int, secret int);
insert into deny_db.t1 values (1, 2, 3);

create table deny_db.t2 (a int, b int, secret int);
insert into deny_db.t2 values (10, 20, 30);

grant select (a) on deny_db.t1 to foo;
grant insert (a) on deny_db.t1 to foo;
grant update (a) on deny_db.t1 to foo;
grant delete on deny_db.t1 to foo;

--connect (con1,localhost,foo,,)
insert into deny_db.t1 (a) values (1), (2), (3);
disconnect con1;

connection default;
deny insert on deny_db.* to foo;

--connect (con1,localhost,foo,,)
--error ER_TABLEACCESS_DENIED_ERROR
insert into deny_db.t1 (a) values (1), (2), (3);
update deny_db.t1 set a=a*10;
delete from deny_db.t1 where a = 20;
disconnect con1;

connection default;
select * from deny_db.t1 order by a;
truncate deny_db.t1;

revoke deny insert on deny_db.* from foo;


--connect (con1,localhost,foo,,)
insert into deny_db.t1 (a) values (1), (2), (3);
--echo #
--echo # Test that revoking insert deny allows inserting only into allowed
--echo # to insert columns.
--echo #
insert into deny_db.t1 (a) values (1), (2), (3);

--error ER_COLUMNACCESS_DENIED_ERROR
insert into deny_db.t1 (a,b) values (1,10), (2, 20), (3, 30);
disconnect con1;

connection default;
--echo #
--echo # Test delete/update command denies.
--echo #
deny select on deny_db.* to foo;

--connect (con1,localhost,foo,,)
--echo #
--echo # Test not allowed to delete / update because of lack of select
--echo # rights.
--echo #

--error ER_COLUMNACCESS_DENIED_ERROR
update deny_db.t1 set a=a*10 where a = 1;

--error ER_COLUMNACCESS_DENIED_ERROR
delete from deny_db.t1 where a = 20;
disconnect con1;


connection default;
--echo #
--echo # Now deny update and delete directly, but keep select.
--echo #
revoke deny select on deny_db.* from foo;
deny delete, update on deny_db.* to foo;

--connect (con1,localhost,foo,,)
--echo #
--echo # Test not allowed to delete / update because of lack of delete/update
--echo # rights.
--echo #

--error ER_TABLEACCESS_DENIED_ERROR
update deny_db.t1 set a=a*10;

--error ER_TABLEACCESS_DENIED_ERROR
delete from deny_db.t1 where a = 20;
disconnect con1;

--echo #
--echo # Test masking table level grants.
--echo #

connection default;
grant select on deny_db.t1 to foo;
grant insert on deny_db.t1 to foo;
grant update on deny_db.t1 to foo;
grant delete on deny_db.t1 to foo;

--connect (con1,localhost,foo,,)
insert into deny_db.t1 (a,b) values (1,10), (2, 20), (3, 30);
disconnect con1;

connection default;
deny insert on deny_db.* to foo;

--connect (con1,localhost,foo,,)
--error ER_TABLEACCESS_DENIED_ERROR
insert into deny_db.t1 (a,b) values (1,10), (2, 20), (3, 30);

--error ER_TABLEACCESS_DENIED_ERROR
update deny_db.t1 set a=a*10;

--error ER_TABLEACCESS_DENIED_ERROR
delete from deny_db.t1 where a = 20;

disconnect con1;

connection default;
revoke deny update, delete on deny_db.* from foo;

--connect (con1,localhost,foo,,)
--error ER_TABLEACCESS_DENIED_ERROR
insert into deny_db.t1 (a,b) values (1,10), (2, 20), (3, 30);

update deny_db.t1 set a=a*10;
delete from deny_db.t1 where a = 20;
disconnect con1;

--echo #
--echo # Test masking database & global level grants.
--echo #
connection default;
grant select on *.* to foo;
grant insert on *.* to foo;
grant update on *.* to foo;
grant delete on *.* to foo;
grant select on deny_db.* to foo;
grant insert on deny_db.* to foo;
grant update on deny_db.* to foo;
grant delete on deny_db.* to foo;
deny select, insert on deny_db.* to foo;

--connect (con1,localhost,foo,,)
--error ER_TABLEACCESS_DENIED_ERROR
insert into deny_db.t1 (a,b) values (1,10), (2, 20), (3, 30);

--error ER_COLUMNACCESS_DENIED_ERROR
update deny_db.t1 set a=a*10;

--error ER_COLUMNACCESS_DENIED_ERROR
delete from deny_db.t1 where a = 20;
disconnect con1;

connection default;
revoke deny select on deny_db.* from foo;
deny update, delete on deny_db.* to foo;

--connect (con1,localhost,foo,,)
--error ER_TABLEACCESS_DENIED_ERROR
insert into deny_db.t1 (a,b) values (1,10), (2, 20), (3, 30);

--error ER_TABLEACCESS_DENIED_ERROR
update deny_db.t1 set a=a*10;

--error ER_TABLEACCESS_DENIED_ERROR
delete from deny_db.t1 where a = 20;
disconnect con1;

connection default;
deny select on deny_db.* to foo;

--connect (con1,localhost,foo,,)
--error ER_TABLEACCESS_DENIED_ERROR
insert into deny_db.t1 (a,b) values (1,10), (2, 20), (3, 30);

--error ER_TABLEACCESS_DENIED_ERROR
update deny_db.t1 set a=a*10;

--error ER_TABLEACCESS_DENIED_ERROR
delete from deny_db.t1 where a = 20;
disconnect con1;

connection default;
drop database deny_db;
drop user foo;
