--source include/not_embedded.inc

create user foo;
create database deny_db;
create table deny_db.t1 (a int, b int, secret int);
create table deny_db.t2 (a2 int, b2 int, secret2 int);
insert into deny_db.t2 values (100, 200, 300);

grant all on *.* to foo;
grant all on deny_db.* to foo;
grant all on deny_db.t1 to foo;
grant all on deny_db.t2 to foo;
grant select (a, b, secret) on deny_db.t1 to foo;
grant insert (a, b, secret) on deny_db.t1 to foo;
grant update (a, b, secret) on deny_db.t1 to foo;
grant references (a, b, secret) on deny_db.t1 to foo;

grant select (a2, b2, secret2) on deny_db.t2 to foo;
grant insert (a2, b2, secret2) on deny_db.t2 to foo;
grant update (a2, b2, secret2) on deny_db.t2 to foo;
grant references (a2, b2, secret2) on deny_db.t2 to foo;

--echo #
--echo # Test select and insert ... select commands.
--echo #
deny select (secret) on deny_db.t1 to foo;

--connect (con1,localhost,foo,,)

--error ER_COLUMNACCESS_DENIED_ERROR
select * from deny_db.t1;
--error ER_COLUMNACCESS_DENIED_ERROR
select secret from deny_db.t1;

--echo #
--echo # These are different code paths. Check both.
--echo #
insert into deny_db.t1 (a, b, secret) values (1, 2, 3);
insert into deny_db.t1 values (1, 2, 3);
--echo #
--echo # Check INSERT SELECT as we need to account for 2 different kinds of
--echo # privileges.
--echo #
--error ER_COLUMNACCESS_DENIED_ERROR
insert into deny_db.t1 select * from deny_db.t1;
insert into deny_db.t1 select * from deny_db.t2;

show full columns from deny_db.t1;
show full columns from deny_db.t2;
disconnect con1;

connection default;
revoke deny select (secret) on deny_db.t1 from foo;
deny select(secret2) on deny_db.t2 to foo;

--connect (con1,localhost,foo,,)
insert into deny_db.t1 (a, b, secret) values (1, 2, 3);
insert into deny_db.t1 values (1, 2, 3);
insert into deny_db.t1 select * from deny_db.t1;
--error ER_COLUMNACCESS_DENIED_ERROR
insert into deny_db.t1 select * from deny_db.t2;
show full columns from deny_db.t1;
show full columns from deny_db.t2;
disconnect con1;

--echo #
--echo # Test insert commands
--echo #
connection default;
deny insert (secret) on deny_db.t1 to foo;

--connect (con1,localhost,foo,,)

--error ER_COLUMNACCESS_DENIED_ERROR
insert into deny_db.t1 (a, b, secret) values (1, 2, 3);
--error ER_COLUMNACCESS_DENIED_ERROR
insert into deny_db.t1 values (1, 2, 3);
--error ER_COLUMNACCESS_DENIED_ERROR
insert into deny_db.t1 select * from deny_db.t1;
--error ER_COLUMNACCESS_DENIED_ERROR
insert into deny_db.t1 select * from deny_db.t2;
show full columns from deny_db.t1;
disconnect con1;

--echo #
--echo # Test update commands.
--echo #

connection default;
deny select (secret) on deny_db.t1 to foo;
deny select (secret2) on deny_db.t2 to foo;

--connect (con1, localhost,foo,,)
--error ER_COLUMNACCESS_DENIED_ERROR
update deny_db.t1 set a=111, b=222 where secret=10;
--error ER_COLUMNACCESS_DENIED_ERROR
update deny_db.t1 set a=123 where a = (select secret2 from deny_db.t2);

show full columns from deny_db.t1;
show full columns from deny_db.t2;
disconnect con1;

connection default;
deny update (secret) on deny_db.t1 to foo;

--connect (con1, localhost,foo,,)
update deny_db.t1 set a=111, b=222;
--error ER_COLUMNACCESS_DENIED_ERROR
update deny_db.t1 set secret=333, a=111;
--error ER_COLUMNACCESS_DENIED_ERROR
update deny_db.t1 set secret=333;
--error ER_COLUMNACCESS_DENIED_ERROR
update deny_db.t1 set a=123, secret=333;

disconnect con1;

connection default;
drop user foo;
drop database deny_db;

