-- source include/innodb_page_size_small.inc
# lazy eviction might not be lazy enough when key rotation
# scans through pages
-- source include/not_encrypted.inc

-- let $query_i_s = SELECT page_size FROM information_schema.innodb_cmpmem WHERE pages_used > 0

create table t1(a text) engine=innodb key_block_size=4;

-- disable_query_log

# insert some rows so we are using compressed pages
-- let $i = 10
while ($i)
{
  insert into t1 values(repeat('abcdefghijklmnopqrstuvwxyz',100));
  dec $i;
}
-- enable_query_log

# we should be using some 4K pages
-- eval $query_i_s

drop table t1;

# because of lazy eviction at drop table there should still be some
# used 4K pages
-- eval $query_i_s

# create a non-compressed table and insert enough into it to evict
# compressed pages
create table t2(a text) engine=innodb;

-- disable_query_log

-- let $i = 500
while ($i)
{
  insert into t2 values(repeat('abcdefghijklmnopqrstuvwxyz',1000));
  dec $i;
}

-- enable_query_log

# now there should be no 4K pages in the buffer pool
-- eval $query_i_s

drop table t2;
