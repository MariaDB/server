RESET MASTER;
CREATE TABLE t1 (c1 LONGTEXT) ENGINE = InnoDB;
INSERT INTO t1 values(repeat("1", 5242880));
INSERT INTO t1 values(repeat("1", 5242880));
FLUSH BINARY LOGS;
SET GLOBAL binlog_cache_free_flush_threshold = 10 * 1024 * 1024;
#
# Reserved space is not big enough, rename will not happen. But rotate
# will succeed.
#
SET debug = 'd,simulate_required_size_too_big';
UPDATE t1 SET c1 = repeat('2', 5242880);
# Binlog file is ro
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000003	#	Gtid	#	#	BEGIN GTID #-#-#
master-bin.000003	#	Annotate_rows	#	#	UPDATE t1 SET c1 = repeat('2', 5242880)
master-bin.000003	#	Table_map	#	#	table_id: # (test.t1)
master-bin.000003	#	Update_rows_v1	#	#	table_id: #
master-bin.000003	#	Update_rows_v1	#	#	table_id: # flags: STMT_END_F
master-bin.000003	#	Xid	#	#	COMMIT /* XID */
#
# Error happens when writing data into binlog cache, rename will not
# happen. But rotate will succeed.
#
SET debug = 'd,simulate_write_binlog_cache_head_error';
UPDATE t1 SET c1 = repeat('3', 5242880);
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000004	#	Gtid	#	#	BEGIN GTID #-#-#
master-bin.000004	#	Annotate_rows	#	#	UPDATE t1 SET c1 = repeat('3', 5242880)
master-bin.000004	#	Table_map	#	#	table_id: # (test.t1)
master-bin.000004	#	Update_rows_v1	#	#	table_id: #
master-bin.000004	#	Update_rows_v1	#	#	table_id: # flags: STMT_END_F
master-bin.000004	#	Xid	#	#	COMMIT /* XID */
#
# Error happens when renaming binlog cache to binlog file, rename will
# not happen. Since the original binlog is delete, the rotate will failed
# too. binlog will be closed.
#
SET debug = 'd,simulate_rename_binlog_cache_to_binlog_error';
UPDATE t1 SET c1 = repeat('4', 5242880);
ERROR HY000: Can't open file: './master-bin.000005' (errno: 1 "Operation not permitted")
SELECT count(*) FROM t1 WHERE c1 like "4%";
count(*)
2
# Binlog is closed
show master status;
File	Position	Binlog_Do_DB	Binlog_Ignore_DB
# restart
show master status;
File	Position	Binlog_Do_DB	Binlog_Ignore_DB
master-bin.000005	#	<Binlog_Do_DB>	<Binlog_Ignore_DB>
call mtr.add_suppression(".*Turning logging off for the whole duration.*");
call mtr.add_suppression(".*Turning logging off for the whole duration.*");
DROP TABLE t1;
