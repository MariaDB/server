set @old_binlog_annotate_row_events= @@global.binlog_annotate_row_events;
set global binlog_annotate_row_events= OFF;
set session binlog_annotate_row_events= OFF;
# Safety
set lock_wait_timeout= 5;
create table t1 (x int, t text) on commit preserve rows;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'on commit preserve rows' at line 1
create global temporary table t1 (x int, t text) on commit preserve rows;
select TABLE_TYPE from information_schema.tables where table_name = 't1';
TABLE_TYPE
GLOBAL TEMPORARY
drop temporary table t1;
ERROR 42S02: Unknown table 'test.t1'
show create table t1;
Table	Create Table
t1	CREATE GLOBAL TEMPORARY TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `t` text DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT PRESERVE ROWS
flush tables;
show create table t1;
Table	Create Table
t1	CREATE GLOBAL TEMPORARY TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `t` text DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT PRESERVE ROWS
insert into t1 values(1, 'one');
select TABLE_TYPE from information_schema.tables where table_name = 't1';
TABLE_TYPE
TEMPORARY
GLOBAL TEMPORARY
show table status where temporary='Y';
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment	Max_index_length	Temporary
truncate t1;
insert into t1 values(1, 'one');
select * from t1;
x	t
1	one
connect  con1,localhost,root,,;
select * from t1 join t1 as t2;
x	t	x	t
insert into t1 values(2, 'two');
select * from t1;
x	t
2	two
select * from t1 join t1 as t2;
x	t	x	t
2	two	2	two
connection default;
select * from t1;
x	t
1	one
select * from t1 join t1 as t2;
x	t	x	t
1	one	1	one
alter table t1 add y int;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
drop table t1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
connection con1;
set debug_sync= 'thread_end signal closed';
disconnect con1;
connection default;
set debug_sync= 'now wait_for closed';
drop temporary table t1;
ERROR 42S02: Unknown table 't1'
select * from t1;
x	t
1	one
alter table t1 add j int;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
drop table t1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
truncate table t1;
alter table t1 add j int;
show create table t1;
Table	Create Table
t1	CREATE GLOBAL TEMPORARY TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `t` text DEFAULT NULL,
  `j` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT PRESERVE ROWS
drop table t1;
CREATE GLOBAL TEMPORARY TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `t` text DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT PRESERVE ROWS;
show create table t1;
Table	Create Table
t1	CREATE GLOBAL TEMPORARY TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `t` text DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT PRESERVE ROWS
drop table t1;
show create table t1;
ERROR 42S02: Table 'test.t1' doesn't exist
create global temporary table t1 (x int, t text) on commit preserve rows;
show create table t1;
Table	Create Table
t1	CREATE GLOBAL TEMPORARY TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `t` text DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT PRESERVE ROWS
drop table t1;
create global temporary table t (x int) on commit delete rows;
insert into t values (1);
select * from t;
x
begin;
insert into t values (1);
select * from t;
x
1
commit;
select * from t;
x
connect  con1,localhost,root,,;
select * from t;
x
insert into t values (1);
select * from t;
x
begin;
insert into t values (1);
select * from t;
x
1
commit;
select * from t;
x
set debug_sync= 'thread_end signal closed';
disconnect con1;
connection default;
set debug_sync= 'now wait_for closed';
drop table t;
create global temporary table t (x int) on commit PRESERVE rows;
insert into t values (1);
select * from t;
x
1
begin;
insert into t values (1);
select * from t;
x
1
1
commit;
select * from t;
x
1
1
connect  con1,localhost,root,,;
select * from t;
x
insert into t values (1);
select * from t;
x
1
begin;
insert into t values (1);
select * from t;
x
1
1
commit;
select * from t;
x
1
1
set debug_sync= 'thread_end signal closed';
disconnect con1;
connection default;
set debug_sync= 'now wait_for closed';
drop table t;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
truncate t;
drop table t;
create global temporary table t (x int) on commit PRESERVE rows;
connect  con1,localhost,root,,;
insert t values(1);
connection default;
alter table t add j int;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
set statement lock_wait_timeout=0 for drop table t;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
connection con1;
set debug_sync= 'thread_end signal closed';
disconnect con1;
connection default;
set debug_sync= 'now wait_for closed';
drop table t;
create global temporary table t (x int) partition by hash(x);
ERROR HY000: Clause PARTITION can't be used with GLOBAL TEMPORARY TABLE
create global temporary table t (x int) with system versioning;
ERROR HY000: Clause SYSTEM VERSIONING can't be used with GLOBAL TEMPORARY TABLE
create global temporary table t (x int, y int, foreign key (x) references t(y));
ERROR HY000: Clause FOREIGN KEY can't be used with GLOBAL TEMPORARY TABLE
create global temporary table t (x int);
alter table t force, lock=none, algorithm=copy;
ERROR 0A000: LOCK=NONE is not supported for this operation. Try LOCK=EXCLUSIVE
alter table t rename column x to y, lock=none, algorithm=inplace;
ERROR 0A000: ALGORITHM=INPLACE is not supported for this operation. Try ALGORITHM=COPY
drop table t;
### VIEWS
create global temporary table t (x int);
connect  con1,localhost,root,,;
begin;
insert into t values(1);
connection default;
create view v as select * from t;
begin;
insert into t values(2);
select * from v;
x
2
connection con1;
select * from v;
x
1
commit;
# Now table was truncated
select * from v;
x
connection default;
commit;
drop view v;
drop table t;
### AS SELECT
create global temporary table t1(x int) on commit preserve rows
as select 1 as 'x';
select * from t1;
x
1
create global temporary table t2 on commit preserve rows
as values(5),(6),(7);
select * from t2;
5
5
6
7
connection con1;
select * from t1;
x
select `5` as 'empty' from t2;
empty
truncate t1;
truncate t2;
connection default;
truncate t1;
truncate t2;
drop table t1;
drop table t2;
create global temporary table t(x int) on commit delete rows
as select 1 as 'x';
# Implicit commit deletes data
select * from t;
x
drop table t;
create global temporary table t2(`5` int primary key) as values(5),(5),(5);
ERROR 23000: Duplicate entry '5' for key 'PRIMARY'
select `5` as col from t2;
col
drop table t2;
### CREATE TABLE ... LIKE
create table t1(x int primary key);
create global temporary table t2 like t1;
show create table t2;
Table	Create Table
t2	CREATE GLOBAL TEMPORARY TABLE `t2` (
  `x` int(11) NOT NULL,
  PRIMARY KEY (`x`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT DELETE ROWS
drop table t1;
create table t1 like t2;
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `x` int(11) NOT NULL,
  PRIMARY KEY (`x`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci
drop table t1;
create global temporary table t3 like t2;
show create table t3;
Table	Create Table
t3	CREATE GLOBAL TEMPORARY TABLE `t3` (
  `x` int(11) NOT NULL,
  PRIMARY KEY (`x`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT DELETE ROWS
drop table t2;
drop table t3;
create global temporary table t2(x int primary key) on commit preserve rows;
create table t1 like t2;
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `x` int(11) NOT NULL,
  PRIMARY KEY (`x`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci
create global temporary table t3 like t2;
show create table t3;
Table	Create Table
t3	CREATE GLOBAL TEMPORARY TABLE `t3` (
  `x` int(11) NOT NULL,
  PRIMARY KEY (`x`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT DELETE ROWS
create temporary table t4 like t2;
show create table t4;
Table	Create Table
t4	CREATE TEMPORARY TABLE `t4` (
  `x` int(11) NOT NULL,
  PRIMARY KEY (`x`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci
truncate t2;
drop table t1;
drop table t2;
drop table t3;
drop table t4;
### RENAME
create global temporary table t2(x int primary key) on commit preserve rows;
connection con1;
insert t2 values (1);
connection default;
rename table t2 NOWAIT to tx;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
connection con1;
truncate t2;
connection default;
select * from t2;
x
rename table t2 to tx;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
truncate t2;
rename table t2 to tx;
show create table t2;
ERROR 42S02: Table 'test.t2' doesn't exist
show create table tx;
Table	Create Table
tx	CREATE GLOBAL TEMPORARY TABLE `tx` (
  `x` int(11) NOT NULL,
  PRIMARY KEY (`x`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT PRESERVE ROWS
drop table tx;
### FLUSH, LOCK
create global temporary table t(x int primary key) on commit preserve rows;
flush table t;
insert t values (1);
flush table t;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
select * from t;
x
1
truncate t;
flush table t;
lock table t write;
ERROR 42S02: Unknown table 't'
drop table t;
# Multi-table DML
create table t(x int, txt text);
create global temporary table gtt(x int) on commit preserve rows;
insert t values (1, 'one'), (2,'two'), (3, 'three'), (4, 'four');
insert gtt values (2),(3),(5);
connection con1;
insert gtt values (4),(6);
connection default;
update t, gtt set t.txt= CONCAT(t.txt, ' tables') where t.x = gtt.x;
connection con1;
update t, gtt set t.txt= CONCAT(t.txt, ' databases') where t.x = gtt.x;
truncate gtt;
connection default;
select * from t;
x	txt
1	one
2	two tables
3	three tables
4	four databases
truncate gtt;
drop table t;
drop table gtt;
disconnect con1;
show binlog events;
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000001	4	Format_desc	1	256	Server ver: 11.8.0-MariaDB-debug-log, Binlog ver: 4
master-bin.000001	256	Gtid_list	1	285	[]
master-bin.000001	285	Binlog_checkpoint	1	329	master-bin.000001
master-bin.000001	329	Gtid	1	371	GTID 0-1-1
master-bin.000001	371	Query	1	519	use `test`; create global temporary table t1 (x int, t text) on commit preserve rows
master-bin.000001	519	Gtid	1	561	GTID 0-1-2
master-bin.000001	561	Query	1	640	use `test`; flush tables
master-bin.000001	640	Gtid	1	682	GTID 0-1-3
master-bin.000001	682	Query	1	782	use `test`; alter table t1 add j int
master-bin.000001	782	Gtid	1	824	GTID 0-1-4
master-bin.000001	824	Query	1	941	use `test`; DROP TABLE `t1` /* generated by server */
master-bin.000001	941	Gtid	1	983	GTID 0-1-5
master-bin.000001	983	Query	1	1241	use `test`; CREATE GLOBAL TEMPORARY TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `t` text DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci ON COMMIT PRESERVE ROWS
master-bin.000001	1241	Gtid	1	1283	GTID 0-1-6
master-bin.000001	1283	Query	1	1400	use `test`; DROP TABLE `t1` /* generated by server */
master-bin.000001	1400	Gtid	1	1442	GTID 0-1-7
master-bin.000001	1442	Query	1	1590	use `test`; create global temporary table t1 (x int, t text) on commit preserve rows
master-bin.000001	1590	Gtid	1	1632	GTID 0-1-8
master-bin.000001	1632	Query	1	1749	use `test`; DROP TABLE `t1` /* generated by server */
master-bin.000001	1749	Gtid	1	1791	GTID 0-1-9
master-bin.000001	1791	Query	1	1928	use `test`; create global temporary table t (x int) on commit delete rows
master-bin.000001	1928	Gtid	1	1970	GTID 0-1-10
master-bin.000001	1970	Query	1	2086	use `test`; DROP TABLE `t` /* generated by server */
master-bin.000001	2086	Gtid	1	2128	GTID 0-1-11
master-bin.000001	2128	Query	1	2267	use `test`; create global temporary table t (x int) on commit PRESERVE rows
master-bin.000001	2267	Gtid	1	2309	GTID 0-1-12
master-bin.000001	2309	Query	1	2425	use `test`; DROP TABLE `t` /* generated by server */
master-bin.000001	2425	Gtid	1	2467	GTID 0-1-13
master-bin.000001	2467	Query	1	2606	use `test`; create global temporary table t (x int) on commit PRESERVE rows
master-bin.000001	2606	Gtid	1	2648	GTID 0-1-14
master-bin.000001	2648	Query	1	2764	use `test`; DROP TABLE `t` /* generated by server */
master-bin.000001	2764	Gtid	1	2806	GTID 0-1-15
master-bin.000001	2806	Query	1	2921	use `test`; create global temporary table t (x int)
master-bin.000001	2921	Gtid	1	2963	GTID 0-1-16
master-bin.000001	2963	Query	1	3079	use `test`; DROP TABLE `t` /* generated by server */
master-bin.000001	3079	Gtid	1	3121	GTID 0-1-17
master-bin.000001	3121	Query	1	3236	use `test`; create global temporary table t (x int)
master-bin.000001	3236	Gtid	1	3278	GTID 0-1-18
master-bin.000001	3278	Query	1	3472	use `test`; CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v` AS select * from t
master-bin.000001	3472	Gtid	1	3514	GTID 0-1-19
master-bin.000001	3514	Query	1	3601	use `test`; drop view v
master-bin.000001	3601	Gtid	1	3643	GTID 0-1-20
master-bin.000001	3643	Query	1	3759	use `test`; DROP TABLE `t` /* generated by server */
master-bin.000001	3759	Gtid	1	3801	GTID 0-1-21
master-bin.000001	3801	Query	1	3950	use `test`; create global temporary table t1(x int) on commit preserve rows
as select 1 as 'x'
master-bin.000001	3950	Gtid	1	3992	GTID 0-1-22
master-bin.000001	3992	Query	1	4136	use `test`; create global temporary table t2 on commit preserve rows
as values(5),(6),(7)
master-bin.000001	4136	Gtid	1	4178	GTID 0-1-23
master-bin.000001	4178	Query	1	4295	use `test`; DROP TABLE `t1` /* generated by server */
master-bin.000001	4295	Gtid	1	4337	GTID 0-1-24
master-bin.000001	4337	Query	1	4454	use `test`; DROP TABLE `t2` /* generated by server */
master-bin.000001	4454	Gtid	1	4496	GTID 0-1-25
master-bin.000001	4496	Query	1	4642	use `test`; create global temporary table t(x int) on commit delete rows
as select 1 as 'x'
master-bin.000001	4642	Gtid	1	4684	GTID 0-1-26
master-bin.000001	4684	Query	1	4800	use `test`; DROP TABLE `t` /* generated by server */
master-bin.000001	4800	Gtid	1	4842	GTID 0-1-27
master-bin.000001	4842	Query	1	4959	use `test`; DROP TABLE `t2` /* generated by server */
master-bin.000001	4959	Gtid	1	5001	GTID 0-1-28
master-bin.000001	5001	Query	1	5111	use `test`; create table t1(x int primary key)
master-bin.000001	5111	Gtid	1	5153	GTID 0-1-29
master-bin.000001	5153	Query	1	5269	use `test`; create global temporary table t2 like t1
master-bin.000001	5269	Gtid	1	5311	GTID 0-1-30
master-bin.000001	5311	Query	1	5428	use `test`; DROP TABLE `t1` /* generated by server */
master-bin.000001	5428	Gtid	1	5470	GTID 0-1-31
master-bin.000001	5470	Query	1	5569	use `test`; create table t1 like t2
master-bin.000001	5569	Gtid	1	5611	GTID 0-1-32
master-bin.000001	5611	Query	1	5728	use `test`; DROP TABLE `t1` /* generated by server */
master-bin.000001	5728	Gtid	1	5770	GTID 0-1-33
master-bin.000001	5770	Query	1	5886	use `test`; create global temporary table t3 like t2
master-bin.000001	5886	Gtid	1	5928	GTID 0-1-34
master-bin.000001	5928	Query	1	6045	use `test`; DROP TABLE `t2` /* generated by server */
master-bin.000001	6045	Gtid	1	6087	GTID 0-1-35
master-bin.000001	6087	Query	1	6204	use `test`; DROP TABLE `t3` /* generated by server */
master-bin.000001	6204	Gtid	1	6246	GTID 0-1-36
master-bin.000001	6246	Query	1	6397	use `test`; create global temporary table t2(x int primary key) on commit preserve rows
master-bin.000001	6397	Gtid	1	6439	GTID 0-1-37
master-bin.000001	6439	Query	1	6538	use `test`; create table t1 like t2
master-bin.000001	6538	Gtid	1	6580	GTID 0-1-38
master-bin.000001	6580	Query	1	6696	use `test`; create global temporary table t3 like t2
master-bin.000001	6696	Gtid	1	6738	GTID 0-1-39
master-bin.000001	6738	Query	1	6847	use `test`; create temporary table t4 like t2
master-bin.000001	6847	Gtid	1	6889	GTID 0-1-40
master-bin.000001	6889	Query	1	7006	use `test`; DROP TABLE `t1` /* generated by server */
master-bin.000001	7006	Gtid	1	7048	GTID 0-1-41
master-bin.000001	7048	Query	1	7165	use `test`; DROP TABLE `t2` /* generated by server */
master-bin.000001	7165	Gtid	1	7207	GTID 0-1-42
master-bin.000001	7207	Query	1	7324	use `test`; DROP TABLE `t3` /* generated by server */
master-bin.000001	7324	Gtid	1	7366	GTID 0-1-43
master-bin.000001	7366	Query	1	7484	use `test`; DROP TEMPORARY TABLE `t4` /* generated by server */
master-bin.000001	7484	Gtid	1	7526	GTID 0-1-44
master-bin.000001	7526	Query	1	7677	use `test`; create global temporary table t2(x int primary key) on commit preserve rows
master-bin.000001	7677	Gtid	1	7719	GTID 0-1-45
master-bin.000001	7719	Query	1	7816	use `test`; rename table t2 to tx
master-bin.000001	7816	Gtid	1	7858	GTID 0-1-46
master-bin.000001	7858	Query	1	7975	use `test`; DROP TABLE `tx` /* generated by server */
master-bin.000001	7975	Gtid	1	8017	GTID 0-1-47
master-bin.000001	8017	Query	1	8167	use `test`; create global temporary table t(x int primary key) on commit preserve rows
master-bin.000001	8167	Gtid	1	8209	GTID 0-1-48
master-bin.000001	8209	Query	1	8289	use `test`; flush table t
master-bin.000001	8289	Gtid	1	8331	GTID 0-1-49
master-bin.000001	8331	Query	1	8411	use `test`; flush table t
master-bin.000001	8411	Gtid	1	8453	GTID 0-1-50
master-bin.000001	8453	Query	1	8569	use `test`; DROP TABLE `t` /* generated by server */
master-bin.000001	8569	Gtid	1	8611	GTID 0-1-51
master-bin.000001	8611	Query	1	8718	use `test`; create table t(x int, txt text)
master-bin.000001	8718	Gtid	1	8760	GTID 0-1-52
master-bin.000001	8760	Query	1	8900	use `test`; create global temporary table gtt(x int) on commit preserve rows
master-bin.000001	8900	Gtid	1	8942	BEGIN GTID 0-1-53
master-bin.000001	8942	Query	1	0	use `test`; insert t values (1, 'one'), (2,'two'), (3, 'three'), (4, 'four')
master-bin.000001	9073	Query	1	9146	COMMIT
master-bin.000001	9146	Gtid	1	9188	BEGIN GTID 0-1-54
master-bin.000001	9188	Table_map	1	0	table_id: 72 (test.t)
master-bin.000001	9234	Update_rows_v1	1	0	table_id: 72 flags: STMT_END_F
master-bin.000001	9326	Query	1	9408	COMMIT
master-bin.000001	9408	Gtid	1	9450	BEGIN GTID 0-1-55
master-bin.000001	9450	Table_map	1	0	table_id: 72 (test.t)
master-bin.000001	9496	Update_rows_v1	1	0	table_id: 72 flags: STMT_END_F
master-bin.000001	9562	Query	1	9644	COMMIT
master-bin.000001	9644	Gtid	1	9686	GTID 0-1-56
master-bin.000001	9686	Query	1	9802	use `test`; DROP TABLE `t` /* generated by server */
master-bin.000001	9802	Gtid	1	9844	GTID 0-1-57
master-bin.000001	9844	Query	1	9962	use `test`; DROP TABLE `gtt` /* generated by server */
set global binlog_annotate_row_events= @old_binlog_annotate_row_events;
