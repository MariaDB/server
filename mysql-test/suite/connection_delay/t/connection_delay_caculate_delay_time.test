--source include/have_debug.inc
# Save the initial number of concurrent sessions
--source include/count_sessions.inc

--echo # Connection delay tests for valid user accounts

--echo
--echo # ----------------------------------------------------------------------
--echo
--echo # Setup

--echo # Create user accounts for testing
CREATE USER u1 IDENTIFIED BY 'abcd';
CREATE USER u2 IDENTIFIED BY 'abcd';
CREATE USER u3 IDENTIFIED BY 'abcd';

--echo # Declare config variables
let $timeout=30;
let $max_password_errors=4294967295;
let $password_errors_before_delay=3;
--source ../inc/save_variables.inc
--source ../inc/skip_connection_delay.inc
--echo # Set failed attempts to 3
eval SET @@global.password_errors_before_delay = $password_errors_before_delay;
--echo # Current max password errors and timeout config
SELECT @@global.net_read_timeout,@@global.max_password_errors,@@global.password_errors_before_delay;
SELECT @@debug_dbug;

# We don't need to use client side authentication plugin for this test.
let $USE_AUTH_PLUGIN= 0;


--echo
--echo # ----------------------------------------------------------------------
--echo

--echo # Make enough failed attempts to trigger delays

disable_result_log;


--replace_result $MASTER_MYSOCK MASTER_SOCKET $MASTER_MYPORT MASTER_PORT
--error ER_ACCESS_DENIED_ERROR
connect(fail_con_u1, localhost, u1,haha,,,,);

--replace_result $MASTER_MYSOCK MASTER_SOCKET $MASTER_MYPORT MASTER_PORT
--error ER_ACCESS_DENIED_ERROR
connect(fail_con_u1, localhost, u1,haha,,,,);

--replace_result $MASTER_MYSOCK MASTER_SOCKET $MASTER_MYPORT MASTER_PORT
--error ER_ACCESS_DENIED_ERROR
connect(fail_con_u1, localhost, u1,haha,,,,);

enable_result_log;

let failed_count=3;

#-- echo # --------------Set timeout and max_password_errors to default value-----------------
let $step=1000;
eval SET @@global.net_read_timeout=$timeout;
eval SET @@global.max_password_errors=$max_password_errors;

let $HOST=%;
let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc



let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc

-- echo # --------------Set timeout to default and max_password_errors to 100-----------------
let $max_password_errors=100;
eval SET @@global.net_read_timeout=$timeout;
eval SET @@global.max_password_errors=$max_password_errors;
let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
let $step=`SELECT FLOOR(($timeout*1000)/($max_password_errors-3))`;
--source ../inc/check_connection_delay_step.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
let $step=`SELECT FLOOR(($timeout*1000)/($max_password_errors-3))`;
--source ../inc/check_connection_delay_step.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc


-- echo # --------------Set timeout to 24h and max_password_errors to 100-----------------
let $timeout=86400;
let $max_password_errors=100;
eval SET @@global.net_read_timeout=$timeout;
eval SET @@global.max_password_errors=$max_password_errors;
let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
let $step=`SELECT FLOOR(($timeout*1000)/($max_password_errors-3))`;
--source ../inc/check_connection_delay_step.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc


let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc

-- echo # --------------Set  timeout  to 60 second and max_password_errors to 100-----------------
let $timeout=60;
let $max_password_errors=100;
eval SET @@global.net_read_timeout=$timeout;
eval SET @@global.max_password_errors=$max_password_errors;
let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
let $step=`SELECT FLOOR(($timeout*1000)/($max_password_errors-3))`;
--source ../inc/check_connection_delay_step.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc


let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc
inc $failed_count;
let $SERVER_RESPONSE_TIME= `SELECT ($failed_count-$password_errors_before_delay) * $step`;
--source ../inc/check_response_delay_time.inc


--echo #-----------------------Reach max password errors , server reject connection
eval SET @@global.max_password_errors=$failed_count;
--replace_result $MASTER_MYSOCK MASTER_SOCKET $MASTER_MYPORT MASTER_PORT
--error ER_USER_IS_BLOCKED
connect(fail_con_u1, localhost, u1,haha,,,,);
--echo
--echo # ----------------------------------------------------------------------
--echo

--echo # Cleanup

connection default;

--source ../inc/restore_variables.inc
--echo # Remove user accounts created for the test
DROP USER u1;
DROP USER u2;
DROP USER u3;


# Wait till all disconnects are completed.
--source include/wait_until_count_sessions.inc

--echo
--echo # ----------------------------------------------------------------------
