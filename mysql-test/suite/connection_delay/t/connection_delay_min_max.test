

--source include/have_debug.inc

# Save the initial number of concurrent sessions
--source include/count_sessions.inc

--echo # Connection delay tests for valid user accounts

--echo
--echo # ----------------------------------------------------------------------
--echo

--echo # Setup

--echo # Create user account for testing
CREATE USER u1 IDENTIFIED BY 'abcd';

--echo # Save original values of connection_delay variables
SET @saved_connections_threshold = @@global.failed_attempts_before_delay;


-- echo # Set small values for connection_delay variables
SET @@global.failed_attempts_before_delay = 3;

# We don't need to use client side authentication plugin for this test.
let $USE_AUTH_PLUGIN= 0;
let $DELAY_MIN_RESPONSE_TIME = 1000;
--echo
--echo # ----------------------------------------------------------------------
--echo

--echo # Make enough failed attempts to trigger delays

disable_result_log;

--replace_result $MASTER_MYSOCK MASTER_SOCKET $MASTER_MYPORT MASTER_PORT
--error ER_ACCESS_DENIED_ERROR
connect(fail_con_u1, localhost, u1,,,,,);
--replace_result $MASTER_MYSOCK MASTER_SOCKET $MASTER_MYPORT MASTER_PORT
--error ER_ACCESS_DENIED_ERROR
connect(fail_con_u1, localhost, u1,haha,,,,);
--replace_result $MASTER_MYSOCK MASTER_SOCKET $MASTER_MYPORT MASTER_PORT
--error ER_ACCESS_DENIED_ERROR
connect(fail_con_u1, localhost, u1,haha,,,,);

enable_result_log;

--echo
--echo # Following attempts will experience delay in server response

let $HOST=localhost;

# Trying with invalid passwords

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;

--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= $DELAY_MIN_RESPONSE_TIME;
--source ../inc/check_response_delay_time.inc


let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;

--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= $DELAY_MIN_RESPONSE_TIME;
--source ../inc/check_response_delay_time.inc



let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;

--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= 3000;
--source ../inc/check_response_delay_time.inc


let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;

--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= 4000;
--source ../inc/check_response_delay_time.inc

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;

--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= 5000;
--source ../inc/check_response_delay_time.inc

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= 6000;
--source ../inc/check_response_delay_time.inc

--echo
--echo # Following attempts will not experience any delay in server response

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc

let $USER=u1;
let $PASSWORD=abcd;
let $SUCCESS=1;
--source ../inc/check_connection_delay.inc

--echo
--echo # ----------------------------------------------------------------------
--echo

--echo # Cleanup

connection default;
--echo # Restore original values of connection_delay variables
SET @@global.failed_attempts_before_delay = @saved_connections_threshold;


--echo # Remove user account created for the test
DROP USER u1;


# Wait till all disconnects are completed.
--source include/wait_until_count_sessions.inc

--echo
--echo # ----------------------------------------------------------------------
