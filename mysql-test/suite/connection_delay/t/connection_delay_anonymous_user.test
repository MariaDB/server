
--source include/have_debug.inc
# Save the initial number of concurrent sessions
--source include/count_sessions.inc

--echo # Connection delay tests for valid user accounts

--echo
--echo # ----------------------------------------------------------------------
--echo

--echo # Setup

--echo # Create anonymous user
CREATE USER ''@'localhost';
--echo # Save original values of connection_delay variables
SET @saved_connections_threshold = @@global.failed_attempts_before_delay;


let $DELAY_MIN_RESPONSE_TIME= 2000;
-- echo # Set small values for connection_delay variables
SET @@global.failed_attempts_before_delay = 3;


# We don't need to use client side authentication plugin for this test.
let $USE_AUTH_PLUGIN= 0;
let $HOST=localhost;
--echo
--echo # ----------------------------------------------------------------------
--echo

--echo # First round , following attempts will not experience any delay in server response

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc


let $USER=u2;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc

let $USER=u3;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc

--echo
--echo # ----------------------------------------------------------------------
--echo
--echo #Second round , following attempts will not experience any delay in server response

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;

--source ../inc/check_connection_delay.inc



let $USER=u2;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc




let $USER=u3;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc


--echo
--echo # ----------------------------------------------------------------------
--echo
--echo # Third round , following attempts will not experience any delay in server response

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;

--source ../inc/check_connection_delay.inc


let $USER=u2;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc

let $USER=u3;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc

--echo
--echo # Following attempts will experience delay in server response

let $USER=u1;
let $PASSWORD=hoho;
let $SUCCESS=0;

--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= $DELAY_MIN_RESPONSE_TIME;
--source ../inc/check_response_delay_time.inc


let $USER=u2;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= $DELAY_MIN_RESPONSE_TIME;
--source ../inc/check_response_delay_time.inc



let $USER=u3;
let $PASSWORD=hoho;
let $SUCCESS=0;
--source ../inc/check_connection_delay.inc

let $SERVER_RESPONSE_TIME= $DELAY_MIN_RESPONSE_TIME;
--source ../inc/check_response_delay_time.inc

--echo
--echo # ----------------------------------------------------------------------
--echo

--echo # Cleanup

connection default;

--echo # Restore original values of connection_delay variables
SET @@global.failed_attempts_before_delay = @saved_connections_threshold;

--echo # Drop anonymous user
DROP USER ''@'localhost';

# Wait till all disconnects are completed.
--source include/wait_until_count_sessions.inc

--echo
--echo # ----------------------------------------------------------------------
