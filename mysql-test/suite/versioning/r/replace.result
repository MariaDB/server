create table t (
id int primary key,
x int,
row_start SYS_DATATYPE as row start invisible,
row_end SYS_DATATYPE as row end invisible,
period for system_time (row_start, row_end)
) with system versioning;
insert t values (1, 2);
replace t values (1, 3);
replace t values (1, 3);
# MDEV-15990: REPLACE on a precise-versioned table
# returns duplicate key error (ER_DUP_ENTRY)
replace t values (1, 3), (1, 30), (1, 40);
create table log(s varchar(3));
create trigger tr1del before delete on t
for each row insert into log values('DEL');
replace t values (1, 4), (1, 40), (1, 400);
select *, check_row(row_start, row_end), row_start != 0 as start_nonzero
from t for system_time all order by x, row_end;
id	x	check_row(row_start, row_end)	start_nonzero
1	2	HISTORICAL ROW	1
1	3	HISTORICAL ROW	1
1	3	HISTORICAL ROW	1
1	40	HISTORICAL ROW	1
1	400	CURRENT ROW	1
select * from log;
s
DEL
DEL
DEL
# ensure that row_start is not duplicated
select count(row_start) as empty from t for system_time all
group by row_start having count(row_start) > 1;
empty
drop table t;
create table t (
id int unique,
x int,
row_start SYS_DATATYPE as row start invisible,
row_end SYS_DATATYPE as row end invisible,
period for system_time (row_start, row_end)
) with system versioning;
insert t values (1, 2);
replace t values (1, 3);
select *, current_row(row_end) as current from t for system_time all order by x;
id	x	current
1	2	0
1	3	1
drop table t;
# MDEV-15645 Assertion `table->insert_values' failed in write_record upon REPLACE into a view with underlying versioned table
create or replace table t1 (a int, b int, primary key (a), unique(b)) with system versioning;
insert into t1 values (1,1);
create or replace table t2 (c int);
create or replace view v as select t1.* from t1 join t2;
replace into v (a, b) select a, b from t1;
drop database test;
create database test;
