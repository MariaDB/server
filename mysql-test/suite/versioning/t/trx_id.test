-- source include/have_innodb.inc
-- source include/not_embedded.inc

create or replace table t1 (
  x int,
  sys_trx_start bigint(20) unsigned as row start invisible,
  sys_trx_end bigint(20) unsigned as row end invisible,
  period for system_time (sys_trx_start, sys_trx_end)
) with system versioning engine innodb;

insert into t1 (x) values (1);

--echo # ALTER ADD SYSTEM VERSIONING should write to mysql.transaction_registry
create function check_result (cond boolean)
    returns char(50) deterministic
    return if(cond = 1, '[CORRECT]', '[INCORRECT]');

set @@system_versioning_alter_history=keep;

create or replace table t1 (x int) engine innodb;
insert into t1 values (1);
alter table t1
  add column s bigint unsigned as row start,
  add column e bigint unsigned as row end,
  add period for system_time(s, e),
  add system versioning,
  algorithm=inplace;
select s from t1 into @trx_start;
select check_result(count(*) = 1) from mysql.transaction_registry where transaction_id = @trx_start;

create or replace table t1 (x int) engine innodb;
select count(*) from mysql.transaction_registry into @tmp;
alter table t1
  add column s bigint unsigned as row start,
  add column e bigint unsigned as row end,
  add period for system_time(s, e),
  add system versioning,
  algorithm=inplace;
select check_result(count(*) = @tmp) from mysql.transaction_registry;

create or replace table t1 (x int) engine innodb;
insert into t1 values (1);
alter table t1
  add column s bigint unsigned as row start,
  add column e bigint unsigned as row end,
  add period for system_time(s, e),
  add system versioning,
  algorithm=copy;
select s from t1 into @trx_start;
select check_result(count(*) = 1) from mysql.transaction_registry where transaction_id = @trx_start;

create or replace table t1 (x int) engine innodb;
select count(*) from mysql.transaction_registry into @tmp;
alter table t1
  add column s bigint unsigned as row start,
  add column e bigint unsigned as row end,
  add period for system_time(s, e),
  add system versioning,
  algorithm=copy;
select check_result(count(*) = @tmp) from mysql.transaction_registry;


--echo # TRX_ID to TIMESTAMP versioning switch
create or replace table t1 (
  x int,
  sys_start bigint unsigned as row start invisible,
  sys_end bigint unsigned as row end invisible,
  period for system_time (sys_start, sys_end)
) engine innodb with system versioning;
insert into t1 values (1);
alter table t1 drop column sys_start, drop column sys_end;
select sys_end = 18446744073709551615 as transaction_based from t1 for system_time all;

--echo # Simple vs SEES algorithms
create or replace table t1 (
  x int,
  sys_start bigint(20) unsigned as row start invisible,
  sys_end bigint(20) unsigned as row end invisible,
  period for system_time (sys_start, sys_end)
) with system versioning engine innodb;

--disable_query_log
set @old_dbug=@@global.debug_dbug;
set global debug_dbug='+d,sysvers_manual_timestamp';
set @ts1= sysdate(6);
let $xts1= `select unix_timestamp(@ts1)`;
let $xts2= `select $xts1 + 0.00001`;
eval set @ts2= from_unixtime($xts2);
let $xts3= `select $xts2 + 0.00001`;
eval set @ts3= from_unixtime($xts3);

eval set timestamp= $xts1;
set transaction isolation level read committed;
start transaction;
insert into t1 values (1);
--connect (con1,localhost,root,,test)
eval set timestamp= $xts2;
set transaction isolation level read committed;
start transaction;
insert into t1 values (2);
--connect (con2,localhost,root,,test)
eval set timestamp= $xts3;
set transaction isolation level read committed;
start transaction;
insert into t1 values (3);
commit;
--disconnect con2
--connection con1
commit;
--disconnect con1
--connection default
commit;
set global debug_dbug=@old_dbug;
--enable_query_log

select sys_start from t1 where x = 1 into @trx_id1;
select sys_start from t1 where x = 2 into @trx_id2;
select sys_start from t1 where x = 3 into @trx_id3;

select check_result(@trx_id1 < @trx_id2 and @trx_id2 < @trx_id3);
select check_result(@ts1 < @ts2 and @ts2 < @ts3);

--echo # MVCC is not resolved
select * from t1 for system_time as of transaction @trx_id1;
select * from t1 for system_time as of timestamp @ts1;
select * from t1 for system_time as of transaction @trx_id2;
select * from t1 for system_time as of timestamp @ts2;
select * from t1 for system_time as of transaction @trx_id3;
select * from t1 for system_time as of timestamp @ts3;

set system_versioning_innodb_algorithm_simple= off;
--echo # MVCC is resolved
select * from t1 for system_time as of transaction @trx_id1;
select * from t1 for system_time as of timestamp @ts1;
select * from t1 for system_time as of transaction @trx_id2;
select * from t1 for system_time as of timestamp @ts2;
select * from t1 for system_time as of transaction @trx_id3;
select * from t1 for system_time as of timestamp @ts3;

drop database test;
create database test;
