*** Test a binlog write running concurrently with a FLUSH BINARY LOGS.
include/reset_master.inc
CREATE TABLE t1(a INT PRIMARY KEY, b LONGBLOB) ENGINE=InnoDB;
connect con1,localhost,root,,;
SET SESSION debug_dbug= '+d,pause_binlog_write_after_release_page';
INSERT INTO t1 VALUES(0, REPEAT('#', 20000));
connection default;
FLUSH NO_WRITE_TO_BINLOG BINARY LOGS;
connection con1;
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
binlog-000000.ibb	#	Gtid	#	#	GTID #-#-#
binlog-000000.ibb	#	Query	#	#	use `test`; CREATE TABLE t1(a INT PRIMARY KEY, b LONGBLOB) ENGINE=InnoDB
binlog-000000.ibb	#	Gtid	#	#	BEGIN GTID #-#-#
binlog-000000.ibb	#	Annotate_rows	#	#	INSERT INTO t1 VALUES(0, REPEAT('#', 20000))
binlog-000000.ibb	#	Table_map	#	#	table_id: # (test.t1)
binlog-000000.ibb	#	Write_rows_v1	#	#	table_id: # flags: STMT_END_F
binlog-000000.ibb	#	Xid	#	#	COMMIT /* XID */
*** Now the same thing for RESET MASTER.
include/reset_master.inc
connection con1;
SET SESSION debug_dbug= '+d,pause_binlog_write_after_release_page';
INSERT INTO t1 VALUES(1, REPEAT('#', 20000));
connection default;
RESET MASTER;
connection con1;
connection default;
disconnect con1;
DROP TABLE t1;
