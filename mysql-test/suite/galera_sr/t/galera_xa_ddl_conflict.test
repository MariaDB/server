#
# Test DDL vs XA conflicts
#

--source include/galera_cluster.inc

#
# Test A: DDL BF aborts active XA (before XA PREPARE)
#

CREATE TABLE t1 (f1 INTEGER PRIMARY KEY);
INSERT INTO t1 VALUES (1),(2),(3),(4),(5),(6),(7),(8),(9);

--connection node_1
XA START 'test';
INSERT INTO t1 VALUES (10);

--connection node_2
ALTER TABLE t1 ADD COLUMN (f2 INTEGER);

--connection node_1
--error ER_XA_RBDEADLOCK
XA END 'test';
XA ROLLBACK 'test';

SELECT COUNT(*) `expect 9` FROM t1;
DROP TABLE t1;


#
# Test B: DDL attempts to BF abort prepared XA
#

CREATE TABLE t1 (f1 INTEGER PRIMARY KEY);
INSERT INTO t1 VALUES (1),(2),(3),(4),(5),(6),(7),(8),(9);

--connection node_1
XA START 'test';
INSERT INTO t1 VALUES (10);
XA END 'test';
XA PREPARE 'test';

--connection node_2
--error ER_LOCK_DEADLOCK
ALTER TABLE t1 ADD COLUMN (f2 INTEGER);

--connection node_1
XA COMMIT 'test';

SELECT COUNT(*) `expect 10` FROM t1;
DROP TABLE t1;

#
# Test C: local DDL vs prepared XA conflict
#

CREATE TABLE t1 (f1 INTEGER PRIMARY KEY);
INSERT INTO t1 VALUES (1),(2),(3),(4),(5),(6),(7),(8),(9);

--connect node_1b, 127.0.0.1, root, , test, $NODE_MYPORT_1

--connection node_1
XA START 'test';
INSERT INTO t1 VALUES (10);
XA END 'test';
XA PREPARE 'test';

--connection node_1b
--error ER_LOCK_DEADLOCK
ALTER TABLE t1 ADD COLUMN (f2 INTEGER);

--connection node_1
XA COMMIT 'test';

SELECT COUNT(*) `expect 10` FROM t1;
DROP TABLE t1;

--connection node_1
CALL mtr.add_suppression("WSREP: Event 1 Query apply failed");

--connection node_2
CALL mtr.add_suppression("WSREP: Event 1 Query apply failed");
