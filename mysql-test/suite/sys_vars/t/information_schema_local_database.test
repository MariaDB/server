#
# Functional test for information_schema_local_database
#

# Hack to make our default database NULL
CREATE DATABASE IF NOT EXISTS DUMMY;
USE DUMMY;
DROP DATABASE DUMMY;
SELECT DATABASE();

CREATE DATABASE IF NOT EXISTS HIDEME;
CREATE TABLE HIDEME.hidden (a int primary key, b varchar(255));

CREATE DATABASE IF NOT EXISTS ISLD;
SET information_schema_local_database=ON;
# Behaviour should be normal for the next commands for NULL database
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'hidden';
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA LIKE 'HIDEME%' ORDER BY TABLE_NAME;
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'HIDEME' ORDER BY TABLE_NAME;
USE ISLD;
CREATE TABLE t1 (a int primary key, b varchar(255));
SET information_schema_local_database=ON;
# These two should now only show information for the current database
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES;
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS;
# This should still show information for all databases
SHOW DATABASES;
# This should still work
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA LIKE 'HIDEME%' ORDER BY TABLE_NAME;
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'HIDEME' ORDER BY TABLE_NAME;
# This should return no result
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'hidden';
DROP DATABASE HIDEME;
DROP DATABASE ISLD;
