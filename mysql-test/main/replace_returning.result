# Test for REPLACE...RETURNING
CREATE TABLE t1(id1 INT PRIMARY KEY, val1 VARCHAR(1));
CREATE TABLE t2(id2 INT PRIMARY KEY, val2 VARCHAR(1));
INSERT INTO t2 VALUES (1,'a'),(2,'b'),(3,'c');
#
# Simple insert statement...RETURNING
#
REPLACE INTO t1 (id1, val1) VALUES (1, 'a');
REPLACE INTO t1 (id1, val1) VALUES (1, 'b') RETURNING *;
id1	val1
1	b
REPLACE INTO t1 (id1, val1) VALUES (1, 'c') RETURNING id1, val1;
id1	val1
1	c
REPLACE INTO t1 (id1, val1) VALUES (1, 'd') RETURNING id1 as id;
id
1
REPLACE INTO t1 (id1, val1) VALUES (1, 'e') RETURNING id1 && id1;
id1 && id1
1
REPLACE INTO t1 (id1, val1) VALUES (1, 'f') RETURNING id1 + id1;
id1 + id1
2
REPLACE INTO t1 (id1, val1) VALUES (1, 'g') RETURNING id1 | id1;
id1 | id1
1
REPLACE INTO t1 (id1, val1) VALUES (1, 'h') RETURNING id1, UPPER(val1);
id1	UPPER(val1)
1	H
REPLACE INTO t1(id1,val1) VALUES (1,'i') RETURNING (SELECT GROUP_CONCAT(val2) FROM t2 WHERE id2=1);
(SELECT GROUP_CONCAT(val2) FROM t2 WHERE id2=1)
a
REPLACE INTO t1(id1,val1) VALUES(1,'j') RETURNING (SELECT GROUP_CONCAT(val2) FROM t2 GROUP BY id2 HAVING id2=id2+1);
(SELECT GROUP_CONCAT(val2) FROM t2 GROUP BY id2 HAVING id2=id2+1)
NULL
REPLACE INTO t1 (id1,val1) VALUES (1,'k') RETURNING id1,(SELECT id2 FROM  t2 WHERE val2='b');
id1	(SELECT id2 FROM  t2 WHERE val2='b')
1	2
PREPARE stmt FROM "REPLACE INTO t1(id1,val1) VALUES (1,'m') RETURNING (SELECT id2 FROM t2 WHERE id2 IN (SELECT id2 FROM t2 WHERE val2='a'))";
EXECUTE stmt;
(SELECT id2 FROM t2 WHERE id2 IN (SELECT id2 FROM t2 WHERE val2='a'))
1
DEALLOCATE PREPARE stmt;
SELECT * FROM t1;
id1	val1
1	m
TRUNCATE TABLE t1;
#
# Multiple values in one insert statement...RETURNING
#
REPLACE INTO t1 VALUES (1,'a'),(2,'b');
REPLACE INTO t1 VALUES (1,'c'),(2,'d') RETURNING *;
id1	val1
1	c
2	d
REPLACE INTO t1 VALUES (1,'e'),(2,'f') RETURNING id1, val1;
id1	val1
1	e
2	f
REPLACE INTO t1 VALUES (1,'g'),(2,'h') RETURNING id1 AS id;
id
1
2
REPLACE INTO t1 VALUES (1,'i'),(2,'j') RETURNING id1 | id1;
id1 | id1
1
2
REPLACE INTO t1 VALUES (1,'k'),(2,'l') RETURNING id1 + id1;
id1 + id1
2
4
REPLACE INTO t1 VALUES (1,'m'),(2,'n') RETURNING id1 && id1;
id1 && id1
1
1
REPLACE INTO t1 VALUES (1,'m'),(2,'n') RETURNING id1, UPPER(val1);
id1	UPPER(val1)
1	M
2	N
REPLACE INTO t1 VALUES (1,'o'),(2,'p') RETURNING (SELECT GROUP_CONCAT(val2) FROM t2 WHERE id2=1);
(SELECT GROUP_CONCAT(val2) FROM t2 WHERE id2=1)
a
a
REPLACE INTO t1 VALUES (1,'q'),(2,'r') RETURNING (SELECT GROUP_CONCAT(val2) FROM t2 GROUP BY id2 HAVING id2=id2+1);
(SELECT GROUP_CONCAT(val2) FROM t2 GROUP BY id2 HAVING id2=id2+1)
NULL
NULL
REPLACE INTO t1 VALUES (1,'s'),(2,'t') RETURNING id1,(SELECT id2 FROM  t2 WHERE val2='b');
id1	(SELECT id2 FROM  t2 WHERE val2='b')
1	2
2	2
PREPARE stmt FROM "REPLACE INTO t1 VALUES (1,'u'),(2,'v') RETURNING (SELECT id2 FROM t2 WHERE id2 IN (SELECT id2 FROM t2 WHERE val2='a'))";
EXECUTE stmt;
(SELECT id2 FROM t2 WHERE id2 IN (SELECT id2 FROM t2 WHERE val2='a'))
1
1
DEALLOCATE PREPARE stmt;
SELECT * FROM t1;
id1	val1
1	u
2	v
TRUNCATE TABLE t1;
#
# INSERT...SET...RETURNING
#
REPLACE INTO t1 SET id1=1, val1 = 'a';
REPLACE INTO t1 SET id1=2, val1 = 'b' RETURNING *;
id1	val1
2	b
REPLACE INTO t1 SET id1=3, val1 = 'c' RETURNING id1,val1;
id1	val1
3	c
REPLACE INTO t1 SET id1=4, val1 = 'd' RETURNING id1 AS id;
id
4
REPLACE INTO t1 SET id1=1, val1 = 'e' RETURNING id1 | id1;
id1 | id1
1
REPLACE INTO t1 SET id1=2, val1 = 'f' RETURNING id1 && id1;
id1 && id1
1
REPLACE INTO t1 SET id1=3, val1 = 'g' RETURNING id1 + id1;
id1 + id1
6
REPLACE INTO t1 SET id1=4, val1 = 'h' RETURNING id1,UPPER(val1);
id1	UPPER(val1)
4	H
REPLACE INTO t1 SET id1=1, val1 = 'i'  RETURNING (SELECT GROUP_CONCAT(val2) FROM t2 WHERE id2=1);
(SELECT GROUP_CONCAT(val2) FROM t2 WHERE id2=1)
a
REPLACE INTO t1 SET id1=2, val1='j' RETURNING (SELECT GROUP_CONCAT(val2) FROM t2 GROUP BY id2 HAVING id2=id2+1);
(SELECT GROUP_CONCAT(val2) FROM t2 GROUP BY id2 HAVING id2=id2+1)
NULL
REPLACE INTO t1 SET id1=3, val1='k' RETURNING id1,(SELECT id2 FROM t2 WHERE val2='b');
id1	(SELECT id2 FROM t2 WHERE val2='b')
3	2
PREPARE stmt FROM "REPLACE INTO t1 SET id1=4,val1='l' RETURNING (SELECT id2 FROM t2 WHERE id2 IN (SELECT id2 FROM t2 WHERE val2='a'))";
EXECUTE stmt;
(SELECT id2 FROM t2 WHERE id2 IN (SELECT id2 FROM t2 WHERE val2='a'))
1
DEALLOCATE PREPARE stmt;
SELECT * FROM t1;
id1	val1
1	i
2	j
3	k
4	l
#
# INSERT...SELECT...RETURNING
#
TRUNCATE TABLE t2;
REPLACE INTO t2(id2,val2) SELECT * FROM t1;
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=1 RETURNING *;
id2	val2
1	i
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=2 RETURNING id2,val2;
id2	val2
2	j
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=3 RETURNING id2 AS id;
id
3
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=4 RETURNING id2 | id2;
id2 | id2
4
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=1 RETURNING id2 && id2;
id2 && id2
1
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=2 RETURNING id2+id2;
id2+id2
4
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=3 RETURNING id2,UPPER(val2);
id2	UPPER(val2)
3	K
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=4 RETURNING (SELECT GROUP_CONCAT(val1) FROM t1 WHERE id1=1);
(SELECT GROUP_CONCAT(val1) FROM t1 WHERE id1=1)
i
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=1 RETURNING (SELECT GROUP_CONCAT(val1) FROM t1 GROUP BY id1 HAVING id1=id1+1);
(SELECT GROUP_CONCAT(val1) FROM t1 GROUP BY id1 HAVING id1=id1+1)
NULL
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=2 RETURNING id2,(SELECT id1 FROM t1 WHERE val1='b');
id2	(SELECT id1 FROM t1 WHERE val1='b')
2	NULL
PREPARE stmt FROM "REPLACE INTO t2 SELECT * FROM t1 WHERE id1=3 RETURNING (SELECT id1 FROM t1 WHERE id1 IN (SELECT id1 FROM t1 WHERE val1='a'))";
EXECUTE stmt;
(SELECT id1 FROM t1 WHERE id1 IN (SELECT id1 FROM t1 WHERE val1='a'))
NULL
DEALLOCATE PREPARE stmt;
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=4 RETURNING (SELECT id1+id2 FROM t1 WHERE id1=1);
(SELECT id1+id2 FROM t1 WHERE id1=1)
5
REPLACE INTO t2 SELECT * FROM t1 WHERE id1=1 RETURNING (SELECT id1+id2 FROM t2 WHERE id2=0);
(SELECT id1+id2 FROM t2 WHERE id2=0)
NULL
SELECT * FROM t2;
id2	val2
1	i
2	j
3	k
4	l
DROP TABLE t1;
DROP TABLE t2;
