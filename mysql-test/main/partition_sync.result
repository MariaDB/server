#
# Bug #43867 ALTER TABLE on a partitioned table 
#            causes unnecessary deadlocks
#
CREATE TABLE t1 (a int) PARTITION BY RANGE (a)
(PARTITION p0 VALUES LESS THAN (1),
PARTITION p1 VALUES LESS THAN (2));
INSERT INTO t1 VALUES (0),(1);
connect con1,localhost,root;
connection con1;
BEGIN;
SELECT * FROM t1;
a
0
1
connection default;
ALTER TABLE t1 DROP PARTITION p3;
ERROR HY000: Error in list of partitions to DROP
connection con1;
# This failed with deadlock and should not do so.
SELECT * FROM t1;
a
0
1
connection default;
disconnect con1;
DROP TABLE t1;
#
# Bug #46654 False deadlock on concurrent DML/DDL 
#            with partitions, inconsistent behavior
#
DROP TABLE IF EXISTS tbl_with_partitions;
CREATE TABLE tbl_with_partitions ( i INT ) 
PARTITION BY HASH(i);
INSERT INTO tbl_with_partitions VALUES (1);
connect con2,localhost,root;
connect con3,localhost,root;
connection con3;
LOCK TABLE tbl_with_partitions READ;
# Access table with disabled autocommit
connection default;
SET AUTOCOMMIT = 0;
SELECT * FROM tbl_with_partitions;
i
1
# Alter table, abort after prepare
connection con2;
set session debug_dbug="+d,abort_copy_table";
ALTER TABLE tbl_with_partitions ADD COLUMN f INT;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
# Try accessing the table after Alter aborted.
# This used to give ER_LOCK_DEADLOCK.
connection default;
SELECT * FROM tbl_with_partitions;
i
1
connection con3;
UNLOCK TABLES;
# Cleanup
connection default;
disconnect con2;
disconnect con3;
DROP TABLE tbl_with_partitions;
#
# MDEV-15465 Server crash or ASAN heap-use-after-free in Item_func_match::cleanup
#            upon using FT search with partitioning.
#
connect  con1,localhost,root,,test;
CREATE OR REPLACE TABLE t1 (c CHAR(8)) ENGINE=MyISAM PARTITION BY KEY(c);
connection default;
set debug_sync= 'execute_command_after_close_tables SIGNAL opened WAIT_FOR go';
DELETE FROM t1 WHERE MATCH(c) AGAINST ('foo' IN BOOLEAN MODE);
connection con1;
set debug_sync= 'now WAIT_FOR opened';
FLUSH TABLES;
set debug_sync= 'now SIGNAL go';
connection default;
set debug_sync= 'execute_command_after_close_tables SIGNAL opened WAIT_FOR go';
SELECT * FROM t1 WHERE MATCH(c) AGAINST ('foo' IN BOOLEAN MODE);
connection con1;
set debug_sync= 'now WAIT_FOR opened';
FLUSH TABLES;
set debug_sync= 'now SIGNAL go';
disconnect con1;
connection default;
c
DROP TABLE t1;
set debug_sync= 'RESET';
