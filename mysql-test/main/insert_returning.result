# Test for INSERT...RETURNING
CREATE TABLE t1(id1 INT PRIMARY KEY AUTO_INCREMENT, val1 VARCHAR(1));
CREATE TABLE t2(id2 INT PRIMARY KEY AUTO_INCREMENT, val2 VARCHAR(1));
INSERT INTO t2 VALUES (1,'a'),(2,'b'),(3,'c');
CREATE FUNCTION f(arg INT) RETURNS INT
BEGIN
RETURN (SELECT arg+arg);
END|
#
# Simple insert statement...RETURNING
#
INSERT INTO t1 (id1, val1) VALUES (1, 'a');
INSERT INTO t1 (id1, val1) VALUES (2, 'b') RETURNING *;
id1	val1
2	b
INSERT INTO t1 (id1, val1) VALUES (3, 'c') RETURNING id1+id1 as total,val1,
id1 && id1, id1 | id1, UPPER(val1),f(id1);
total	val1	id1 && id1	id1 | id1	UPPER(val1)	f(id1)
6	c	1	3	C	6
INSERT INTO t1(id1,val1) VALUES (4,'d') RETURNING(SELECT GROUP_CONCAT(val2) 
FROM t2 WHERE id2=1);
(SELECT GROUP_CONCAT(val2) 
FROM t2 WHERE id2=1)
a
INSERT INTO t1(id1,val1) VALUES(5,'e') RETURNING(SELECT GROUP_CONCAT(val2)
FROM t2 GROUP BY id2 HAVING id2=id2+1);
(SELECT GROUP_CONCAT(val2)
FROM t2 GROUP BY id2 HAVING id2=id2+1)
NULL
PREPARE stmt FROM "INSERT INTO t1 (id1,val1) VALUES (6,'f') RETURNING id1,
(SELECT id2 FROM  t2 WHERE val2='b')";
EXECUTE stmt;
id1	(SELECT id2 FROM  t2 WHERE val2='b')
6	2
DEALLOCATE PREPARE stmt;
INSERT IGNORE INTO t1(id1,val1) VALUES (7,'h') RETURNING *;
id1	val1
7	h
SELECT * FROM t1;
id1	val1
1	a
2	b
3	c
4	d
5	e
6	f
7	h
TRUNCATE TABLE t1;
#
# Multiple values in one insert statement...RETURNING
#
INSERT INTO t1 VALUES (1,'a'),(2,'b');
INSERT INTO t1 VALUES (3,'c'),(4,'d') RETURNING *;
id1	val1
3	c
4	d
INSERT INTO t1 VALUES (5,'e'),(6,'f') RETURNING id1 as id,val1,
id1 && id1, id1 | id1, UPPER(val1),f(id1);
id	val1	id1 && id1	id1 | id1	UPPER(val1)	f(id1)
5	e	1	5	E	10
6	f	1	6	F	12
INSERT INTO t1 VALUES (7,'g'),(8,'h') RETURNING(SELECT GROUP_CONCAT(val2) 
FROM t2 WHERE id2=1);
(SELECT GROUP_CONCAT(val2) 
FROM t2 WHERE id2=1)
a
a
INSERT INTO t1 VALUES (9,'i'),(10,'j') RETURNING(SELECT GROUP_CONCAT(val2) 
FROM t2 GROUP BY id2 HAVING id2=id2+1);
(SELECT GROUP_CONCAT(val2) 
FROM t2 GROUP BY id2 HAVING id2=id2+1)
NULL
NULL
PREPARE stmt FROM "INSERT INTO t1 VALUES (11,'k'),(12,'l') RETURNING id1,
(SELECT id2 FROM t2 WHERE val2='b')";
EXECUTE stmt;
id1	(SELECT id2 FROM t2 WHERE val2='b')
11	2
12	2
DEALLOCATE PREPARE stmt;
INSERT IGNORE INTO t1(id1,val1) VALUES(13,'o'),(14,'p') RETURNING *;
id1	val1
13	o
14	p
SELECT * FROM t1;
id1	val1
1	a
2	b
3	c
4	d
5	e
6	f
7	g
8	h
9	i
10	j
11	k
12	l
13	o
14	p
TRUNCATE TABLE t1;
#
# INSERT...ON DUPLICATE KEY UPDATE...RETURNING
#
CREATE TABLE ins_duplicate (id INT PRIMARY KEY AUTO_INCREMENT, val VARCHAR(1));
INSERT INTO ins_duplicate VALUES (1,'a');
INSERT INTO ins_duplicate VALUES (2,'b') ON DUPLICATE KEY UPDATE val='b' 
RETURNING *;
id	val
2	b
INSERT INTO ins_duplicate VALUES (2,'b') ON DUPLICATE KEY UPDATE val='c' 
RETURNING id+id AS total, val, id && id, id | id, UPPER(val),f(id);
total	val	id && id	id | id	UPPER(val)	f(id)
4	c	1	2	C	4
INSERT INTO ins_duplicate VALUES (2,'b') ON DUPLICATE KEY UPDATE val='d' 
RETURNING (SELECT GROUP_CONCAT(val2) FROM t2 WHERE id2=1);
(SELECT GROUP_CONCAT(val2) FROM t2 WHERE id2=1)
a
INSERT INTO ins_duplicate VALUES (2,'b') ON DUPLICATE KEY UPDATE val='e' 
RETURNING (SELECT GROUP_CONCAT(val2) FROM t2 GROUP BY id2 HAVING id2=id2+1);
(SELECT GROUP_CONCAT(val2) FROM t2 GROUP BY id2 HAVING id2=id2+1)
NULL
PREPARE stmt FROM "INSERT INTO ins_duplicate VALUES (2,'b') ON DUPLICATE 
KEY UPDATE val='f' RETURNING id,(SELECT id2 FROM  t2 WHERE val2='b')";
EXECUTE stmt;
id	(SELECT id2 FROM  t2 WHERE val2='b')
2	2
DEALLOCATE PREPARE stmt;
INSERT IGNORE INTO ins_duplicate(id,val) VALUES (3,'c'),(4,'d') ON DUPLICATE 
KEY UPDATE val='d' RETURNING *;
id	val
3	c
4	d
SELECT * FROM ins_duplicate;
id	val
1	a
2	f
3	c
4	d
#
# INSERT...SET...RETURNING
#
INSERT INTO t1 SET id1= 1, val1= 'a';
INSERT INTO t1 SET id1= 2, val1= 'b' RETURNING *;
id1	val1
2	b
INSERT INTO t1 SET id1= 3, val1= 'c' RETURNING id1+id1 AS total,val1,
id1 && id1, id1 | id1, UPPER(val1),f(id1);
total	val1	id1 && id1	id1 | id1	UPPER(val1)	f(id1)
6	c	1	3	C	6
INSERT INTO t1 SET id1= 4, val1= 'd' RETURNING (SELECT GROUP_CONCAT(val2) 
FROM t2 WHERE id2=1);
(SELECT GROUP_CONCAT(val2) 
FROM t2 WHERE id2=1)
a
INSERT INTO t1 SET id1= 5, val1='e' RETURNING (SELECT GROUP_CONCAT(val2) 
FROM t2 GROUP BY id2 HAVING id2=id2+1);
(SELECT GROUP_CONCAT(val2) 
FROM t2 GROUP BY id2 HAVING id2=id2+1)
NULL
PREPARE stmt FROM "INSERT INTO t1 SET id1= 6, val1='f' RETURNING id1,
(SELECT id2 FROM  t2 WHERE val2='b')";
EXECUTE stmt;
id1	(SELECT id2 FROM  t2 WHERE val2='b')
6	2
DEALLOCATE PREPARE stmt;
INSERT INTO t1 SET id1= 7, val1= 'g' RETURNING f(id1);
f(id1)
14
INSERT INTO t1 SET val1= 'n' RETURNING *;
id1	val1
8	n
INSERT IGNORE INTO t1 SET id1= 8, val1= 'h' RETURNING *;
id1	val1
8	h
Warnings:
Warning	1062	Duplicate entry '8' for key 'PRIMARY'
SELECT * FROM t1;
id1	val1
1	a
2	b
3	c
4	d
5	e
6	f
7	g
8	n
#
# INSERT...SELECT...RETURNING
#
TRUNCATE TABLE t2;
INSERT INTO t2(id2,val2) SELECT * FROM t1;
TRUNCATE TABLE t2;
INSERT INTO t2 SELECT * FROM t1 WHERE id1=1 RETURNING *;
id2	val2
1	a
INSERT INTO t2 SELECT * FROM t1 WHERE id1=2 RETURNING id2+id2 AS total,
val2,id2 && id2, id2 | id2, UPPER(val2),f(id2);
total	val2	id2 && id2	id2 | id2	UPPER(val2)	f(id2)
4	b	1	2	B	4
INSERT INTO t2 SELECT * FROM t1 WHERE id1=3 RETURNING (SELECT GROUP_CONCAT(val1) 
FROM t1 GROUP BY id1 HAVING id1=id1+1);
(SELECT GROUP_CONCAT(val1) 
FROM t1 GROUP BY id1 HAVING id1=id1+1)
NULL
PREPARE stmt FROM "INSERT INTO t2 SELECT * FROM t1 WHERE id1=4 RETURNING id2, 
(SELECT id1 FROM t1 WHERE val1='b')";
EXECUTE stmt;
id2	(SELECT id1 FROM t1 WHERE val1='b')
4	2
DEALLOCATE PREPARE stmt;
INSERT INTO t2 SELECT * FROM t1 WHERE id1=6 RETURNING 
(SELECT id1+id2 FROM t1 WHERE id1=1);
(SELECT id1+id2 FROM t1 WHERE id1=1)
7
INSERT INTO t2 SELECT * FROM t1 WHERE id1=7 RETURNING f(id2);
f(id2)
14
INSERT IGNORE INTO t2 SELECT * FROM t1 WHERE id1=8 RETURNING *;
id2	val2
8	n
SELECT * FROM t2;
id2	val2
1	a
2	b
3	c
4	d
6	f
7	g
8	n
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE ins_duplicate;
DROP FUNCTION f;
