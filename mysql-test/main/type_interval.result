#
# Start of 10.4 tests
#
#
# MDEV-17776 CAST(x AS INTERVAL DAY_SECOND(N))
#
CREATE TABLE t1 (a VARCHAR(128));
INSERT INTO t1 VALUES
('00:00:00'),
('+00:00:01'),
('-00:00:01'),
('838:59:59'),
('839:00:00'),
('2018:01:02'),
('87649415:59:59'),
('3652058 23:59:59'),
('87649416:00:00'),
('3652059 00:00:00');
SELECT
EXTRACT(DAY FROM a) AS d,
EXTRACT(HOUR FROM a) AS h,
a,
CAST(a AS INTERVAL DAY_SECOND(6)) AS cast_itds
FROM t1;
d	h	a	cast_itds
0	0	00:00:00	00:00:00.000000
0	0	+00:00:01	00:00:01.000000
0	0	-00:00:01	-00:00:01.000000
34	22	838:59:59	34 22:59:59.000000
34	23	839:00:00	34 23:00:00.000000
84	2	2018:01:02	84 02:01:02.000000
3652058	23	87649415:59:59	3652058 23:59:59.000000
3652058	23	3652058 23:59:59	3652058 23:59:59.000000
NULL	NULL	87649416:00:00	NULL
NULL	NULL	3652059 00:00:00	NULL
Warnings:
Warning	1292	Incorrect interval value: '87649416:00:00'
Warning	1292	Incorrect interval value: '87649416:00:00'
Warning	1292	Incorrect INTERVAL DAY TO SECOND value: '87649416:00:00'
Warning	1292	Incorrect interval value: '3652059 00:00:00'
Warning	1292	Incorrect interval value: '3652059 00:00:00'
Warning	1292	Incorrect INTERVAL DAY TO SECOND value: '3652059 00:00:00'
DROP TABLE t1;
CREATE TABLE t1 (a DECIMAL(32,9));
INSERT INTO t1 VALUES
(0),
(1),
(-1),
(8385959),
(8390000),
(20180102),
(876494155959),
(876494160000);
SELECT
EXTRACT(DAY FROM a) AS d,
EXTRACT(HOUR FROM a) AS h,
a,
CAST(a AS INTERVAL DAY_SECOND(6)) AS cast_itds
FROM t1;
d	h	a	cast_itds
0	0	0.000000000	00:00:00.000000
0	0	1.000000000	00:00:01.000000
0	0	-1.000000000	-00:00:01.000000
34	22	8385959.000000000	34 22:59:59.000000
34	23	8390000.000000000	34 23:00:00.000000
84	2	20180102.000000000	84 02:01:02.000000
3652058	23	876494155959.000000000	3652058 23:59:59.000000
NULL	NULL	876494160000.000000000	NULL
Warnings:
Note	1292	Truncated incorrect INTERVAL DAY TO SECOND value: '0.000000000'
Note	1292	Truncated incorrect INTERVAL DAY TO SECOND value: '1.000000000'
Note	1292	Truncated incorrect INTERVAL DAY TO SECOND value: '-1.000000000'
Note	1292	Truncated incorrect INTERVAL DAY TO SECOND value: '8385959.000000000'
Note	1292	Truncated incorrect INTERVAL DAY TO SECOND value: '8390000.000000000'
Note	1292	Truncated incorrect INTERVAL DAY TO SECOND value: '20180102.000000000'
Note	1292	Truncated incorrect INTERVAL DAY TO SECOND value: '876494155959.000000000'
Warning	1292	Incorrect interval value: '876494160000.000000000' for column `test`.`t1`.`a` at row 8
Warning	1292	Incorrect interval value: '876494160000.000000000' for column `test`.`t1`.`a` at row 8
Warning	1292	Incorrect INTERVAL DAY TO SECOND value: '876494160000.000000000'
DROP TABLE t1;
#
# End of 10.4 tests
#
#
# MDEV-12513: Support for INTERVAL data types in MariaDB
#
CREATE PROCEDURE sp_interval_parameters(
IN in_ym INTERVAL YEAR(4) TO MONTH,        -- Max: 9999-11
IN in_y INTERVAL YEAR(4),                  -- Max: 9999
IN in_m INTERVAL MONTH(2),                 -- Max: 99
IN in_ds INTERVAL DAY(3) TO SECOND(6),     -- Max: 999 23:59:59.999999
IN in_d INTERVAL DAY(3),                   -- Max: 999
IN in_h INTERVAL HOUR(3),                  -- Max: 999
IN in_n INTERVAL MINUTE(2),                -- Max: 99
IN in_s INTERVAL SECOND(6),                -- Max: 59.999999
IN in_dh INTERVAL DAY(3) TO HOUR,          -- Max: 999 23
IN in_dm INTERVAL DAY(3) TO MINUTE,        -- Max: 999 23:59
IN in_hs INTERVAL HOUR(3) TO SECOND(6),    -- Max: 999:59:59.999999
IN in_hm INTERVAL HOUR(3) TO MINUTE,       -- Max: 999:59
IN in_ms INTERVAL MINUTE(2) TO SECOND(6),  -- Max: 99:59.999999
OUT out_ym INTERVAL YEAR(4) TO MONTH,
OUT out_y INTERVAL YEAR(4),
OUT out_m INTERVAL MONTH(2),
OUT out_ds INTERVAL DAY(3) TO SECOND(6),
OUT out_d INTERVAL DAY(3),
OUT out_h INTERVAL HOUR(3),
OUT out_n INTERVAL MINUTE(2),
OUT out_s INTERVAL SECOND(6),
OUT out_dh INTERVAL DAY(3) TO HOUR,
OUT out_dm INTERVAL DAY(3) TO MINUTE,
OUT out_hs INTERVAL HOUR(3) TO SECOND(6),
OUT out_hm INTERVAL HOUR(3) TO MINUTE,
OUT out_ms INTERVAL MINUTE(2) TO SECOND(6)
)
BEGIN
-- Simple passthrough logic
SET out_ym = in_ym;
SET out_y = in_y;
SET out_m = in_m;
SET out_ds = in_ds;
SET out_d = in_d;
SET out_h = in_h;
SET out_n = in_n;
SET out_s = in_s;
SET out_dh = in_dh;
SET out_dm = in_dm;
SET out_hs = in_hs;
SET out_hm = in_hm;
SET out_ms = in_ms;
END;
/
CALL sp_interval_parameters(
'5-3',
'10',
'12',
'100 12:30:45.123456',
'100',
'120',
'90',
'45.123456',
'100 12',
'100 12:30',
'120:30:45.123456',
'120:30',
'90:45.123456',
@out_ym, @out_y, @out_m, @out_ds, @out_d,
@out_h, @out_n, @out_s, @out_dh, @out_dm,
@out_hs, @out_hm, @out_ms
);
SELECT
@out_ym,
@out_y,
@out_m,
@out_ds,
@out_d,
@out_h,
@out_n,
@out_s,
@out_dh,
@out_dm,
@out_hs,
@out_hm,
@out_ms;
@out_ym	@out_y	@out_m	@out_ds	@out_d	@out_h	@out_n	@out_s	@out_dh	@out_dm	@out_hs	@out_hm	@out_ms
5-03	10	12	100 12:30:45.123456	100	120	90	45.123456	100 12	100 12:30	120:30:45.123456	120:30	90:45.123456
drop procedure sp_interval_parameters;
Parser Validation - Unsupported Interval Types & Invalid combination of INTERVAL Range.
CREATE PROCEDURE sp_invalid1(IN a INTERVAL QUARTER) BEGIN END;
ERROR 42000: This version of MariaDB doesn't yet support 'INTERVAL QUARTER'
CREATE PROCEDURE sp_invalid2(IN a INTERVAL WEEK) BEGIN END;
ERROR 42000: This version of MariaDB doesn't yet support 'INTERVAL WEEK'
CREATE PROCEDURE sp_invalid3(IN a INTERVAL MICROSECOND) BEGIN END;
ERROR 42000: This version of MariaDB doesn't yet support 'INTERVAL MICROSECOND'
CREATE PROCEDURE sp_invalid4(IN a INTERVAL DAY TO MICROSECOND) BEGIN END;
ERROR 42000: This version of MariaDB doesn't yet support 'INTERVAL DAY TO MICROSECOND'
CREATE PROCEDURE sp_invalid5(IN a INTERVAL HOUR TO MICROSECOND) BEGIN END;
ERROR 42000: This version of MariaDB doesn't yet support 'INTERVAL HOUR TO MICROSECOND'
CREATE PROCEDURE sp_invalid6(IN a INTERVAL MINUTE TO MICROSECOND) BEGIN END;
ERROR 42000: This version of MariaDB doesn't yet support 'INTERVAL MINUTE TO MICROSECOND'
CREATE PROCEDURE sp_invalid7(IN a INTERVAL SECOND TO MICROSECOND) BEGIN END;
ERROR 42000: This version of MariaDB doesn't yet support 'INTERVAL SECOND TO MICROSECOND'
CREATE PROCEDURE sp_invalid8(IN a INTERVAL MICROSECOND TO SECOND) BEGIN END;
ERROR 42000: Invalid INTERVAL range combination near '\0014' at line 0
CREATE PROCEDURE sp_invalid11(IN a INTERVAL MICROSECOND TO MINUTE) BEGIN END;
ERROR 42000: Invalid INTERVAL range combination near '\0014' at line 0
CREATE PROCEDURE sp_invalid12(IN a INTERVAL YEAR TO SECOND) BEGIN END;
ERROR 42000: Invalid INTERVAL range combination near '\0014' at line 0
CREATE PROCEDURE sp_invalid13(IN a INTERVAL MONTH TO DAY) BEGIN END;
ERROR 42000: Invalid INTERVAL range combination near '\0014' at line 0
CREATE PROCEDURE sp_invalid14(IN a INTERVAL SECOND TO HOUR) BEGIN END;
ERROR 42000: Invalid INTERVAL range combination near '\0014' at line 0
CREATE PROCEDURE sp_invalid15(IN a INTERVAL WEEK TO DAY) BEGIN END;
ERROR 42000: Invalid INTERVAL range combination near '\0014' at line 0
CREATE PROCEDURE sp_invalid16(IN a INTERVAL YEAR TO SECOND) BEGIN END;
ERROR 42000: Invalid INTERVAL range combination near '\0014' at line 0
Precision validation â€“ ensuring valid start and end precisions
CREATE PROCEDURE sp_invalid_1(IN a INTERVAL YEAR(5)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 4
CREATE PROCEDURE sp_invalid_2(IN a INTERVAL MONTH(7)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 6
CREATE PROCEDURE sp_invalid_3(IN a INTERVAL DAY(8)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 7
CREATE PROCEDURE sp_invalid_4(IN a INTERVAL HOUR(10)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 8
CREATE PROCEDURE sp_invalid_5(IN a INTERVAL MINUTE(11)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 10
CREATE PROCEDURE sp_invalid_6(IN a INTERVAL SECOND(13)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 6
CREATE PROCEDURE sp_invalid_7(IN a INTERVAL YEAR(8)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 4
CREATE PROCEDURE sp_invalid_8(IN a INTERVAL SECOND(13)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 6
CREATE PROCEDURE sp_invalid_9(IN a INTERVAL DAY(9) TO SECOND(3)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 7
CREATE PROCEDURE sp_invalid_10(IN a INTERVAL HOUR(4) TO SECOND(13)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 6
CREATE PROCEDURE sp_invalid_11(IN a INTERVAL MINUTE(11) TO SECOND(2)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 10
CREATE PROCEDURE sp_invalid_12(IN a INTERVAL DAY(12) TO SECOND(2)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 7
CREATE PROCEDURE sp_invalid_13(IN a INTERVAL HOUR(3) TO SECOND(13)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 6
CREATE PROCEDURE sp_invalid_14(IN a INTERVAL DAY(12) TO SECOND(3)) BEGIN END;
ERROR 42000: Too big precision specified for 'a'. Maximum is 7
CREATE PROCEDURE sp_valid_1(IN a INTERVAL YEAR(4))
BEGIN
SELECT a;
END /
CALL sp_valid_1('9999');
a
9999
CALL sp_Valid_1('1');
a
1
CALL sp_Valid_1('0');
a
0
CALL sp_Valid_1(9999);
a
9999
CALL sp_Valid_1(123);
a
123
CALL sp_Valid_1(0.1234e4);
a
1234
CALL sp_valid_1('10000');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_1;
CREATE PROCEDURE sp_valid_2(IN a INTERVAL MONTH(6))
BEGIN
SELECT a;
END /
CALL sp_valid_2('119988');
a
119988
CALL sp_valid_2(0.119988e6);
a
119988
CALL sp_valid_2(0);
a
0
CALL sp_valid_2('1200000');
ERROR HY000: Default/ignore value is not supported for such parameter usage
CALL sp_valid_2(0.119988e7);
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_2;
CREATE PROCEDURE sp_valid_3(IN a INTERVAL DAY(7))
BEGIN
SELECT a;
END /
CALL sp_valid_3('3719628');
a
3719628
CALL sp_valid_3(3719628);
a
3719628
CALL sp_valid_3(0.3719628e7);
a
3719628
CALL sp_valid_3('40000000');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_3;
CREATE PROCEDURE sp_valid_4(IN a INTERVAL HOUR(8))
BEGIN
SELECT a;
END /
CALL sp_valid_4('89271072');
a
89271072
CALL sp_valid_4(89271072);
a
89271072
CALL sp_valid_4(0.89271072e8);
a
89271072
CALL sp_valid_4('100000000');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_4;
CREATE PROCEDURE sp_valid_5(IN a INTERVAL MINUTE(10))
BEGIN
SELECT a;
END /
CALL sp_valid_5('5266993248');
a
5266993248
CALL sp_valid_5(5266993248);
a
5266993248
CALL sp_valid_5(52669.93248e5);
a
5266993248
CALL sp_valid_5('99999999999');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_5;
CREATE PROCEDURE sp_valid_6(IN a INTERVAL SECOND(3))
BEGIN
SELECT a;
END /
CALL sp_valid_6('59.123');
a
59.123000
CALL sp_valid_6(59.123);
a
59.123000
CALL sp_valid_6(59123e-3);
a
59.122000
CALL sp_valid_6(15646.1232);
a
15646.123000
CALL sp_valid_6(15646.1232e0);
a
15646.123000
CALL sp_valid_6(15646.123255);
a
15646.123000
set SQL_MODE = 'TIME_ROUND_FRACTIONAL';
CALL sp_valid_6('59.1236');
a
59.124000
CALL sp_valid_6('59.1299');
a
59.130000
DROP PROCEDURE sp_valid_6;
CREATE PROCEDURE sp_valid_7(IN a INTERVAL YEAR(2))
BEGIN
SELECT a;
END /
CALL sp_valid_7('99');
a
99
CALL sp_valid_7('0');
a
0
CALL sp_valid_7(99);
a
99
CALL sp_valid_7(0.99e2);
a
99
CALL sp_valid_7(0.99e3);
ERROR HY000: Default/ignore value is not supported for such parameter usage
CALL sp_valid_7('1234');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_7;
CREATE PROCEDURE sp_valid_8(IN a INTERVAL MONTH(1))
BEGIN
SELECT a;
END /
CALL sp_valid_8('1');
a
1
CALL sp_valid_8('9');
a
9
CALL sp_valid_8('0');
a
0
CALL sp_valid_8('7');
a
7
CALL sp_valid_8(0.7e1);
a
7
CALL sp_valid_8(70e-1);
a
7
CALL sp_valid_8('11');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_8;
CREATE PROCEDURE sp_valid_9(IN a INTERVAL DAY(3))
BEGIN
SELECT a;
END /
CALL sp_valid_9('999');
a
999
CALL sp_valid_9('10000');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_9;
CREATE PROCEDURE sp_valid_10(IN a INTERVAL MINUTE(7))
BEGIN
SELECT a;
END /
CALL sp_valid_10('9999999');
a
9999999
CALL sp_valid_10(9999999);
a
9999999
CALL sp_valid_10('12345678');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_10;
CREATE PROCEDURE sp_valid_11(IN a INTERVAL DAY(2) TO SECOND(3))
BEGIN
SELECT a;
END /
CALL sp_valid_11('99 23:59:59.999');
a
99 23:59:59.999000
CALL sp_valid_11(99235959.999);
a
99 23:59:59.999000
CALL sp_valid_11(99235959999e-3);
a
99 23:59:59.999000
CALL sp_valid_11('100 23:59:59.999');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_11;
CREATE PROCEDURE sp_valid_12(IN a INTERVAL HOUR(3) TO SECOND(6))
BEGIN
SELECT a;
END /
CALL sp_valid_12('999:59:59.999999');
a
999:59:59.999999
CALL sp_valid_12('1000:59:59.999999');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_12;
CREATE PROCEDURE sp_valid_13(IN a INTERVAL MINUTE(5) TO SECOND(4))
BEGIN
SELECT a;
END /
CALL sp_valid_13('99999:59.9999');
a
99999:59.999900
CALL sp_valid_13('100000:59.9999');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_13;
CREATE PROCEDURE sp_valid_14(IN a INTERVAL DAY(1) TO MINUTE)
BEGIN
SELECT a;
END /
CALL sp_valid_14('9 23:59');
a
9 23:59
CALL sp_valid_14('99 23:59');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_14;
CREATE PROCEDURE sp_valid_15(IN a INTERVAL HOUR(8) TO MINUTE)
BEGIN
SELECT a;
END /
CALL sp_valid_15('99999999:59');
a
99999999:59
CALL sp_valid_15('100000000:59');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_15;
CREATE PROCEDURE sp_valid_16(IN a INTERVAL DAY TO SECOND(6))
BEGIN
SELECT a;
END /
CALL sp_valid_16('9 23:59:59.999999');
a
9 23:59:59.999999
CALL sp_valid_16('100 23:59:59.999999');
a
100 23:59:59.999999
DROP PROCEDURE sp_valid_16;
CREATE PROCEDURE sp_valid_17(IN a INTERVAL HOUR(4) TO SECOND)
BEGIN
SELECT a;
END /
CALL sp_valid_17('23:59:59');
a
23:59:59
CALL sp_valid_17('10000:59:59');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_17;
CREATE PROCEDURE sp_valid_18(IN a INTERVAL MINUTE(9) TO SECOND(2))
BEGIN
SELECT a;
END /
CALL sp_valid_18('999999999:59.99');
a
999999999:59.990000
CALL sp_valid_18('1000000000:59.99');
ERROR HY000: Default/ignore value is not supported for such parameter usage
DROP PROCEDURE sp_valid_18;
CREATE PROCEDURE sp_valid_19(IN a INTERVAL HOUR TO SECOND(5))
BEGIN
SELECT a;
END /
CALL sp_valid_19('23:59:59.99999');
a
23:59:59.999990
CALL sp_valid_19('1000:59:59.99999');
a
1000:59:59.999990
DROP PROCEDURE sp_valid_19;
SELECT TIME '12:00:00'            + INTERVAL '1'       HOUR            AS basic_hour;
basic_hour
13:00:00
SELECT TIME '23:30:00'            + INTERVAL '45'      MINUTE          AS rollover_minute;
rollover_minute
24:15:00
SELECT TIME '12:00:00'            + INTERVAL '90'      SECOND          AS second_addition;
second_addition
12:01:30
SELECT TIME '12:00:00.5'          + INTERVAL '0.5'     SECOND          AS fractional_add;
fractional_add
12:00:01
SELECT TIME '23:59:59.999999'     + INTERVAL '0.000001' SECOND          AS micro_rollover;
micro_rollover
24:00:00
SELECT TIME '12:00:00'            + INTERVAL '-1'      HOUR            AS negative_hour;
negative_hour
11:00:00
SELECT TIME '01:00:00'            + INTERVAL '-90'     MINUTE          AS negative_minute;
negative_minute
-00:30:00
SELECT TIME '12:00:00'            + INTERVAL '1'       DAY             AS day_addition;
day_addition
36:00:00
SELECT TIME '12:00:00'            + INTERVAL '2 12'    DAY TO HOUR     AS day_to_hour;
day_to_hour
72:00:00
SELECT TIME '12:00:00'            + INTERVAL '1 12:30:05' DAY TO SECOND AS day_to_second;
day_to_second
48:30:05
SELECT TIME '12:00:00'            + INTERVAL '25:30:05'  HOUR TO SECOND AS hour_to_second;
hour_to_second
37:30:05
SELECT TIME '12:00:00'            + INTERVAL '90:05'     MINUTE TO SECOND AS minute_to_second;
minute_to_second
13:30:05
SELECT TIME '838:59:59'           + INTERVAL '1'       SECOND          AS time_overflow;
time_overflow
838:00:00
SELECT TIME '-838:59:59'          + INTERVAL '-1'      SECOND          AS time_underflow;
time_underflow
-838:00:00
SELECT TIME '12:00:00'            + INTERVAL '0.0000001' SECOND         AS precision_overflow;
precision_overflow
12:00:00
SELECT TIME '12:00:00'            + INTERVAL '1'       HOUR            + INTERVAL '30' MINUTE            AS no_parens;
no_parens
13:30:00
SELECT TIME '12:00:00'            + INTERVAL '1'       HOUR            - INTERVAL '15' MINUTE            AS mixed_ops;
mixed_ops
12:45:00
SELECT TIME '12:00:00'            + INTERVAL '1'       YEAR            AS invalid_year;
invalid_year
0001-00-00 12:00:00
SELECT TIME '12:00:00'            + INTERVAL '1'       MONTH           AS invalid_month;
invalid_month
0000-01-00 12:00:00
SELECT TIME '12:00:00.499999'     + INTERVAL '0.5000001' SECOND         AS rounding1;
rounding1
12:00:00
SELECT TIME '12:00:00.499999'     + INTERVAL '0.500001'  SECOND         AS rounding2;
rounding2
12:00:01
SELECT TIME '12:00:00'            + INTERVAL '0.000001' SECOND(6)       AS max_precision;
max_precision
12:00:00
SELECT TIME '-12:00:00'           + INTERVAL '1'       HOUR            AS negative_base;
negative_base
-11:00:00
SELECT TIME '-00:30:00'           + INTERVAL '90'      MINUTE          AS negative_to_positive;
negative_to_positive
01:00:00
SELECT TIME '00:00:00'            + INTERVAL '59:59.999999' MINUTE TO SECOND(6) AS max_fractional;
max_fractional
00:59:59
SELECT TIME '23:59:59'            + INTERVAL '1.000001' SECOND(6)       AS second_rollover;
second_rollover
24:00:00
SELECT TIME '12:00:00'            + INTERVAL '36'      HOUR            AS multi_day;
multi_day
48:00:00
SELECT TIME '00:00:00'            + INTERVAL '47:59:59' HOUR TO SECOND  AS max_valid;
max_valid
47:59:59
SELECT TIME '12:00:00'            + INTERVAL '1'       HOUR            AS step1, (TIME '12:00:00' + INTERVAL '1' HOUR) + INTERVAL '30' MINUTE AS chained;
step1	chained
13:00:00	13:30:00
SELECT DATE '2025-01-01'          - INTERVAL '5'       YEAR;
DATE '2025-01-01'          - INTERVAL '5'       YEAR
2020-01-01
SELECT DATE '2025-01-31'          + INTERVAL '1'       MONTH;
DATE '2025-01-31'          + INTERVAL '1'       MONTH
2025-02-28
SELECT DATE '2025-07-01'          + INTERVAL '31'      DAY;
DATE '2025-07-01'          + INTERVAL '31'      DAY
2025-08-01
SELECT DATE '2025-01-31'          + INTERVAL '0-1'     YEAR TO MONTH;
DATE '2025-01-31'          + INTERVAL '0-1'     YEAR TO MONTH
2025-02-28
SELECT DATE '2025-12-15'          - INTERVAL '2-4'     YEAR TO MONTH;
DATE '2025-12-15'          - INTERVAL '2-4'     YEAR TO MONTH
2023-08-15
SELECT DATE '2025-01-01'          + INTERVAL '1 6'     DAY TO HOUR;
DATE '2025-01-01'          + INTERVAL '1 6'     DAY TO HOUR
2025-01-02 06:00:00
SELECT DATE '2025-01-01'          + INTERVAL '1:30'    HOUR TO MINUTE;
DATE '2025-01-01'          + INTERVAL '1:30'    HOUR TO MINUTE
2025-01-01 01:30:00
SELECT DATE '2024-02-29'          + INTERVAL '4'       YEAR;
DATE '2024-02-29'          + INTERVAL '4'       YEAR
2028-02-29
SELECT DATE '2025-01-01'          + INTERVAL NULL      DAY;
DATE '2025-01-01'          + INTERVAL NULL      DAY
NULL
SELECT NULL                       + INTERVAL '1'       MONTH;
NULL                       + INTERVAL '1'       MONTH
NULL
SELECT DATE '2025-01-01'          + INTERVAL '1'       DAY             + INTERVAL '1' MONTH;
DATE '2025-01-01'          + INTERVAL '1'       DAY             + INTERVAL '1' MONTH
2025-02-02
SELECT DATE '2025-01-03'          - INTERVAL '1'       DAY             - INTERVAL '2' MONTH;
DATE '2025-01-03'          - INTERVAL '1'       DAY             - INTERVAL '2' MONTH
2024-11-02
SELECT DATE '2025-01-31'          + INTERVAL '99'      MONTH;
DATE '2025-01-31'          + INTERVAL '99'      MONTH
2033-04-30
SELECT DATE '2025-01-01'          + INTERVAL '1'       YEAR            + INTERVAL '1' MONTH;
DATE '2025-01-01'          + INTERVAL '1'       YEAR            + INTERVAL '1' MONTH
2026-02-01
SELECT (DATE '2025-01-01' + INTERVAL '6' MONTH) + INTERVAL '3' DAY;
(DATE '2025-01-01' + INTERVAL '6' MONTH) + INTERVAL '3' DAY
2025-07-04
SELECT TIMESTAMP '2025-08-01 00:00:00' + INTERVAL '100-6'   YEAR TO MONTH AS large_year_month;
large_year_month
2126-02-01 00:00:00
SELECT TIMESTAMP '2025-08-01 00:00:00' + INTERVAL '10000 12' DAY TO HOUR    AS large_day_to_hour;
large_day_to_hour
2052-12-17 12:00:00
SELECT TIMESTAMP '2025-08-01 00:00:00' + INTERVAL '50000:59:59' HOUR TO SECOND AS large_hour_to_second;
large_hour_to_second
2031-04-15 08:59:59
SELECT TIMESTAMP '2025-08-01 00:00:00' + INTERVAL '1000000:30' MINUTE TO SECOND AS large_minute_to_second;
large_minute_to_second
2027-06-26 10:40:30
SELECT TIMESTAMP '2025-08-01 00:00:00' + INTERVAL '1 12:30:15' DAY TO SECOND   AS day_to_second;
day_to_second
2025-08-02 12:30:15
SELECT TIMESTAMP '2025-08-01 05:00:00' + INTERVAL '2:45'       HOUR TO MINUTE   AS hour_to_minute;
hour_to_minute
2025-08-01 07:45:00
SELECT TIMESTAMP '2025-08-01 05:00:00' + INTERVAL '90:30'      MINUTE TO SECOND AS minute_to_second;
minute_to_second
2025-08-01 06:30:30
SELECT TIMESTAMP '2025-08-01 00:00:00' + INTERVAL '1-3'       YEAR TO MONTH    AS year_to_month;
year_to_month
2026-11-01 00:00:00
SELECT TIMESTAMP '2025-08-01 05:00:00' + INTERVAL '2 4'       DAY TO HOUR      AS day_to_hour;
day_to_hour
2025-08-03 09:00:00
SELECT TIME '12:00:00' - INTERVAL '-1' HOUR AS basic_hour;
basic_hour
13:00:00
SELECT TIME '23:30:00' + INTERVAL '45' MINUTE AS rollover_minute;
rollover_minute
24:15:00
SELECT INTERVAL '90' SECOND + TIME '12:00:00' AS second_addition;
second_addition
12:01:30
SELECT INTERVAL '0.5' SECOND + TIME '12:00:00.5' AS fractional_add;
fractional_add
12:00:01
SELECT TIME '23:59:59.999999' - INTERVAL '-0.000001' SECOND AS micro_rollover;
micro_rollover
24:00:00
SELECT TIME '12:00:00' + INTERVAL '-1' HOUR AS negative_hour;
negative_hour
11:00:00
SELECT INTERVAL '-90' MINUTE + TIME '01:00:00' AS negative_minute;
negative_minute
-00:30:00
SELECT INTERVAL '1' DAY + TIME '12:00:00' AS day_addition;
day_addition
36:00:00
SELECT TIME '12:00:00' + INTERVAL '2 12' DAY TO HOUR AS day_to_hour;
day_to_hour
72:00:00
SELECT INTERVAL '1 12:30:05' DAY TO SECOND + TIME '12:00:00' AS day_to_second;
day_to_second
48:30:05
SELECT INTERVAL '25:30:05' HOUR TO SECOND + TIME '12:00:00' AS hour_to_second;
hour_to_second
37:30:05
SELECT TIME '12:00:00' + INTERVAL '90:05' MINUTE TO SECOND AS minute_to_second;
minute_to_second
13:30:05
SELECT TIME '838:59:59' - INTERVAL '-1' SECOND AS time_overflow;
time_overflow
838:00:00
SELECT TIME '-838:59:59' - INTERVAL '1' SECOND AS time_underflow;
time_underflow
-838:00:00
SELECT TIME '12:00:00' + INTERVAL '0.0000001' SECOND AS precision_overflow;
precision_overflow
12:00:00
SELECT TIME '12:00:00' - INTERVAL '-1' HOUR - INTERVAL '-30' MINUTE AS no_parens;
no_parens
13:30:00
SELECT TIME '12:00:00' - INTERVAL '-1' HOUR - INTERVAL '15' MINUTE AS mixed_ops;
mixed_ops
12:45:00
SELECT INTERVAL '1' YEAR + TIME '12:00:00' AS invalid_year;
invalid_year
0001-00-00 12:00:00
SELECT TIME '12:00:00' + INTERVAL '1' MONTH AS invalid_month;
invalid_month
0000-01-00 12:00:00
SELECT TIME '12:00:00.499999' - INTERVAL '-0.5000001' SECOND AS rounding1;
rounding1
12:00:00
SELECT INTERVAL '0.500001' SECOND + TIME '12:00:00.499999' AS rounding2;
rounding2
12:00:01
SELECT INTERVAL '0.000001' SECOND(6) + TIME '12:00:00' AS max_precision;
max_precision
12:00:00
SELECT TIME '-12:00:00' - INTERVAL '-1' HOUR AS negative_base;
negative_base
-11:00:00
SELECT INTERVAL '90' MINUTE + TIME '-00:30:00' AS negative_to_positive;
negative_to_positive
01:00:00
SELECT TIME '00:00:00' + INTERVAL '59:59.999999' MINUTE TO SECOND(6) AS max_fractional;
max_fractional
00:59:59
SELECT TIME '23:59:59' + INTERVAL '1.000001' SECOND(6) AS second_rollover;
second_rollover
24:00:00
SELECT INTERVAL '36' HOUR + TIME '12:00:00' AS multi_day;
multi_day
48:00:00
SELECT TIME '00:00:00' + INTERVAL '47:59:59' HOUR TO SECOND AS max_valid;
max_valid
47:59:59
SELECT INTERVAL '1' HOUR + TIME '12:00:00' AS step1, (TIME '12:00:00' - INTERVAL '-1' HOUR) - INTERVAL '-30' MINUTE AS chained;
step1	chained
13:00:00	13:30:00
SELECT DATE '2025-01-01' + INTERVAL '-5' YEAR;
DATE '2025-01-01' + INTERVAL '-5' YEAR
2020-01-01
SELECT INTERVAL '1' MONTH + DATE '2025-01-31';
INTERVAL '1' MONTH + DATE '2025-01-31'
2025-02-28
SELECT DATE '2025-07-01' - INTERVAL '-31' DAY;
DATE '2025-07-01' - INTERVAL '-31' DAY
2025-08-01
SELECT DATE '2025-01-31' + INTERVAL '0-1' YEAR TO MONTH;
DATE '2025-01-31' + INTERVAL '0-1' YEAR TO MONTH
2025-02-28
SELECT DATE '2025-12-15' - INTERVAL '2-4' YEAR TO MONTH;
DATE '2025-12-15' - INTERVAL '2-4' YEAR TO MONTH
2023-08-15
SELECT INTERVAL '1 6' DAY TO HOUR + DATE '2025-01-01';
INTERVAL '1 6' DAY TO HOUR + DATE '2025-01-01'
2025-01-02 06:00:00
SELECT DATE '2025-01-01' + INTERVAL '1:30' HOUR TO MINUTE;
DATE '2025-01-01' + INTERVAL '1:30' HOUR TO MINUTE
2025-01-01 01:30:00
SELECT DATE '2024-02-29' - INTERVAL '-4' YEAR;
DATE '2024-02-29' - INTERVAL '-4' YEAR
2028-02-29
SELECT DATE '2025-01-01' + INTERVAL NULL DAY;
DATE '2025-01-01' + INTERVAL NULL DAY
NULL
SELECT NULL + INTERVAL '1' MONTH;
NULL + INTERVAL '1' MONTH
NULL
SELECT DATE '2025-01-03' - INTERVAL '1' DAY - INTERVAL '2' MONTH;
DATE '2025-01-03' - INTERVAL '1' DAY - INTERVAL '2' MONTH
2024-11-02
SELECT DATE '2025-01-01' - INTERVAL '-1' DAY - INTERVAL '-1' MONTH;
DATE '2025-01-01' - INTERVAL '-1' DAY - INTERVAL '-1' MONTH
2025-02-02
SELECT DATE '2025-01-31' + INTERVAL '99' MONTH;
DATE '2025-01-31' + INTERVAL '99' MONTH
2033-04-30
SELECT DATE '2025-01-01' - INTERVAL '-1' YEAR - INTERVAL '-1' MONTH;
DATE '2025-01-01' - INTERVAL '-1' YEAR - INTERVAL '-1' MONTH
2026-02-01
SELECT (DATE '2025-01-01' - INTERVAL '-6' MONTH) - INTERVAL '-3' DAY;
(DATE '2025-01-01' - INTERVAL '-6' MONTH) - INTERVAL '-3' DAY
2025-07-04
SELECT TIMESTAMP '2025-08-01 00:00:00' - INTERVAL '-100-6' YEAR TO MONTH AS large_year_month;
large_year_month
2126-02-01 00:00:00
SELECT INTERVAL '10000 12' DAY TO HOUR + TIMESTAMP '2025-08-01 00:00:00' AS large_day_to_hour;
large_day_to_hour
2052-12-17 12:00:00
SELECT TIMESTAMP '2025-08-01 00:00:00' - INTERVAL '-50000:59:59' HOUR TO SECOND AS large_hour_to_second;
large_hour_to_second
2031-04-15 08:59:59
SELECT INTERVAL '1000000:30' MINUTE TO SECOND + TIMESTAMP '2025-08-01 00:00:00' AS large_minute_to_second;
large_minute_to_second
2027-06-26 10:40:30
SELECT TIMESTAMP '2025-08-01 00:00:00' - INTERVAL '-1 12:30:15' DAY TO SECOND AS day_to_second;
day_to_second
2025-08-02 12:30:15
SELECT TIMESTAMP '2025-08-01 05:00:00' + INTERVAL '2:45' HOUR TO MINUTE AS hour_to_minute;
hour_to_minute
2025-08-01 07:45:00
SELECT TIMESTAMP '2025-08-01 05:00:00' + INTERVAL '90:30' MINUTE TO SECOND AS minute_to_second;
minute_to_second
2025-08-01 06:30:30
SELECT TIMESTAMP '2025-08-01 00:00:00' - INTERVAL '-1-3' YEAR TO MONTH AS year_to_month;
year_to_month
2026-11-01 00:00:00
SELECT INTERVAL '2 4' DAY TO HOUR + TIMESTAMP '2025-08-01 05:00:00' AS day_to_hour;
day_to_hour
2025-08-03 09:00:00
CREATE PROCEDURE add_year_month(
IN base_date DATE,
IN add_interval INTERVAL YEAR TO MONTH
)
BEGIN
SELECT base_date + add_interval AS result;
END /
CALL add_year_month('2025-01-15', INTERVAL '1-3' YEAR TO MONTH);
result
2026-04-15
CALL add_year_month('2025-01-15', INTERVAL '5-0' YEAR TO MONTH);
result
2030-01-15
CALL add_year_month('2025-01-15', INTERVAL '-2-0' YEAR TO MONTH);
result
2023-01-15
DROP PROCEDURE add_year_month;
CREATE PROCEDURE modify_timestamp(
INOUT base_timestamp TIMESTAMP,
IN modify_interval INTERVAL DAY TO SECOND
)
BEGIN
SET base_timestamp = base_timestamp + modify_interval;
END /
SET @ts1 = '2025-08-01 14:30:00';
CALL modify_timestamp(@ts1, INTERVAL '1 03:15:30.125' DAY TO SECOND);
SELECT @ts1;
@ts1
2025-08-02 17:45:30
SET @ts2 = '2025-08-01 14:30:00';
CALL modify_timestamp(@ts2, -INTERVAL '27 00:30:00' DAY TO SECOND);
SELECT @ts2;
@ts2
2025-07-05 14:00:00
SET @ts3 = '2025-08-01 14:30:00.500';
CALL modify_timestamp(@ts3, INTERVAL '0.500' SECOND);
SELECT @ts3;
@ts3
2025-08-01 14:30:01
DROP PROCEDURE modify_timestamp;
CREATE PROCEDURE adjust_datetime(
INOUT base_datetime DATETIME,
INOUT time_interval INTERVAL HOUR TO MINUTE
)
BEGIN
SET base_datetime = base_datetime + time_interval;
END /
SET @dt1 = '2025-01-01 00:00:00';
SET @iv1 = INTERVAL '02:30' HOUR TO MINUTE;
CALL adjust_datetime(@dt1, @iv1);
SELECT @dt1, @iv1;
@dt1	@iv1
2025-01-01 02:30:00	2:30
SET @dt2 = '2025-01-01 12:00:00';
SET @iv2 = INTERVAL '-01:15' HOUR TO MINUTE;
CALL adjust_datetime(@dt2, @iv2);
SELECT @dt2, @iv2;
@dt2	@iv2
2025-01-01 10:45:00	-1:15
SET @dt3 = '2025-01-01 12:00:00';
SET @iv3 = INTERVAL '00:00' HOUR TO MINUTE;
CALL adjust_datetime(@dt3, @iv3);
SELECT @dt3, @iv3;
@dt3	@iv3
2025-01-01 12:00:00	0:00
DROP PROCEDURE adjust_datetime;
CREATE PROCEDURE mixed_temporal(
IN base_date DATE,
IN time_offset INTERVAL HOUR TO SECOND,
OUT result_datetime DATETIME
)
BEGIN
SET result_datetime = (base_date + INTERVAL '12' HOUR) + time_offset;
END /
SET @result1 = NULL;
CALL mixed_temporal('2025-08-07', INTERVAL '02:15:30.500' HOUR TO SECOND, @result1);
SELECT @result1;
@result1
2025-08-07 14:15:30
SET @result2 = NULL;
CALL mixed_temporal('2025-08-07', INTERVAL '-03:30:00' HOUR TO SECOND, @result2);
SELECT @result2;
@result2
2025-08-07 08:30:00
SET @result3 = NULL;
CALL mixed_temporal('2025-08-07', INTERVAL '22:07:50' HOUR TO SECOND, @result3);
SELECT @result3;
@result3
2025-08-08 10:07:50
DROP PROCEDURE mixed_temporal;
CREATE PROCEDURE handle_negative(
INOUT base_time TIME,
IN neg_interval INTERVAL HOUR TO MINUTE
)
BEGIN
SET base_time = base_time - neg_interval;
END /
SET @time1 = '12:00:00';
CALL handle_negative(@time1, INTERVAL '03:15' HOUR TO MINUTE);
SELECT @time1;
@time1
08:45:00
SET @time2 = '08:30:00';
CALL handle_negative(@time2, INTERVAL '-01:00' HOUR TO MINUTE);
SELECT @time2;
@time2
09:30:00
SET @time3 = '10:00:00';
CALL handle_negative(@time3, INTERVAL '00:00' HOUR TO MINUTE);
SELECT @time3;
@time3
10:00:00
DROP PROCEDURE handle_negative;
