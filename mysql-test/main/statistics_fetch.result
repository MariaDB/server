#
# Test to inspect the range_selectivity returned by Histogram_json and Histogram_binary
# todo: should be merged with statistics_json.test
#
set @save_histogram_type=@@histogram_type;
set @save_histogram_size=@@histogram_size;
create table ten(a int primary key);
insert into ten values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);
create table t1_bin (a varchar(255));
insert into t1_bin select concat('a-', a) from ten;
set histogram_size=100;
analyze table t1_bin persistent for all;
Table	Op	Msg_type	Msg_text
test.t1_bin	analyze	status	Engine-independent statistics collected
test.t1_bin	analyze	status	OK
select hex(histogram) from mysql.column_stats where table_name='t1_bin';
hex(histogram)
00000000000000000000711C711C711C711C711CE338E338E338E338E33855555555555555555555C671C671C671C671C671388E388E388E388E388EAAAAAAAAAAAAAAAAAAAA1BC71BC71BC71BC71BC78DE38DE38DE38DE38DE3FFFFFFFFFFFFFFFFFFFF
explain extended select * from t1_bin where a between 'a-3a' and 'zzzzzzzzz';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1_bin	ALL	NULL	NULL	NULL	NULL	10	58.82	Using where
Warnings:
Note	1003	select `test`.`t1_bin`.`a` AS `a` from `test`.`t1_bin` where `test`.`t1_bin`.`a` between 'a-3a' and 'zzzzzzzzz'
analyze select * from t1_bin where a between 'a-3a' and 'zzzzzzzzz';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	r_rows	filtered	r_filtered	Extra
1	SIMPLE	t1_bin	ALL	NULL	NULL	NULL	NULL	10	10.00	58.82	60.00	Using where
create table t1_json (a varchar(255));
insert into t1_json select concat('a-', a) from ten;
set histogram_type=json;
analyze table t1_json persistent for all;
Table	Op	Msg_type	Msg_text
test.t1_json	analyze	status	Engine-independent statistics collected
test.t1_json	analyze	status	OK
select * from mysql.column_stats where table_name='t1_json';
db_name	table_name	column_name	min_value	max_value	nulls_ratio	avg_length	avg_frequency	hist_size	hist_type	histogram
test	t1_json	a	a-0	a-9	0.0000	3.0000	1.0000	100	JSON	[
  "a-0",
  "a-0",
  "a-0",
  "a-0",
  "a-0",
  "a-0",
  "a-0",
  "a-0",
  "a-0",
  "a-0",
  "a-1",
  "a-1",
  "a-1",
  "a-1",
  "a-1",
  "a-1",
  "a-1",
  "a-1",
  "a-1",
  "a-1",
  "a-2",
  "a-2",
  "a-2",
  "a-2",
  "a-2",
  "a-2",
  "a-2",
  "a-2",
  "a-2",
  "a-2",
  "a-3",
  "a-3",
  "a-3",
  "a-3",
  "a-3",
  "a-3",
  "a-3",
  "a-3",
  "a-3",
  "a-3",
  "a-4",
  "a-4",
  "a-4",
  "a-4",
  "a-4",
  "a-4",
  "a-4",
  "a-4",
  "a-4",
  "a-4",
  "a-5",
  "a-5",
  "a-5",
  "a-5",
  "a-5",
  "a-5",
  "a-5",
  "a-5",
  "a-5",
  "a-5",
  "a-6",
  "a-6",
  "a-6",
  "a-6",
  "a-6",
  "a-6",
  "a-6",
  "a-6",
  "a-6",
  "a-6",
  "a-7",
  "a-7",
  "a-7",
  "a-7",
  "a-7",
  "a-7",
  "a-7",
  "a-7",
  "a-7",
  "a-7",
  "a-8",
  "a-8",
  "a-8",
  "a-8",
  "a-8",
  "a-8",
  "a-8",
  "a-8",
  "a-8",
  "a-8",
  "a-9",
  "a-9",
  "a-9",
  "a-9",
  "a-9",
  "a-9",
  "a-9",
  "a-9",
  "a-9",
  "a-9"
]
explain extended select * from t1_json where a between 'a-3a' and 'zzzzzzzzz';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1_json	ALL	NULL	NULL	NULL	NULL	10	60.87	Using where
Warnings:
Note	1003	select `test`.`t1_json`.`a` AS `a` from `test`.`t1_json` where `test`.`t1_json`.`a` between 'a-3a' and 'zzzzzzzzz'
analyze select * from t1_json where a between 'a-3a' and 'zzzzzzzzz';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	r_rows	filtered	r_filtered	Extra
1	SIMPLE	t1_json	ALL	NULL	NULL	NULL	NULL	10	10.00	60.87	60.00	Using where
create table t2_bin(a int);
insert into t2_bin select a*10 from ten;
set histogram_type=@save_histogram_type;
analyze table t2_bin persistent for all;
Table	Op	Msg_type	Msg_text
test.t2_bin	analyze	status	Engine-independent statistics collected
test.t2_bin	analyze	status	OK
explain extended select * from t2_bin where a between '44' and '55';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2_bin	ALL	NULL	NULL	NULL	NULL	10	11.76	Using where
Warnings:
Note	1003	select `test`.`t2_bin`.`a` AS `a` from `test`.`t2_bin` where `test`.`t2_bin`.`a` between '44' and '55'
analyze select * from t2_bin where a between '44' and '55';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	r_rows	filtered	r_filtered	Extra
1	SIMPLE	t2_bin	ALL	NULL	NULL	NULL	NULL	10	10.00	11.76	10.00	Using where
create table t2_json(a int);
insert into t2_json select a*10 from ten;
set histogram_type=json;
analyze table t2_json persistent for all;
Table	Op	Msg_type	Msg_text
test.t2_json	analyze	status	Engine-independent statistics collected
test.t2_json	analyze	status	OK
select * from mysql.column_stats where table_name='t2_json';
db_name	table_name	column_name	min_value	max_value	nulls_ratio	avg_length	avg_frequency	hist_size	hist_type	histogram
test	t2_json	a	0	90	0.0000	4.0000	1.0000	100	JSON	[
  "0",
  "0",
  "0",
  "0",
  "0",
  "0",
  "0",
  "0",
  "0",
  "0",
  "10",
  "10",
  "10",
  "10",
  "10",
  "10",
  "10",
  "10",
  "10",
  "10",
  "20",
  "20",
  "20",
  "20",
  "20",
  "20",
  "20",
  "20",
  "20",
  "20",
  "30",
  "30",
  "30",
  "30",
  "30",
  "30",
  "30",
  "30",
  "30",
  "30",
  "40",
  "40",
  "40",
  "40",
  "40",
  "40",
  "40",
  "40",
  "40",
  "40",
  "50",
  "50",
  "50",
  "50",
  "50",
  "50",
  "50",
  "50",
  "50",
  "50",
  "60",
  "60",
  "60",
  "60",
  "60",
  "60",
  "60",
  "60",
  "60",
  "60",
  "70",
  "70",
  "70",
  "70",
  "70",
  "70",
  "70",
  "70",
  "70",
  "70",
  "80",
  "80",
  "80",
  "80",
  "80",
  "80",
  "80",
  "80",
  "80",
  "80",
  "90",
  "90",
  "90",
  "90",
  "90",
  "90",
  "90",
  "90",
  "90",
  "90"
]
explain extended select * from t2_json where a between '44' and '55';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2_json	ALL	NULL	NULL	NULL	NULL	10	10.10	Using where
Warnings:
Note	1003	select `test`.`t2_json`.`a` AS `a` from `test`.`t2_json` where `test`.`t2_json`.`a` between '44' and '55'
analyze select * from t2_json where a between '44' and '55';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	r_rows	filtered	r_filtered	Extra
1	SIMPLE	t2_json	ALL	NULL	NULL	NULL	NULL	10	10.00	10.10	10.00	Using where
create table users (
city varchar(100)
);
set histogram_size=50;
insert into users select 'Moscow' from seq_1_to_99;
insert into users select 'Helsinki' from seq_1_to_2;
set histogram_type=json;
analyze table users persistent for all;
Table	Op	Msg_type	Msg_text
test.users	analyze	status	Engine-independent statistics collected
test.users	analyze	status	OK
select histogram from mysql.column_stats where table_name='users';
histogram
[
  "Helsinki",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow",
  "Moscow"
]
explain extended select * from users where city <= 'Moscow';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	users	ALL	NULL	NULL	NULL	NULL	101	100.00	Using where
Warnings:
Note	1003	select `test`.`users`.`city` AS `city` from `test`.`users` where `test`.`users`.`city` <= 'Moscow'
analyze select * from users where city <= 'Moscow';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	r_rows	filtered	r_filtered	Extra
1	SIMPLE	users	ALL	NULL	NULL	NULL	NULL	101	101.00	100.00	100.00	Using where
drop table t1_bin;
drop table t1_json;
drop table t2_bin;
drop table t2_json;
drop table users;
