FLUSH STATUS;
create table h_1(abc int primary key, xyz int hidden);
SHOW STATUS LIKE 'Feature_hidden_columns';
desc h_1;
show create table h_1;
drop table h_1;
--error ER_TABLE_MUST_HAVE_COLUMNS
create table h_2(a1 int hidden);
--error ER_PARSE_ERROR
create table h_3(a1 blob,hidden(a1));
--error ER_HIDDEN_NOT_NULL_WITHOUT_DEFAULT 
create table h_4(a1 int primary key hidden ,a2 int unique hidden , a3 blob,a4
int not null hidden unique);
--error ER_HIDDEN_NOT_NULL_WITHOUT_DEFAULT
create table h_5(abc int not null hidden);
create table t1(a int hidden, b int);
#should automatically add null
insert into t1 values(1);
insert into t1(a) values(2);
insert into t1(b) values(3);
insert into t1(a,b) values(5,5);
select * from t1;
select a,b from t1;
delete from t1;
insert into t1 values(1),(2),(3),(4);
select * from t1;
select a from t1;
drop table t1;
--echo #more complex case of hidden 
create table t1(a int , b int hidden , c int hidden auto_increment unique, d blob , e int unique, f int);
desc t1;
insert into t1 values(1,'d blob',1,1),(1,'d blob',11,1),(1,'d blob',2,1),(1,'d blob',3,1),(1,'d blob',41,1);
select * from t1;
drop table t1;
--error ER_PARSE_ERROR
create table sdsdsd(a int , b int, hidden(a,b));
create table t1(a int,abc int as (a mod 3) virtual hidden);
desc t1;
--error ER_WRONG_VALUE_COUNT_ON_ROW
insert into t1 values(1,default);
insert into t1 values(1),(22),(233);
select * from t1;
select a,abc from t1;
drop table t1;
create table t1(abc int primary key hidden auto_increment, a int);
desc t1;
show create table t1;
insert into t1 values(1);
insert into t1 values(2);
insert into t1 values(3);
select * from t1;
select abc,a from t1;
delete  from t1;
insert into t1 values(1),(2),(3),(4),(6);
select abc,a from t1;
drop table t1;
create table t1(abc int);
--error ER_TABLE_MUST_HAVE_COLUMNS
alter table t1 change abc ss int hidden;
alter table t1 add column xyz int;
alter table t1 modify column abc  int ;
desc t1;
--error ER_WRONG_VALUE_COUNT_ON_ROW
insert into t1 values(22);
alter table t1 modify column abc  int hidden;
desc t1;
insert into t1 values(12);
drop table t1;

--echo #some test on copy table structure with table data;

--echo #table with hidden fields and unique keys;

create table t1(a int , b int hidden , c int hidden auto_increment unique, d blob , e int unique, f int);
desc t1;
insert into t1 values(1,'d blob',1,1),(1,'d blob',11,1),(1,'d blob',2,1),(1,'d blob',3,1),(1,'d blob',41,1);
select * from t1;
select a,b,c,d,e,f from t1;
--echo #this wont copy hidden fields and keys;
create table t2 as select * from t1;
desc t2;
select * from t2;
--error ER_BAD_FIELD_ERROR
select a,b,c,d,e,f from t2;
drop table t2;
--echo #now this will copy hidden fields 
create table t2 as select a,b,c,d,e,f from t1;
desc t2;
select * from t2;
select a,b,c,d,e,f from t2;
drop table t2,t1;

--echo #some test related to copy of data from one table to another;
create table t1(a int , b int hidden , c int hidden auto_increment unique, d blob , e int unique, f int);
insert into t1 values(1,'d blob',1,1),(1,'d blob',11,1),(1,'d blob',2,1),(1,'d blob',3,1),(1,'d blob',41,1);
select a,b,c,d,e,f from t1;
create table t2(a int , b int hidden , c int hidden , d blob , e int unique, f int);
insert into t2 select * from t1;
select a,b,c,d,e,f from t2;
truncate t2;
insert into t2 (a,b,c,d,e,f) select a,b,c,d,e,f from t1;
select a,b,c,d,e,f from t2;
truncate t2;
drop table t1,t2;

--echo #some test related to creating view on table with hidden column;
create table t1(a int , b int hidden , c int hidden auto_increment unique, d blob , e int unique, f int);
insert into t1 values(1,'d blob',1,1),(1,'d blob',11,1),(1,'d blob',2,1),(1,'d blob',3,1),(1,'d blob',41,1);
create view v as select * from t1;
desc v;
select * from v;
--echo #v does not have hidden column;
--error ER_BAD_FIELD_ERROR
select a,b,c,d,e,f from v;
insert into v values(1,21,32,4);
select * from v;
--error ER_BAD_FIELD_ERROR
insert into v(a,b,c,d,e,f) values(1,12,3,4,5,6);
drop view v;

create view v as select a,b,c,d,e,f from t1;
desc v;
select * from v;
--echo #v does  have hidden column;
select a,b,c,d,e,f from v;
insert into v values(1,26,33,4,45,66);
select a,b,c,d,e,f from v;
insert into v(a,b,c,d,e,f) values(1,32,31,41,5,6);
select a,b,c,d,e,f from v;
drop view v;
drop table t1;

--echo #now hidden column in where and some join query 
create table t1 (a int unique , b int hidden unique, c int unique  hidden);
insert into t1(a,b,c) values(1,1,1);
insert into t1(a,b,c) values(2,2,2);
insert into t1(a,b,c) values(3,3,3);
insert into t1(a,b,c) values(4,4,4);
insert into t1(a,b,c) values(21,21,26);
insert into t1(a,b,c) values(31,31,35);
insert into t1(a,b,c) values(41,41,45);
insert into t1(a,b,c) values(22,22,24);
insert into t1(a,b,c) values(32,32,33);
insert into t1(a,b,c) values(42,42,43);
explain select * from t1 where b=3;
select * from t1 where b=3;
explain select * from t1 where c=3;
select * from t1 where c=3;

create table t2 as select a,b,c from t1;
desc t2;
explain select * from t1,t2 where t1.b = t2.c and t1.c = t2.b;
select * from t1,t2 where t1.b = t2.c and t1.c = t2.b;
drop table t1,t2;
--echo #Unhide  hidden columns
create table t1 (a int primary key, b int hidden, c int hidden unique);
show create table t1;
desc t1;
alter table t1 modify column b int;
desc t1;
alter table t1 change column c d int;
desc t1;
drop table t1;
SHOW STATUS LIKE 'Feature_hidden_columns';
--echo #hidden is non reserved
create table t1(a int unique , hidden int hidden, c int );
desc t1;
alter table t1 change column hidden hid int hidden;
desc t1;
drop table t1;