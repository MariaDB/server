create table t1 (a int, b int);
create table t2 (c int, d int);
insert into t1 values (1,1),(2,2);
insert into t2 values (2,2),(3,3);

(select a,b from t1) intersect (select c,d from t2);

drop tables t1,t2;


create table t1 (a int, b int) engine=MyISAM;
create table t2 (c int, d int) engine=MyISAM;
create table t3 (e int, f int) engine=MyISAM;
insert into t1 values (1,1),(2,2),(3,3);
insert into t2 values (2,2),(3,3),(4,4);
insert into t3 values (1,1),(2,2),(5,5);

(select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);
EXPLAIN (select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);
EXPLAIN extended (select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);
EXPLAIN extended select * from ((select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3)) a;
EXPLAIN format=json (select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);
--replace_regex /"r_total_time_ms": [0-9e\.\-+]*,/"r_total_time_ms": "REPLACED",/
ANALYZE format=json (select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);
--replace_regex /"r_total_time_ms": [0-9e\.\-+]*,/"r_total_time_ms": "REPLACED",/
ANALYZE format=json select * from ((select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3)) a;
select * from ((select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3)) a;

prepare stmt from "(select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);";
execute stmt;
execute stmt;

prepare stmt from "select * from ((select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3)) a";
execute stmt;
execute stmt;

(select a,b from t1) intersect (select c,e from t2,t3);
EXPLAIN (select a,b from t1) intersect (select c,e from t2,t3);
EXPLAIN extended (select a,b from t1) intersect (select c,e from t2,t3);
EXPLAIN extended select * from ((select a,b from t1) intersect (select c,e from t2,t3)) a;
EXPLAIN format=json (select a,b from t1) intersect (select c,e from t2,t3);
--replace_regex /"r_total_time_ms": [0-9e\.\-+]*,/"r_total_time_ms": "REPLACED",/
ANALYZE format=json (select a,b from t1) intersect (select c,e from t2,t3);
--replace_regex /"r_total_time_ms": [0-9e\.\-+]*,/"r_total_time_ms": "REPLACED",/
ANALYZE format=json select * from ((select a,b from t1) intersect (select c,e from t2,t3)) a;
select * from ((select a,b from t1) intersect (select c,e from t2,t3)) a;

prepare stmt from "(select a,b from t1) intersect (select c,e from t2,t3);";
execute stmt;
execute stmt;

prepare stmt from "select * from ((select a,b from t1) intersect (select c,e from t2,t3)) a";
execute stmt;
execute stmt;


drop tables t1,t2,t3;


select 1 as a from dual intersect select 1 from dual;
(select 1 from dual) intersect (select 1 from dual);
--error ER_WRONG_USAGE
(select 1 from dual into @v) intersect (select 1 from dual);
--error ER_PARSE_ERROR
select 1 from dual ORDER BY 1 intersect select 1 from dual;

select 1 as a from dual union all select 1 from dual;
--error ER_WRONG_USAGE
select 1 from dual intersect all select 1 from dual;



create table t1 (a int, b blob, a1 int, b1 blob);
create table t2 (c int, d blob, c1 int, d1 blob);
insert into t1 values (1,"ddd", 1, "sdfrrwwww"),(2, "fgh", 2, "dffggtt");
insert into t2 values (2, "fgh", 2, "dffggtt"),(3, "ffggddd", 3, "dfgg");

(select a,b,b1 from t1) intersect (select c,d,d1 from t2);

drop tables t1,t2;

create table t1 (a int, b blob) engine=MyISAM;
create table t2 (c int, d blob) engine=MyISAM;
create table t3 (e int, f blob) engine=MyISAM;
insert into t1 values (1,1),(2,2),(3,3);
insert into t2 values (2,2),(3,3),(4,4);
insert into t3 values (1,1),(2,2),(5,5);

(select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);
select * from ((select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3)) a;

prepare stmt from "(select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);";
execute stmt;
execute stmt;

prepare stmt from "select * from ((select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3)) a";
execute stmt;
execute stmt;

# make sure that blob is used
create table t4  (select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3);
show create table t4;

drop tables t1,t2,t3,t4;

create table t1 (a int, b blob) engine=MyISAM;
create table t2 (c int, d blob) engine=MyISAM;
create table t3 (e int, f blob) engine=MyISAM;
insert into t1 values (1,1),(2,2),(3,3);
insert into t2 values (2,2),(3,3);
insert into t3 values (1,1),(2,2),(3,3);


--sorted_result
(select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3) union (select 4,4);
--sorted_result
(select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3) union (select 4,4) except (select 2,2);

drop tables t1,t2,t3;

create table t1 (a int, b int);
create table t2 (c int, d int);
create table t3 (e int, f int);
insert into t1 values (1,1),(2,2),(3,3);
insert into t2 values (2,2),(3,3);
insert into t3 values (1,1),(2,2),(3,3);

--sorted_result
(select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3) union (select 4,4);
--sorted_result
(select a,b from t1) intersect (select c,d from t2) intersect (select e,f from t3) union (select 4,4) except (select 2,2);

drop tables t1,t2,t3;


--echo #
--echo # INTERSECT precedence
--echo #
create table t1 (a int, b blob) engine=MyISAM;
create table t2 (c int, d blob) engine=MyISAM;
create table t3 (e int, f blob) engine=MyISAM;
insert into t1 values (5,5),(6,6);
insert into t2 values (2,2),(3,3);
insert into t3 values (1,1),(3,3);

--sorted_result
(select a,b from t1) union (select c,d from t2) intersect (select e,f from t3) union (select 4,4);
explain extended
(select a,b from t1) union (select c,d from t2) intersect (select e,f from t3) union (select 4,4);

# test result of linear mix operation 
--sorted_result
(select e,f from t3) intersect (select c,d from t2) union (select a,b from t1) union (select 4,4);
explain extended
(select e,f from t3) intersect (select c,d from t2) union (select a,b from t1) union (select 4,4);

--sorted_result
(/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b` from `test`.`t1`) union /* select#3 */ select `__3`.`c` AS `c`,`__3`.`d` AS `d` from ((/* select#2 */ select `test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`) intersect (/* select#4 */ select `test`.`t3`.`e` AS `e`,`test`.`t3`.`f` AS `f` from `test`.`t3`)) `__3` union (/* select#5 */ select 4 AS `4`,4 AS `4`);

--sorted_result
prepare stmt from "(select a,b from t1) union (select c,d from t2) intersect (select e,f from t3) union (select 4,4)";
execute stmt;
execute stmt;

create view v1 as (select a,b from t1) union (select c,d from t2) intersect (select e,f from t3) union (select 4,4);

--sorted_result
select b,a,b+1 from v1;
--sorted_result
select b,a,b+1 from v1 where a > 3;

create procedure p1()
  select * from v1;
--sorted_result
call p1();
--sorted_result
call p1();
drop procedure p1;

create procedure p1()
  (select a,b from t1) union (select c,d from t2) intersect (select e,f from t3) union (select 4,4);
--sorted_result
call p1();
--sorted_result
call p1();
drop procedure p1;

show create view v1;

drop view v1;
drop tables t1,t2,t3;

