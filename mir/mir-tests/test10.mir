# test for inlining and correct work of bstart and bend
m:		module
		import exit, printf
printf_p:	proto  p:fmt, ...
exit_p:		proto  i64:code
add:		func i32, i32:a, i32:b
                local i64:p
		alloca p, 8192
		mov i32:(p), b
                adds a, a, i32:(p)
                ret a
                endfunc
add_p:	        proto  i32, i32:a1, i32:a2
main:		func
		local i64:r, i64:iter
		mov iter, 0
loop:     	inline add_p, add, r, 4, 2
		add iter, iter, 1
		blt loop, iter, 1000000
		call printf_p, printf, "result = %ld\n", r
		call exit_p, exit, 0
		endfunc
		endmodule
