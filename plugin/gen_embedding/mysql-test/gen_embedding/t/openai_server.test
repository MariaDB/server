source include/have_gen_embedding.inc;
--disable_query_log
source $HOME/openai_api_key.inc;
--enable_query_log

# This file contains tests that use the actual OpenAI API endpoint (instead of our mockup server)

if (!$GEN_EMBEDDING_OPENAI_PLUGIN) {
  skip GEN_EMBEDDING_OPENAI_PLUGIN is not set;
}

--replace_result $OPENAI_PORT OPENAI_PORT

eval set generate_embedding_openai_host="https://api.openai.com/v1/embeddings";
set @model="text-embedding-ada-002";
set @text="Copyright (c) 2019, MariaDB Corporation

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; version 2 of the License.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA";


# Test that the plugin works with non const model name

create table t1 (doc text, model varchar(100));
insert t1 values (@text, @model);
insert t1 values (@text, @model);

select vec_totext(generate_embedding_openai(doc, model)) is null as is_null from t1;

drop table t1;

# Test that an error HTTP response code from OpenAI is handled correctly
# The error might be caused by a wrong api key, which is tested here

set generate_embedding_openai_api_key="wrong-api-key";

call mtr.add_suppression("GENERATE_EMBEDDING_OPENAI: Bad http response code: 401");
select vec_totext(generate_embedding_openai(@text, @model));
