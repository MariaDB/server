source include/not_valgrind.inc;
source include/have_memcached_plugin.inc;
source include/not_windows.inc;
source include/have_innodb.inc;

--disable_query_log
CALL mtr.add_suppression("daemon-memcached-w-batch-size': unsigned");
CALL mtr.add_suppression("Could not obtain server's UPN to be used as target service name");
CALL mtr.add_suppression("InnoDB: Warning: MySQL is trying to drop");
--enable_query_log

--enable_connect_log
SET @tx_isolation= @@global.tx_isolation;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

# Create the memcached tables
--disable_query_log
source include/memcached_config.inc;
call mtr.add_suppression("Plugin daemon_memcached");
--enable_query_log

# describe table for memcache
--replace_result $DAEMON_MEMCACHED_PORT_0 DAEMON_MEMCACHED_PORT_0
eval INSERT INTO containers VALUES ("tcp://127.0.0.1:$DAEMON_MEMCACHED_PORT_0", "test", "t1",
			       "c1", "c2,c21", "c3", "c4", "c5", "PRIMARY", "|");
--replace_result $DAEMON_MEMCACHED_PORT_1 DAEMON_MEMCACHED_PORT_1
eval INSERT INTO containers VALUES ("tcp://127.0.0.1:$DAEMON_MEMCACHED_PORT_1", "test", "t2",
			       "c1", "c2", "c3", "c4", "c5", "PRIMARY", "|");

USE test;

--disable_warnings
DROP TABLE IF EXISTS t1,t2;
--enable_warnings
CREATE TABLE t1        (c1 VARCHAR(32),
			c2 VARCHAR(1024),
			c21 VARCHAR(1024),
			c3 INT, c4 BIGINT UNSIGNED, c5 INT, primary key(c1))
ENGINE = INNODB;

CREATE TABLE t2        (c1 VARCHAR(32),
			c2 VARCHAR(1024),
			c3 INT, c4 BIGINT UNSIGNED, c5 INT, primary key(c1))
ENGINE = INNODB;

INSERT INTO t1 VALUES ('D', 'Darmstadt', 'City', 0, 0, 0);
INSERT INTO t1 VALUES ('B', 'Berlin', 'Mitte', 0, 0, 0);
INSERT INTO t1 VALUES ('C', 'Cottbus', 'West', 0, 0 ,0);
INSERT INTO t1 VALUES ('H', 'Hamburg', 'Norderstedt', 0, 0, 0);

INSERT INTO t2 VALUES ('D', 'Dortmund', 0, 0, 0);
INSERT INTO t2 VALUES ('B', 'Bremen', 0, 0, 0);
INSERT INTO t2 VALUES ('C', 'Celle', 0, 0 ,0);
INSERT INTO t2 VALUES ('H', 'Hannover', 0, 0, 0);

# Tables must exist before plugin can be started!
INSTALL PLUGIN daemon_memcached SONAME 'daemon_memcached.so';

# The following selects are writing all to  memcache otherwise memcache is empty.
--sorted_result
SELECT c1,c2,c21 FROM t1;
--sorted_result
SELECT c1,c2 FROM t2;

SELECT SLEEP(2);

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results with D,B,H,C of default:\n";
$val = $memd->get("D");
if ($val) { print "$val\n"; }
$val = $memd->get("B");
if ($val) { print "$val\n"; }
$val = $memd->get("H");
if ($val) { print "$val\n"; }
$val = $memd->get("C");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_1}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results with D,B,H,C of t2:\n";
$val = $memd->get("D");
if ($val) { print "$val\n"; }
$val = $memd->get("B");
if ($val) { print "$val\n"; }
$val = $memd->get('H');
if ($val) { print "$val\n"; }
$val = $memd->get('C');
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;
--sorted_result
SELECT c1,c2 FROM t2;

perl;
use DBI;
use Cache::Memcached;
my $memd0 = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
my $memd1 = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_1}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set in default:\n";
$val = $memd0->set("E","Essen|Ost");
$val = $memd0->get("E");
if ($val) { print "$val\n"; }
print "Here the memcached results after set in t2:\n";
$val = $memd1->set("E","Essen");
$val = $memd1->get("E");
if ($val) { print "$val\n"; }
$memd0->disconnect_all;
$memd1->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;
--sorted_result
SELECT c1,c2 FROM t2;

perl;
use DBI;
use Cache::Memcached;
my $memd0 = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
my $memd1 = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_1}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after add:\n";
$val = $memd0->add("F","Frankfurt|Sachsenhause");
$val = $memd0->get("F");
if ($val) { print "$val\n"; }
print "Here the memcached results after add in t2:\n";
$val = $memd1->add("F","Frankfurt");
$val = $memd1->get("F");
if ($val) { print "$val\n"; }
$memd0->disconnect_all;
$memd1->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;
--sorted_result
SELECT c1,c2 FROM t2;

perl;
use DBI;
use Cache::Memcached;
my $memd0 = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
my $memd1 = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_1}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after replace:\n";
$val = $memd0->replace("F","Frankfurt a. M.|Sachsenhausen");
$val = $memd0->get("F");
if ($val) { print "$val\n"; }
print "Here the memcached results after replace in t2:\n";
$val = $memd1->replace("F","Frankfurt a. M.");
$val = $memd1->get("F");
if ($val) { print "$val\n"; }
$memd0->disconnect_all;
$memd1->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;
--sorted_result
SELECT c1,c2 FROM t2;

perl;
use DBI;
use Cache::Memcached;
my $memd0 = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
my $memd1 = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_1}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after delete:\n";
$val = $memd0->delete("F");
$val = $memd0->get("F");
if ($val) { print "$val\n"; }
print "Here the memcached results after delete in t2:\n";
$val = $memd1->delete("F");
$val = $memd1->get("F");
if ($val) { print "$val\n"; }
$memd0->disconnect_all;
$memd1->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;
--sorted_result
SELECT c1,c2 FROM t2;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after add Frankfurt|:\n";
$val = $memd->add("F","Frankfurt|");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
print "Here the memcached results after add |Airport:\n";
$val = $memd->add("F","|");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;
--sorted_result
SELECT c1,c2 FROM t2;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after replace Frankfurt a.M.:\n";
$val = $memd->replace("F","Frankfurt a. M.|");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
print "Here the memcached results after replace Sachsenhausen:\n";
$val = $memd->replace("F","|Sachsenhausen");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;
--sorted_result
SELECT c1,c2 FROM t2;

SET sql_mode='NO_ENGINE_SUBSTITUTION';
ALTER TABLE t1 MODIFY c2 int;
SET sql_mode=default;

--sorted_result
SELECT c1,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after add Frankfurt|:\n";
$val = $memd->add("F","Frankfurt|");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
print "Here the memcached results after add |Airport:\n";
$val = $memd->add("F","|");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after flush_all:\n";
$memd->flush_all;
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21 FROM t1;

DROP TABLE t1,t2;

UNINSTALL PLUGIN daemon_memcached;
DROP DATABASE daemon_memcached;

SET @@global.tx_isolation= @tx_isolation;
