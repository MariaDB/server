source include/not_valgrind.inc;
source include/have_memcached_plugin.inc;
source include/not_windows.inc;
source include/have_innodb.inc;

--enable_connect_log
SET @tx_isolation= @@global.tx_isolation;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

# Create the memcached tables
--disable_query_log
source include/memcached_config.inc;
call mtr.add_suppression("Plugin daemon_memcached");
--enable_query_log

# describe table for memcached
--replace_result $DAEMON_MEMCACHED_PORT_0 DAEMON_MEMCACHED_PORT_0
eval INSERT INTO containers VALUES ("tcp://127.0.0.1:$DAEMON_MEMCACHED_PORT_0", "test", "t1", "c1", "c2", "c3", "c4", "c5", "PRIMARY", "|");

USE test;

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (c1 VARCHAR(32),
                 c2 INT,
                 c3 INT, c4 BIGINT UNSIGNED, c5 INT, primary key(c1))
ENGINE = INNODB;

# Tables must exist before plugin can be started!
INSTALL PLUGIN daemon_memcached SONAME 'daemon_memcached.so';

--sorted_result
SELECT c1,c2 FROM t1;

SELECT SLEEP(2);

--echo # --- Value column type: VARCHAR ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 VARCHAR(128);

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","0");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","18446744073709551615");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-1");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","18446744073709551616");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

# ----------------------------------------------------------

--echo # --- Value column type: BIGINT ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 BIGINT;

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","-9223372036854775808");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","9223372036854775807");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-9223372036854775809");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","9223372036854775808");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

--echo # --- Value column type: BIGINT UNSIGNED ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 BIGINT UNSIGNED;

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","0");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","18446744073709551615");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-1");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","18446744073709551616");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

# ----------------------------------------------------------

--echo # --- Value column type: INT ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 INT;

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","-2147483648");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","2147483647");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-2147483649");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","2147483648");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

# ----------------------------------------------------------

--echo # --- Value column type: INT UNSIGNED ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 INT UNSIGNED;

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","0");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","4294967295");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-1");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","4294967296");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

# ----------------------------------------------------------

--echo # --- Value column type: SMALLINT ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 SMALLINT;

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","-32768");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","32767");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-32769");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","32768");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

# ----------------------------------------------------------

--echo # --- Value column type: SMALLINT UNSIGNED ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 SMALLINT UNSIGNED;

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","0");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","65535");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-1");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","65536");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

# ----------------------------------------------------------

--echo # --- Value column type: TINYINT ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 TINYINT;

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","-128");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","127");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-129");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","128");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

# ----------------------------------------------------------

--echo # --- Value column type: TINYINT UNSIGNED ---

DELETE FROM t1;
ALTER TABLE t1 MODIFY c2 TINYINT UNSIGNED;

perl;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set 0:\n";
$val = $memd->set("A","0");
$val = $memd->get("A");
print "A: $val\n";
print "Here the memcached results after set 1:\n";
$val = $memd->set("B","1");
$val = $memd->get("B");
print "B: $val\n";
print "Here the memcached results after set -1:\n";
$val = $memd->set("C","-1");
$val = $memd->get("C");
print "C: $val\n";
print "Here the memcached results after set min border:\n";
$val = $memd->set("D","0");
$val = $memd->get("D");
print "D: $val\n";
print "Here the memcached results after set max border:\n";
$val = $memd->set("E","255");
$val = $memd->get("E");
print "E: $val\n";
print "Here the memcached results after set under min border:\n";
$val = $memd->set("F","-1");
$val = $memd->get("F");
print "F: $val\n";
print "Here the memcached results after set over max border:\n";
$val = $memd->set("G","256");
$val = $memd->get("G");
print "G: $val\n";
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2 FROM t1;

# ----------------------------------------------------------

DROP TABLE t1;
SET sql_mode=default;

UNINSTALL PLUGIN daemon_memcached;
DROP DATABASE daemon_memcached;

SET @@global.tx_isolation= @tx_isolation;
