source include/not_valgrind.inc;
source include/have_memcached_plugin.inc;
source include/not_windows.inc;
source include/have_innodb.inc;

--disable_query_log
CALL mtr.add_suppression("daemon-memcached-w-batch-size': unsigned");
CALL mtr.add_suppression("Could not obtain server's UPN to be used as target service name");
CALL mtr.add_suppression("InnoDB: Warning: MySQL is trying to drop");
--enable_query_log

--enable_connect_log
SET @tx_isolation= @@global.tx_isolation;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

# Create the memcached tables
--disable_query_log
source include/memcached_config.inc;
call mtr.add_suppression("Plugin daemon_memcached");
--enable_query_log

# describe table for memcache
--replace_result $DAEMON_MEMCACHED_PORT_0 DAEMON_MEMCACHED_PORT_0
eval INSERT INTO containers VALUES ("tcp://127.0.0.1:$DAEMON_MEMCACHED_PORT_0", "test", "t1",
			       "c1", "c2,c21,c22,c23,c24,c25", "c3", "c4", "c5", "PRIMARY", "0");

USE test;

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1        (c1 VARCHAR(32),
			c2 VARCHAR(40),
			c21 VARCHAR(40),
			c22 VARCHAR(40),
			c23 VARCHAR(40),
			c24 VARCHAR(40),
			c25 VARCHAR(40),
			c3 INT, c4 BIGINT UNSIGNED, c5 INT, primary key(c1))
ENGINE = INNODB;

INSERT INTO t1 VALUES ('D', 'Darmstadt', 'City','1', 'dddddddddddddd', '1234', '2012', 0, 0, 0);
INSERT INTO t1 VALUES ('B', 'Berlin', 'Mitte', '0', 'bbbbbbbbbbbbbb', '2345', '2012', 0, 0, 0);
INSERT INTO t1 VALUES ('C', 'Cottbus', 'West', '3', 'cccccccccccccc', '3456', '0', 0, 0 ,0);
INSERT INTO t1 VALUES ('H', 'Hamburg', 'Norderstedt', '4', 'hhhhhhhhhh', '4567', '2012', 0, 0, 0);

# Tables must exist before plugin can be started!
INSTALL PLUGIN daemon_memcached SONAME 'daemon_memcached.so';

# The following select is writing all to  memcache otherwisw memcache is empty.
--sorted_result
SELECT c1,c2,c21,c22,c23,c24,c25 FROM t1;

SELECT SLEEP(2);

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results with D,B,H,C:\n";
$val = $memd->get("D");
if ($val) { print "$val\n"; }
$val = $memd->get("B");
if ($val) { print "$val\n"; }
$val = $memd->get("H");
if ($val) { print "$val\n"; }
$val = $memd->get("C");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21,c22,c23,c24,c25 FROM t1;

# Unload and reload the plugin for updating the options
UNINSTALL PLUGIN daemon_memcached;

# Let uninstall completes
UPDATE daemon_memcached.containers SET sep='|';
# Wait until uninstall done.
let $wait_condition= SELECT COUNT(*)>0 FROM INFORMATION_SCHEMA.PROCESSLIST
    WHERE INFO LIKE '%UNINSTALL PLUGIN%';
source include/wait_condition.inc;
INSTALL PLUGIN daemon_memcached SONAME 'daemon_memcached.so';

SELECT SLEEP(2);

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:$ENV{DAEMON_MEMCACHED_PORT_0}" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here the memcached results after set:\n";
$val = $memd->set("E","Essen|Ost|5|eeeeeeeeeee|5678|2012");
$val = $memd->get("E");
if ($val) { print "$val\n"; }
#$val = $memd->set("E","Essen0Ost050eeeeeeeeeee0567802012");
#$val = $memd->get("E");
#if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c2,c21,c22,c23,c24,c25 FROM t1;

DROP TABLE t1;

UNINSTALL PLUGIN daemon_memcached;
DROP DATABASE daemon_memcached;

SET @@global.tx_isolation= @tx_isolation;
