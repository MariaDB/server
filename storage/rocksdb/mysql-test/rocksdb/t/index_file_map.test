--source include/have_rocksdb.inc

#
# Information Schema index file map
#

--disable_warnings
DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS t2;
--enable_warnings


CREATE TABLE t1 (i INT PRIMARY KEY, j INT, INDEX(j)) ENGINE = ROCKSDB;
CREATE TABLE t2 (k INT PRIMARY KEY, l INT REFERENCES t1.i) ENGINE = ROCKSDB;

INSERT INTO t1 VALUES (1,2), (2,4), (3,6), (4,8), (5,10);
INSERT INTO t2 VALUES (100,1), (200,2), (300,3), (400,4);

COMMIT;

# Flush memtable out to SST
SET GLOBAL rocksdb_force_flush_memtable_now = 1;

###############################################################################
# Test that expected index_file_map data exists
###############################################################################

# Return the data for the primary key of t1
--replace_column 1 # 2 # 3 SSTNAME 5 # 6 # 7 # 8 # 9 #
SELECT * FROM INFORMATION_SCHEMA.ROCKSDB_INDEX_FILE_MAP
WHERE INDEX_NUMBER =
    (SELECT INDEX_NUMBER FROM INFORMATION_SCHEMA.ROCKSDB_DDL
     WHERE TABLE_NAME = 't1' AND INDEX_NAME = "PRIMARY");

# Return the data for the secondary index of t1
--replace_column 1 # 2 # 3 SSTNAME 5 # 6 # 7 # 8 # 9 #
SELECT * FROM INFORMATION_SCHEMA.ROCKSDB_INDEX_FILE_MAP
WHERE INDEX_NUMBER =
    (SELECT INDEX_NUMBER FROM INFORMATION_SCHEMA.ROCKSDB_DDL
     WHERE TABLE_NAME = 't1' AND INDEX_NAME = "j");

# Return the data for the primary index of t2
--replace_column 1 # 2 # 3 SSTNAME 5 # 6 # 7 # 8 # 9 #
SELECT * FROM INFORMATION_SCHEMA.ROCKSDB_INDEX_FILE_MAP
WHERE INDEX_NUMBER =
    (SELECT INDEX_NUMBER FROM INFORMATION_SCHEMA.ROCKSDB_DDL
     WHERE TABLE_NAME = 't2' AND INDEX_NAME = "PRIMARY");

# cleanup
DROP TABLE t1;
DROP TABLE t2;
