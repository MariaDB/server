--source include/have_rocksdb.inc
--source include/have_partition.inc

--let $CF=
--source unique_sec.inc

--echo #
--echo # Issue #88: Creating unique index over column with duplicate values succeeds
--echo #
create table t1 (pk int primary key, a int) engine=rocksdb;

insert into t1 values 
(1, 1),
(2, 2),
(3, 3),
(4, 1),
(5, 5);

--error ER_DUP_ENTRY
alter table t1 add unique(a);
drop table t1;

--echo #
--echo # Issue #111
--echo #
CREATE TABLE t2 (pk int, a int, PRIMARY KEY (pk, a), UNIQUE KEY (a)) ENGINE=ROCKSDB PARTITION BY KEY (a) PARTITIONS 16;

INSERT INTO t2 VALUES (1,1);
--error ER_DUP_ENTRY
INSERT INTO t2 VALUES (1,1);
--error ER_DUP_ENTRY
INSERT INTO t2 VALUES (2,1);
DROP TABLE t2;

--echo #
--echo # Issue #491 (https://github.com/facebook/mysql-5.6/issues/491)
--echo #
CREATE TABLE t (a BLOB, PRIMARY KEY(a(2)), UNIQUE KEY (a(1))) engine=rocksdb;
INSERT INTO t VALUES('a');
CHECK TABLE t EXTENDED;
DROP TABLE t;

CREATE TABLE t (a VARCHAR(255), PRIMARY KEY(a), UNIQUE KEY (a(1))) engine=rocksdb;
INSERT INTO t VALUES('a');
CHECK TABLE t EXTENDED;
DROP TABLE t;

CREATE TABLE t (a VARCHAR(255), PRIMARY KEY(a(2)), UNIQUE KEY (a(1))) engine=rocksdb;
INSERT INTO t VALUES('a');
CHECK TABLE t EXTENDED;
DROP TABLE t;

--echo #
--echo # Validate lock acquired on SK during delete
--echo #
CREATE TABLE t3 (pk INT PRIMARY KEY, sk INT, UNIQUE KEY (sk)) ENGINE=ROCKSDB;
INSERT INTO t3 VALUES (1, 100);

BEGIN;
--echo # This should acquire a lock on sk = 100
DELETE FROM t3 WHERE pk = 1;

connect (con1, localhost, root,,);
connection con1;
set session rocksdb_lock_wait_timeout=1;
set session transaction_isolation='REPEATABLE-READ';
SELECT * FROM t3;
--echo # RR: This should fail with lock wait timeout due to sk = 100
--error ER_LOCK_WAIT_TIMEOUT
INSERT INTO t3 VALUES (2, 100);

set session transaction_isolation='READ-COMMITTED';
--echo # RC: This should fail with lock wait timeout due to sk = 100
--error ER_LOCK_WAIT_TIMEOUT
INSERT INTO t3 VALUES (2, 100);

connection default;
--echo # The original transaction should be able to perform an insert
INSERT INTO t3 VALUES (3, 100);
COMMIT;
SELECT * FROM t3;

disconnect con1;
DROP TABLE t3;
